/* global a2a*/
(function (Drupal) {
  'use strict';

  Drupal.behaviors.addToAny = {
    attach: function (context, settings) {
      // If not the full document (it's probably AJAX), and window.a2a exists
      if (context !== document && window.a2a) {
        a2a.init_all(); // Init all uninitiated AddToAny instances
      }
    }
  };

})(Drupal);
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal) {
  Drupal.theme.progressBar = function (id) {
    return "<div id=\"".concat(id, "\" class=\"progress\" aria-live=\"polite\">") + '<div class="progress__label">&nbsp;</div>' + '<div class="progress__track"><div class="progress__bar"></div></div>' + '<div class="progress__percentage"></div>' + '<div class="progress__description">&nbsp;</div>' + '</div>';
  };

  Drupal.ProgressBar = function (id, updateCallback, method, errorCallback) {
    this.id = id;
    this.method = method || 'GET';
    this.updateCallback = updateCallback;
    this.errorCallback = errorCallback;
    this.element = $(Drupal.theme('progressBar', id));
  };

  $.extend(Drupal.ProgressBar.prototype, {
    setProgress: function setProgress(percentage, message, label) {
      if (percentage >= 0 && percentage <= 100) {
        $(this.element).find('div.progress__bar').css('width', "".concat(percentage, "%"));
        $(this.element).find('div.progress__percentage').html("".concat(percentage, "%"));
      }

      $('div.progress__description', this.element).html(message);
      $('div.progress__label', this.element).html(label);

      if (this.updateCallback) {
        this.updateCallback(percentage, message, this);
      }
    },
    startMonitoring: function startMonitoring(uri, delay) {
      this.delay = delay;
      this.uri = uri;
      this.sendPing();
    },
    stopMonitoring: function stopMonitoring() {
      clearTimeout(this.timer);
      this.uri = null;
    },
    sendPing: function sendPing() {
      if (this.timer) {
        clearTimeout(this.timer);
      }

      if (this.uri) {
        var pb = this;
        var uri = this.uri;

        if (uri.indexOf('?') === -1) {
          uri += '?';
        } else {
          uri += '&';
        }

        uri += '_format=json';
        $.ajax({
          type: this.method,
          url: uri,
          data: '',
          dataType: 'json',
          success: function success(progress) {
            if (progress.status === 0) {
              pb.displayError(progress.data);
              return;
            }

            pb.setProgress(progress.percentage, progress.message, progress.label);
            pb.timer = setTimeout(function () {
              pb.sendPing();
            }, pb.delay);
          },
          error: function error(xmlhttp) {
            var e = new Drupal.AjaxError(xmlhttp, pb.uri);
            pb.displayError("<pre>".concat(e.message, "</pre>"));
          }
        });
      }
    },
    displayError: function displayError(string) {
      var error = $('<div class="messages messages--error"></div>').html(string);
      $(this.element).before(error).hide();

      if (this.errorCallback) {
        this.errorCallback(this);
      }
    }
  });
})(jQuery, Drupal);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, once) {
  var deprecatedMessageSuffix = "is deprecated in Drupal 9.3.0 and will be removed in Drupal 10.0.0. Use the core/once library instead. See https://www.drupal.org/node/3158256";
  var originalJQOnce = $.fn.once;
  var originalJQRemoveOnce = $.fn.removeOnce;

  $.fn.once = function jQueryOnce(id) {
    Drupal.deprecationError({
      message: "jQuery.once() ".concat(deprecatedMessageSuffix)
    });
    return originalJQOnce.apply(this, [id]);
  };

  $.fn.removeOnce = function jQueryRemoveOnce(id) {
    Drupal.deprecationError({
      message: "jQuery.removeOnce() ".concat(deprecatedMessageSuffix)
    });
    return originalJQRemoveOnce.apply(this, [id]);
  };

  var drupalOnce = once;

  function augmentedOnce(id, selector, context) {
    originalJQOnce.apply($(selector, context), [id]);
    return drupalOnce(id, selector, context);
  }

  function remove(id, selector, context) {
    originalJQRemoveOnce.apply($(selector, context), [id]);
    return drupalOnce.remove(id, selector, context);
  }

  window.once = Object.assign(augmentedOnce, drupalOnce, {
    remove: remove
  });
})(jQuery, once);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function (Drupal) {
  Drupal.behaviors.responsiveImageAJAX = {
    attach: function attach() {
      if (window.picturefill) {
        window.picturefill();
      }
    }
  };
})(Drupal);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

(function ($, window, Drupal, drupalSettings, _ref) {
  var isFocusable = _ref.isFocusable,
      tabbable = _ref.tabbable;
  Drupal.behaviors.AJAX = {
    attach: function attach(context, settings) {
      function loadAjaxBehavior(base) {
        var elementSettings = settings.ajax[base];

        if (typeof elementSettings.selector === 'undefined') {
          elementSettings.selector = "#".concat(base);
        }

        once('drupal-ajax', $(elementSettings.selector)).forEach(function (el) {
          elementSettings.element = el;
          elementSettings.base = base;
          Drupal.ajax(elementSettings);
        });
      }

      Object.keys(settings.ajax || {}).forEach(function (base) {
        return loadAjaxBehavior(base);
      });
      Drupal.ajax.bindAjaxLinks(document.body);
      once('ajax', '.use-ajax-submit').forEach(function (el) {
        var elementSettings = {};
        elementSettings.url = $(el.form).attr('action');
        elementSettings.setClick = true;
        elementSettings.event = 'click';
        elementSettings.progress = {
          type: 'throbber'
        };
        elementSettings.base = el.id;
        elementSettings.element = el;
        Drupal.ajax(elementSettings);
      });
    },
    detach: function detach(context, settings, trigger) {
      if (trigger === 'unload') {
        Drupal.ajax.expired().forEach(function (instance) {
          Drupal.ajax.instances[instance.instanceIndex] = null;
        });
      }
    }
  };

  Drupal.AjaxError = function (xmlhttp, uri, customMessage) {
    var statusCode;
    var statusText;
    var responseText;

    if (xmlhttp.status) {
      statusCode = "\n".concat(Drupal.t('An AJAX HTTP error occurred.'), "\n").concat(Drupal.t('HTTP Result Code: !status', {
        '!status': xmlhttp.status
      }));
    } else {
      statusCode = "\n".concat(Drupal.t('An AJAX HTTP request terminated abnormally.'));
    }

    statusCode += "\n".concat(Drupal.t('Debugging information follows.'));
    var pathText = "\n".concat(Drupal.t('Path: !uri', {
      '!uri': uri
    }));
    statusText = '';

    try {
      statusText = "\n".concat(Drupal.t('StatusText: !statusText', {
        '!statusText': xmlhttp.statusText.trim()
      }));
    } catch (e) {}

    responseText = '';

    try {
      responseText = "\n".concat(Drupal.t('ResponseText: !responseText', {
        '!responseText': xmlhttp.responseText.trim()
      }));
    } catch (e) {}

    responseText = responseText.replace(/<("[^"]*"|'[^']*'|[^'">])*>/gi, '');
    responseText = responseText.replace(/[\n]+\s+/g, '\n');
    var readyStateText = xmlhttp.status === 0 ? "\n".concat(Drupal.t('ReadyState: !readyState', {
      '!readyState': xmlhttp.readyState
    })) : '';
    customMessage = customMessage ? "\n".concat(Drupal.t('CustomMessage: !customMessage', {
      '!customMessage': customMessage
    })) : '';
    this.message = statusCode + pathText + statusText + customMessage + responseText + readyStateText;
    this.name = 'AjaxError';
  };

  Drupal.AjaxError.prototype = new Error();
  Drupal.AjaxError.prototype.constructor = Drupal.AjaxError;

  Drupal.ajax = function (settings) {
    if (arguments.length !== 1) {
      throw new Error('Drupal.ajax() function must be called with one configuration object only');
    }

    var base = settings.base || false;
    var element = settings.element || false;
    delete settings.base;
    delete settings.element;

    if (!settings.progress && !element) {
      settings.progress = false;
    }

    var ajax = new Drupal.Ajax(base, element, settings);
    ajax.instanceIndex = Drupal.ajax.instances.length;
    Drupal.ajax.instances.push(ajax);
    return ajax;
  };

  Drupal.ajax.instances = [];

  Drupal.ajax.expired = function () {
    return Drupal.ajax.instances.filter(function (instance) {
      return instance && instance.element !== false && !document.body.contains(instance.element);
    });
  };

  Drupal.ajax.bindAjaxLinks = function (element) {
    once('ajax', '.use-ajax', element).forEach(function (ajaxLink) {
      var $linkElement = $(ajaxLink);
      var elementSettings = {
        progress: {
          type: 'throbber'
        },
        dialogType: $linkElement.data('dialog-type'),
        dialog: $linkElement.data('dialog-options'),
        dialogRenderer: $linkElement.data('dialog-renderer'),
        base: $linkElement.attr('id'),
        element: ajaxLink
      };
      var href = $linkElement.attr('href');

      if (href) {
        elementSettings.url = href;
        elementSettings.event = 'click';
      }

      Drupal.ajax(elementSettings);
    });
  };

  Drupal.Ajax = function (base, element, elementSettings) {
    var defaults = {
      event: element ? 'mousedown' : null,
      keypress: true,
      selector: base ? "#".concat(base) : null,
      effect: 'none',
      speed: 'none',
      method: 'replaceWith',
      progress: {
        type: 'throbber',
        message: Drupal.t('Please wait...')
      },
      submit: {
        js: true
      }
    };
    $.extend(this, defaults, elementSettings);
    this.commands = new Drupal.AjaxCommands();
    this.instanceIndex = false;

    if (this.wrapper) {
      this.wrapper = "#".concat(this.wrapper);
    }

    this.element = element;
    this.element_settings = elementSettings;
    this.elementSettings = elementSettings;

    if (this.element && this.element.form) {
      this.$form = $(this.element.form);
    }

    if (!this.url) {
      var $element = $(this.element);

      if ($element.is('a')) {
        this.url = $element.attr('href');
      } else if (this.element && element.form) {
        this.url = this.$form.attr('action');
      }
    }

    var originalUrl = this.url;
    this.url = this.url.replace(/\/nojs(\/|$|\?|#)/, '/ajax$1');

    if (drupalSettings.ajaxTrustedUrl[originalUrl]) {
      drupalSettings.ajaxTrustedUrl[this.url] = true;
    }

    var ajax = this;
    ajax.options = {
      url: ajax.url,
      data: ajax.submit,
      beforeSerialize: function beforeSerialize(elementSettings, options) {
        return ajax.beforeSerialize(elementSettings, options);
      },
      beforeSubmit: function beforeSubmit(formValues, elementSettings, options) {
        ajax.ajaxing = true;
        return ajax.beforeSubmit(formValues, elementSettings, options);
      },
      beforeSend: function beforeSend(xmlhttprequest, options) {
        ajax.ajaxing = true;
        return ajax.beforeSend(xmlhttprequest, options);
      },
      success: function success(response, status, xmlhttprequest) {
        if (typeof response === 'string') {
          response = $.parseJSON(response);
        }

        if (response !== null && !drupalSettings.ajaxTrustedUrl[ajax.url]) {
          if (xmlhttprequest.getResponseHeader('X-Drupal-Ajax-Token') !== '1') {
            var customMessage = Drupal.t('The response failed verification so will not be processed.');
            return ajax.error(xmlhttprequest, ajax.url, customMessage);
          }
        }

        return ajax.success(response, status);
      },
      complete: function complete(xmlhttprequest, status) {
        ajax.ajaxing = false;

        if (status === 'error' || status === 'parsererror') {
          return ajax.error(xmlhttprequest, ajax.url);
        }
      },
      dataType: 'json',
      jsonp: false,
      type: 'POST'
    };

    if (elementSettings.dialog) {
      ajax.options.data.dialogOptions = elementSettings.dialog;
    }

    if (ajax.options.url.indexOf('?') === -1) {
      ajax.options.url += '?';
    } else {
      ajax.options.url += '&';
    }

    var wrapper = "drupal_".concat(elementSettings.dialogType || 'ajax');

    if (elementSettings.dialogRenderer) {
      wrapper += ".".concat(elementSettings.dialogRenderer);
    }

    ajax.options.url += "".concat(Drupal.ajax.WRAPPER_FORMAT, "=").concat(wrapper);
    $(ajax.element).on(elementSettings.event, function (event) {
      if (!drupalSettings.ajaxTrustedUrl[ajax.url] && !Drupal.url.isLocal(ajax.url)) {
        throw new Error(Drupal.t('The callback URL is not local and not trusted: !url', {
          '!url': ajax.url
        }));
      }

      return ajax.eventResponse(this, event);
    });

    if (elementSettings.keypress) {
      $(ajax.element).on('keypress', function (event) {
        return ajax.keypressResponse(this, event);
      });
    }

    if (elementSettings.prevent) {
      $(ajax.element).on(elementSettings.prevent, false);
    }
  };

  Drupal.ajax.WRAPPER_FORMAT = '_wrapper_format';
  Drupal.Ajax.AJAX_REQUEST_PARAMETER = '_drupal_ajax';

  Drupal.Ajax.prototype.execute = function () {
    if (this.ajaxing) {
      return;
    }

    try {
      this.beforeSerialize(this.element, this.options);
      return $.ajax(this.options);
    } catch (e) {
      this.ajaxing = false;
      window.alert("An error occurred while attempting to process ".concat(this.options.url, ": ").concat(e.message));
      return $.Deferred().reject();
    }
  };

  Drupal.Ajax.prototype.keypressResponse = function (element, event) {
    var ajax = this;

    if (event.which === 13 || event.which === 32 && element.type !== 'text' && element.type !== 'textarea' && element.type !== 'tel' && element.type !== 'number') {
      event.preventDefault();
      event.stopPropagation();
      $(element).trigger(ajax.elementSettings.event);
    }
  };

  Drupal.Ajax.prototype.eventResponse = function (element, event) {
    event.preventDefault();
    event.stopPropagation();
    var ajax = this;

    if (ajax.ajaxing) {
      return;
    }

    try {
      if (ajax.$form) {
        if (ajax.setClick) {
          element.form.clk = element;
        }

        ajax.$form.ajaxSubmit(ajax.options);
      } else {
        ajax.beforeSerialize(ajax.element, ajax.options);
        $.ajax(ajax.options);
      }
    } catch (e) {
      ajax.ajaxing = false;
      window.alert("An error occurred while attempting to process ".concat(ajax.options.url, ": ").concat(e.message));
    }
  };

  Drupal.Ajax.prototype.beforeSerialize = function (element, options) {
    if (this.$form && document.body.contains(this.$form.get(0))) {
      var settings = this.settings || drupalSettings;
      Drupal.detachBehaviors(this.$form.get(0), settings, 'serialize');
    }

    options.data[Drupal.Ajax.AJAX_REQUEST_PARAMETER] = 1;
    var pageState = drupalSettings.ajaxPageState;
    options.data['ajax_page_state[theme]'] = pageState.theme;
    options.data['ajax_page_state[theme_token]'] = pageState.theme_token;
    options.data['ajax_page_state[libraries]'] = pageState.libraries;
  };

  Drupal.Ajax.prototype.beforeSubmit = function (formValues, element, options) {};

  Drupal.Ajax.prototype.beforeSend = function (xmlhttprequest, options) {
    if (this.$form) {
      options.extraData = options.extraData || {};
      options.extraData.ajax_iframe_upload = '1';
      var v = $.fieldValue(this.element);

      if (v !== null) {
        options.extraData[this.element.name] = v;
      }
    }

    $(this.element).prop('disabled', true);

    if (!this.progress || !this.progress.type) {
      return;
    }

    var progressIndicatorMethod = "setProgressIndicator".concat(this.progress.type.slice(0, 1).toUpperCase()).concat(this.progress.type.slice(1).toLowerCase());

    if (progressIndicatorMethod in this && typeof this[progressIndicatorMethod] === 'function') {
      this[progressIndicatorMethod].call(this);
    }
  };

  Drupal.theme.ajaxProgressThrobber = function (message) {
    var messageMarkup = typeof message === 'string' ? Drupal.theme('ajaxProgressMessage', message) : '';
    var throbber = '<div class="throbber">&nbsp;</div>';
    return "<div class=\"ajax-progress ajax-progress-throbber\">".concat(throbber).concat(messageMarkup, "</div>");
  };

  Drupal.theme.ajaxProgressIndicatorFullscreen = function () {
    return '<div class="ajax-progress ajax-progress-fullscreen">&nbsp;</div>';
  };

  Drupal.theme.ajaxProgressMessage = function (message) {
    return "<div class=\"message\">".concat(message, "</div>");
  };

  Drupal.theme.ajaxProgressBar = function ($element) {
    return $('<div class="ajax-progress ajax-progress-bar"></div>').append($element);
  };

  Drupal.Ajax.prototype.setProgressIndicatorBar = function () {
    var progressBar = new Drupal.ProgressBar("ajax-progress-".concat(this.element.id), $.noop, this.progress.method, $.noop);

    if (this.progress.message) {
      progressBar.setProgress(-1, this.progress.message);
    }

    if (this.progress.url) {
      progressBar.startMonitoring(this.progress.url, this.progress.interval || 1500);
    }

    this.progress.element = $(Drupal.theme('ajaxProgressBar', progressBar.element));
    this.progress.object = progressBar;
    $(this.element).after(this.progress.element);
  };

  Drupal.Ajax.prototype.setProgressIndicatorThrobber = function () {
    this.progress.element = $(Drupal.theme('ajaxProgressThrobber', this.progress.message));
    $(this.element).after(this.progress.element);
  };

  Drupal.Ajax.prototype.setProgressIndicatorFullscreen = function () {
    this.progress.element = $(Drupal.theme('ajaxProgressIndicatorFullscreen'));
    $('body').append(this.progress.element);
  };

  Drupal.Ajax.prototype.success = function (response, status) {
    var _this = this;

    if (this.progress.element) {
      $(this.progress.element).remove();
    }

    if (this.progress.object) {
      this.progress.object.stopMonitoring();
    }

    $(this.element).prop('disabled', false);
    var elementParents = $(this.element).parents('[data-drupal-selector]').addBack().toArray();
    var focusChanged = false;
    Object.keys(response || {}).forEach(function (i) {
      if (response[i].command && _this.commands[response[i].command]) {
        _this.commands[response[i].command](_this, response[i], status);

        if (response[i].command === 'invoke' && response[i].method === 'focus' || response[i].command === 'focusFirst') {
          focusChanged = true;
        }
      }
    });

    if (!focusChanged && this.element && !$(this.element).data('disable-refocus')) {
      var target = false;

      for (var n = elementParents.length - 1; !target && n >= 0; n--) {
        target = document.querySelector("[data-drupal-selector=\"".concat(elementParents[n].getAttribute('data-drupal-selector'), "\"]"));
      }

      if (target) {
        $(target).trigger('focus');
      }
    }

    if (this.$form && document.body.contains(this.$form.get(0))) {
      var settings = this.settings || drupalSettings;
      Drupal.attachBehaviors(this.$form.get(0), settings);
    }

    this.settings = null;
  };

  Drupal.Ajax.prototype.getEffect = function (response) {
    var type = response.effect || this.effect;
    var speed = response.speed || this.speed;
    var effect = {};

    if (type === 'none') {
      effect.showEffect = 'show';
      effect.hideEffect = 'hide';
      effect.showSpeed = '';
    } else if (type === 'fade') {
      effect.showEffect = 'fadeIn';
      effect.hideEffect = 'fadeOut';
      effect.showSpeed = speed;
    } else {
      effect.showEffect = "".concat(type, "Toggle");
      effect.hideEffect = "".concat(type, "Toggle");
      effect.showSpeed = speed;
    }

    return effect;
  };

  Drupal.Ajax.prototype.error = function (xmlhttprequest, uri, customMessage) {
    if (this.progress.element) {
      $(this.progress.element).remove();
    }

    if (this.progress.object) {
      this.progress.object.stopMonitoring();
    }

    $(this.wrapper).show();
    $(this.element).prop('disabled', false);

    if (this.$form && document.body.contains(this.$form.get(0))) {
      var settings = this.settings || drupalSettings;
      Drupal.attachBehaviors(this.$form.get(0), settings);
    }

    throw new Drupal.AjaxError(xmlhttprequest, uri, customMessage);
  };

  Drupal.theme.ajaxWrapperNewContent = function ($newContent, ajax, response) {
    return (response.effect || ajax.effect) !== 'none' && $newContent.filter(function (i) {
      return !($newContent[i].nodeName === '#comment' || $newContent[i].nodeName === '#text' && /^(\s|\n|\r)*$/.test($newContent[i].textContent));
    }).length > 1 ? Drupal.theme('ajaxWrapperMultipleRootElements', $newContent) : $newContent;
  };

  Drupal.theme.ajaxWrapperMultipleRootElements = function ($elements) {
    return $('<div></div>').append($elements);
  };

  Drupal.AjaxCommands = function () {};

  Drupal.AjaxCommands.prototype = {
    insert: function insert(ajax, response) {
      var $wrapper = response.selector ? $(response.selector) : $(ajax.wrapper);
      var method = response.method || ajax.method;
      var effect = ajax.getEffect(response);
      var settings = response.settings || ajax.settings || drupalSettings;
      var $newContent = $($.parseHTML(response.data, document, true));
      $newContent = Drupal.theme('ajaxWrapperNewContent', $newContent, ajax, response);

      switch (method) {
        case 'html':
        case 'replaceWith':
        case 'replaceAll':
        case 'empty':
        case 'remove':
          Drupal.detachBehaviors($wrapper.get(0), settings);
          break;

        default:
          break;
      }

      $wrapper[method]($newContent);

      if (effect.showEffect !== 'show') {
        $newContent.hide();
      }

      var $ajaxNewContent = $newContent.find('.ajax-new-content');

      if ($ajaxNewContent.length) {
        $ajaxNewContent.hide();
        $newContent.show();
        $ajaxNewContent[effect.showEffect](effect.showSpeed);
      } else if (effect.showEffect !== 'show') {
        $newContent[effect.showEffect](effect.showSpeed);
      }

      if ($newContent.parents('html').length) {
        $newContent.each(function (index, element) {
          if (element.nodeType === Node.ELEMENT_NODE) {
            Drupal.attachBehaviors(element, settings);
          }
        });
      }
    },
    remove: function remove(ajax, response, status) {
      var settings = response.settings || ajax.settings || drupalSettings;
      $(response.selector).each(function () {
        Drupal.detachBehaviors(this, settings);
      }).remove();
    },
    changed: function changed(ajax, response, status) {
      var $element = $(response.selector);

      if (!$element.hasClass('ajax-changed')) {
        $element.addClass('ajax-changed');

        if (response.asterisk) {
          $element.find(response.asterisk).append(" <abbr class=\"ajax-changed\" title=\"".concat(Drupal.t('Changed'), "\">*</abbr> "));
        }
      }
    },
    alert: function alert(ajax, response, status) {
      window.alert(response.text);
    },
    announce: function announce(ajax, response) {
      if (response.priority) {
        Drupal.announce(response.text, response.priority);
      } else {
        Drupal.announce(response.text);
      }
    },
    redirect: function redirect(ajax, response, status) {
      window.location = response.url;
    },
    css: function css(ajax, response, status) {
      $(response.selector).css(response.argument);
    },
    settings: function settings(ajax, response, status) {
      var ajaxSettings = drupalSettings.ajax;

      if (ajaxSettings) {
        Drupal.ajax.expired().forEach(function (instance) {
          if (instance.selector) {
            var selector = instance.selector.replace('#', '');

            if (selector in ajaxSettings) {
              delete ajaxSettings[selector];
            }
          }
        });
      }

      if (response.merge) {
        $.extend(true, drupalSettings, response.settings);
      } else {
        ajax.settings = response.settings;
      }
    },
    data: function data(ajax, response, status) {
      $(response.selector).data(response.name, response.value);
    },
    focusFirst: function focusFirst(ajax, response, status) {
      var focusChanged = false;
      var container = document.querySelector(response.selector);

      if (container) {
        var tabbableElements = tabbable(container);

        if (tabbableElements.length) {
          tabbableElements[0].focus();
          focusChanged = true;
        } else if (isFocusable(container)) {
          container.focus();
          focusChanged = true;
        }
      }

      if (ajax.hasOwnProperty('element') && !focusChanged) {
        ajax.element.focus();
      }
    },
    invoke: function invoke(ajax, response, status) {
      var $element = $(response.selector);
      $element[response.method].apply($element, _toConsumableArray(response.args));
    },
    restripe: function restripe(ajax, response, status) {
      $(response.selector).find('> tbody > tr:visible, > tr:visible').removeClass('odd even').filter(':even').addClass('odd').end().filter(':odd').addClass('even');
    },
    update_build_id: function update_build_id(ajax, response, status) {
      $("input[name=\"form_build_id\"][value=\"".concat(response.old, "\"]")).val(response.new);
    },
    add_css: function add_css(ajax, response, status) {
      $('head').prepend(response.data);
    },
    message: function message(ajax, response) {
      var messages = new Drupal.Message(document.querySelector(response.messageWrapperQuerySelector));

      if (response.clearPrevious) {
        messages.clear();
      }

      messages.add(response.message, response.messageOptions);
    }
  };
})(jQuery, window, Drupal, drupalSettings, window.tabbable);;
(function ($, window, Drupal, drupalSettings) {

  'use strict';
  /**
   * Prepare the Ajax request before it is sent.
   *
   * @param {XMLHttpRequest} xmlhttprequest
   * @param {object} options
   * @param {object} options.extraData
   */
  Drupal.Ajax.prototype.beforeSend = function (xmlhttprequest, options) {
    // For forms without file inputs, the jQuery Form plugin serializes the
    // form values, and then calls jQuery's $.ajax() function, which invokes
    // this handler. In this circumstance, options.extraData is never used. For
    // forms with file inputs, the jQuery Form plugin uses the browser's normal
    // form submission mechanism, but captures the response in a hidden IFRAME.
    // In this circumstance, it calls this handler first, and then appends
    // hidden fields to the form to submit the values in options.extraData.
    // There is no simple way to know which submission mechanism will be used,
    // so we add to extraData regardless, and allow it to be ignored in the
    // former case.
    if (this.$form) {
      options.extraData = options.extraData || {};

      // Let the server know when the IFRAME submission mechanism is used. The
      // server can use this information to wrap the JSON response in a
      // TEXTAREA, as per http://jquery.malsup.com/form/#file-upload.
      options.extraData.ajax_iframe_upload = '1';

      // The triggering element is about to be disabled (see below), but if it
      // contains a value (e.g., a checkbox, textfield, select, etc.), ensure
      // that value is included in the submission. As per above, submissions
      // that use $.ajax() are already serialized prior to the element being
      // disabled, so this is only needed for IFRAME submissions.
      var v = $.fieldValue(this.element);
      if (v !== null) {
        options.extraData[this.element.name] = v;
      }
    }

    // Disable the element that received the change to prevent user interface
    // interaction while the Ajax request is in progress. ajax.ajaxing prevents
    // the element from triggering a new request, but does not prevent the user
    // from changing its value.
    $(this.element).prop('disabled', true);

    if (!this.progress || !this.progress.type) {
      return;
    }

    // Insert progress indicator.
    if (this.progress.type == 'throbber' && drupalSettings.ajaxLoader.alwaysFullscreen) {
      // Always show throbber as fullscreen overlay.
      this.progress.type = 'fullscreen';
    }
    var progressIndicatorMethod = 'setProgressIndicator' + this.progress.type.slice(0, 1).toUpperCase() + this.progress.type.slice(1).toLowerCase();
    if (progressIndicatorMethod in this && typeof this[progressIndicatorMethod] === 'function') {
      this[progressIndicatorMethod].call(this);
    }
  };

  /**
   * Overrides the throbber progress indicator.
   */
  Drupal.Ajax.prototype.setProgressIndicatorThrobber = function () {
    this.progress.element = $('<div class="ajax-progress ajax-progress-throbber"><div class="ajax-loader">' + drupalSettings.ajaxLoader.markup + '</div></div>');
    if (this.progress.message && !drupalSettings.ajaxLoader.hideAjaxMessage) {
      this.progress.element.find('.ajax-loader').after('<div class="message">' + this.progress.message + '</div>');
    }
    $(this.element).after(this.progress.element);
  };

  /**
   * Sets the fullscreen progress indicator.
   */
  Drupal.Ajax.prototype.setProgressIndicatorFullscreen = function () {
    this.progress.element = $('<div class="ajax-progress ajax-progress-fullscreen">' + drupalSettings.ajaxLoader.markup + '</div>');
    $(drupalSettings.ajaxLoader.throbberPosition).after(this.progress.element);
  };

})(jQuery, this, Drupal, drupalSettings);
;
/**
 * Basically, drupal behaviors are attached with event DOMContentLoaded, so when document pass from "loading" state to
 * "interactive" state. But some behaviors can be load during "interactive" step, for example with the module "Bigpipe"
 * Then, they are not attached. The goal of this function is to attach them. (mantis 41400)
 */
(function ($, Drupal, drupalSettings) {
  var behaviors = [];

  // We permanently check new behaviors until reaching complete state
  var checkBehaviors = function () {
    var _behaviors = Object.keys(Drupal.behaviors);
    var added = $(_behaviors).not(behaviors).get();
    for (var i = 0; i < added.length; i++) {
      if (typeof Drupal.behaviors[added[i]].attach === 'function') {
        Drupal.behaviors[added[i]].attach(document, drupalSettings);
      }
    }
    behaviors = _behaviors;
    if ('interactive' == document.readyState) {
      requestAnimationFrame(checkBehaviors);
    }
  };
  document.addEventListener('DOMContentLoaded', function (e) {
    behaviors = Object.keys(Drupal.behaviors);
    requestAnimationFrame(checkBehaviors);
  });
})(jQuery, Drupal, window.drupalSettings);
;
/**
 * Overloading HTML5 form validation for giving custom look to error messages.
 */
(function ($, Drupal, drupalSettings) {
  'use strict';

  Drupal.behaviors.hubberCustomersInvalidFields = {

    //
    attach: function (context, settings) {
      // If browser see form error, customize display
      document.addEventListener('invalid', (function () {
        return function (e) {
          e.preventDefault();
          if (settings.invalidField === undefined) {
            settings.invalidField = e.target;

            $([document.documentElement, document.body]).animate({
              scrollTop: $(e.target).offset().top - ($('header').height() + 50)
            }, 200);
          }
          $(e.target).addClass('js-invalid');
          var item = $(e.target).closest('.js-form-item');
          var errorMsg = Drupal.behaviors.hubberCustomersInvalidFields.getErrorMessage(e.target);
          if ($('div.form-item--error-message', item).length == 0 && errorMsg.length > 0) {
            item.append('<div class="form-item--error-message">' + errorMsg + '</div>');
          }
          else if (errorMsg.length > 0) {
            $('div.form-item--error-message', item).replaceWith('<div class="form-item--error-message">' + errorMsg + '</div>');
          }
        };
      })(), true);

      // If user correct the error, remove error message
      $('input, textarea, select').once('invalid-onchange').on('change', function (e) {
        var message = $('div.form-item--error-message', $(this).closest('.js-form-item'));
        if (message.length == 1 && (this.validity.valid || this.validationMessage != message.text())) {
          $(this).removeClass('js-invalid');
          if (settings.invalidField != undefined) {
            settings.invalidField = undefined;
          }
          message.remove();
        }
      });

    },
    getErrorMessage: function(field) {
      const validity = field.validity;
      if (validity.valid) {
        return '';
      }

      if (validity.customError) {
        return field.validationMessage;
      }

      if (typeof $(field).attr('data-error-msg') != 'undefined') {
        return $(field).attr('data-error-msg');
      }

      if (validity.valueMissing) {
        return Drupal.t('Please fill in this field.');
      }
      if (validity.rangeOverflow) {
        return Drupal.t('Please select a value that is no more than %max.', {'%max': field.getAttribute('max')});
      }
      if (validity.rangeUnderflow) {
        return Drupal.t('Please select a value that is no less than %min.', {'%min': field.getAttribute('min')});
      }
      if (validity.tooShort) {
        return Drupal.t('Please use at least %min characters (you are currently using %current characters).', {'%min': field.getAttribute('minLength'), '%current': field.value.length});
      }
      if (validity.tooLong) {
        return Drupal.t('Please use %max characters or less (you are currently using %current characters).', {'%max': field.getAttribute('maxLength'), '%current': field.value.length});
      }
      if (validity.badInput) {
        return Drupal.t('Incorrect value.');
      }
      if (validity.typeMismatch && field.type === 'email') {
        return Drupal.t('Please enter an email address.');
      }

      return field.validationMessage;
    }
  };
})(jQuery, Drupal, drupalSettings);
;
(function ($, Drupal, drupalSettings) {

  /** For having loader on non ajax buttons
   *
   * @type {{attach: Drupal.behaviors.btnLoader.attach}}
   */
  Drupal.behaviors.btnLoader = {
    attach: function (context) {

      if (typeof drupalSettings.ajaxLoader === 'undefined') {
        return;
      }

      window.removeEventListener('pageshow', this.onPageShowEvent);
      window.addEventListener('pageshow', this.onPageShowEvent);

      /**
       * When cta is clicked, put it in loading mode
       */
      $('a, .button, .btn', context).once('hubber-loader-init').on('click', function (e) {
        if ($(this).hasClass('unavailable')) {
          return;
        }

        // Nothing to do if "no loader" class.
        if ($(this).hasClass('noloader')) {
          return;
        }

        // Ajax buttons have other loading system.
        if ($(this).hasClass('use-ajax')) {
          return;
        }

        if ($(this).parents('a').length == 1) {
          return;
        }

        if ($(this).attr('target') === '_blank') {
          return;
        }

        var button;
        if ($(this).hasClass('button') || $(this).hasClass('btn')) {
          button = $(this);
        }
        else {
          button = $('.button,.btn', this);
          if (0 == button.length) {
            return;
          }
        }

        var form = $(this).closest('form');

        // If button is in form with error, no loader
        if (1 == form.length) {
          if (!form[0].checkValidity()) {
            return;
          }

          var error = false;
          $('.error', form).each(function () {
            error = $(this).css('display') != 'none';
            return !error;
          });

          if (error) {
            return;
          }
        }

        // Give other JS behaviors the opportunity to prevent the CTA blocker.
        var preventCtaBlocker = false;
        var jqueryEl = $(this);
        $.each(Drupal.behaviors, function () {
          if (!preventCtaBlocker && $.isFunction(this.preventCtaBlocker)) {
            preventCtaBlocker = this.preventCtaBlocker(jqueryEl);
          }
        });

        if (preventCtaBlocker) {
          return;
        }

        var parent = $(this).parent();
        parent.css('position', 'relative');
        parent.append('<div class="cta-blocker"></div>');
        button.addClass('btn-loading');
        setTimeout(function () {
          Drupal.behaviors.btnLoader.displayLoaderOnButton(button);
        }, 100);
      });

      /**
       * During payment, block the page with loader
       */
      $(document, context).on('paylineBeforePayment', function (e) {
        if (typeof drupalSettings.ajaxLoader === 'undefined') {
          return;
        }
        $('body', context).append('<div class="page-blocker"></div>');

        $(drupalSettings.ajaxLoader.throbberPosition).append($(
          '<div class="ajax-progress ajax-progress-fullscreen">'
          + drupalSettings.ajaxLoader.markup + '</div>'
        ));
      });
    },
    displayLoaderOnButton: function ($button) {
      let originalHtml = $button.html();
      originalHtml = String(originalHtml)
        .replace(/&/g, '&amp;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#39;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;');
      $button.attr('data-original-content', originalHtml);
      $button.html($('<div class="ajax-progress ajax-progress-throbber"><div class="ajax-loader">' + drupalSettings.ajaxLoader.markup + '</div></div>'));
    },
    removeLoaderFromButton: function ($button) {
      let originalHtml = $button.attr('data-original-content');
      if (undefined == originalHtml) {
        return;
      }
      originalHtml = String(originalHtml)
        .replace(/&amp;/g, '&')
        .replace(/&quot;/g, '"')
        .replace(/&#39;/g, '\'')
        .replace(/&lt;/g, '<')
        .replace(/&gt;/g, '>');
      $button.html(originalHtml);
      $button.removeClass('btn-loading');
    },
    onPageShowEvent: function (e) {
      window.performance.getEntriesByType('navigation').forEach((p, i) => {
        if (e.persisted || p.type === 'back_forward') {
          $('.cta-blocker').each(function() {
            if ($(this).closest('form').length) {
              // We need to reload the page as we cannot send the form anymore.
              window.location.reload();
              return false;
            }

            const $button = $(this).parent().find('.btn-loading');
            Drupal.behaviors.btnLoader.removeLoaderFromButton($button);
            $(this).remove();
          });
        }
      });
    }
  };

  /**
   * Helper to display the ajax loader on non-ajax processes.
   */
  Drupal.behaviors.hubberLoader = {
    element: null,
    displayFullscreenLoader: function () {
      this.hideFullscreenLoader();
      if (typeof drupalSettings.ajaxLoader !== 'undefined') {
        this.element = $('<div class="ajax-progress ajax-progress-fullscreen">' + drupalSettings.ajaxLoader.markup + '</div>');
        $(drupalSettings.ajaxLoader.throbberPosition).after(this.element);
      }
      else {
        this.element = $(Drupal.theme('ajaxProgressIndicatorFullscreen'));
        $('body').append(this.element);
      }
    },
    hideFullscreenLoader: function () {
      if (this.element) {
        $(this.element).remove();
      }
    }
  };

})(jQuery, Drupal, drupalSettings);
;
/**
 * Managing cart timeout without reloading page
 */
(function ($, Drupal, drupalSettings) {
  'use strict';
  Drupal.behaviors.hubberCartTimeout = {
    timeout: undefined,
    url_on_timeout: undefined,
    attach: function (context) {
      if ($('.payment-process-form .cart_counter, .payment-form .cart_counter').length) {
        $('.payment-process-form .cart_counter, .payment-form .cart_counter').addClass('d-none');
        return;
      }

      this.resetTimeout(drupalSettings.cart_timeout);  // Time before cart expiration
      if (undefined === this.timeout) {
        $('.cart_counter').addClass('d-none');
        return;
      }

      Drupal.behaviors.hubberCartTimeout.url_on_timeout = drupalSettings.path.cart_timeout;
      this.prepareCartTimeoutContent();

      // Display the time every second until the expiration
      this.displayTimeout();
    },
    prepareCartTimeoutContent: function () {
      $('.cart_counter').not(":has(.expiration-timer)").each(function () {
        $(this).html('<span class="hourglass"></span><span class="expiration-timer"></span>');
      });
    },
    resetTimeout: function (timeout) {
      if (undefined == timeout) {
        Drupal.behaviors.hubberCartTimeout.timeout = undefined;
        return;
      }
      const current_time = Math.round(new Date().getTime() / 1000);
      Drupal.behaviors.hubberCartTimeout.timeout = timeout + current_time;
    },
    displayTimeout: function () {
      var timeout = Drupal.behaviors.hubberCartTimeout.timeout;
      if (undefined === timeout) {
        return;
      }
      var current_time = Math.round(new Date().getTime() / 1000);
      var remaining_time = Math.max(0, (timeout - current_time));
      var expired = (remaining_time === 0);
      if (remaining_time < 180) {
        // 3 minutes or less remaining.
        $('.cart_counter').addClass('warning');
      }

      var time = [];
      while (remaining_time >= 60) {
        var rest = remaining_time % 60;
        time.unshift(rest.toString().padStart(2, '0'));
        remaining_time = (remaining_time - rest) / 60;
      }
      time.unshift(remaining_time.toString().padStart(2, '0'));
      if (time.length === 1) {
        // Adds a leading "0 minute" indicator.
        time.unshift('0');
      }

      $('.cart_counter.full .expiration-timer')
        .html(Drupal.t('Your cart will expire in: %time', {'%time': time.join(':')}));
      $('.cart_counter.short .expiration-timer')
        .html(Drupal.t('Cart expiration: %time', {'%time': time.join(':')}));

      if (expired) { // When time has expired
        document.location.replace(Drupal.behaviors.hubberCartTimeout.url_on_timeout); // Redirect to expired cart page
        return;
      }
      setTimeout(Drupal.behaviors.hubberCartTimeout.displayTimeout, 1000); // Call next time in one second
    }
  }

  Drupal.AjaxCommands.prototype.refreshCartTimeout = function (ajax, response) {
    var timeout = (response.data != -1) ? response.data : undefined;
    Drupal.behaviors.hubberCartTimeout.resetTimeout(timeout);
    Drupal.behaviors.hubberCartTimeout.prepareCartTimeoutContent();
    Drupal.behaviors.hubberCartTimeout.displayTimeout();
  }

})(jQuery, Drupal, drupalSettings);
;
/**
 * Global interactions with the checkout pages
 */
(function ($, Drupal) {

  Drupal.behaviors.hubberCartCheckout = {

  /*************** CHECKOUT SELECTOR METHODS ****************/

    /**
     * Returns the checkout "go to next step" buttons.
     */
    getCheckoutSelector: function() {
      return $('.button-checkout-cart, [data-drupal-selector="edit-actions-next"]');
    },

    /**
     * Disable the "go to next step" buttons on the checkout pages.
     */
    lockCheckoutAction: function() {
      const selector = this.getCheckoutSelector();
      selector.prop('disabled', true);
    },

    /**
     * Ask to unlock the checkout "go to next step" buttons.
     * This method will ask all Drupal.behaviors available if the checkout buttons can be unlocked or not.
     *
     * Use canUnlockCheckout() in your own Drupal.behaviors if you need to interact with the checkout buttons.
     */
    requestCheckoutUnlock: function() {
      var canUnlockCheckout = true;

      $.each(Drupal.behaviors, function () {
        if (canUnlockCheckout && $.isFunction(this.canUnlockCheckout)) {
          canUnlockCheckout = this.canUnlockCheckout();
        }
      });

      if (canUnlockCheckout) {
        const selector = this.getCheckoutSelector();
        selector.prop('disabled', false);
      }
    },

    /**
     * Tells if the checkout "go to next step" buttons are locked or not.
     */
    isCheckoutLocked: function() {
      const selector = this.getCheckoutSelector();
      return selector.is(":disabled");
    },

  /*************** SHADOW METHODS ****************/

    /**
     * Returns whether the shadow is displayed or not.
     */
    hasShadowDisplayed: function() {
      return $('body').hasClass('show-overlay');
    },

    /**
     * Display the mobile shadow on the checkout pages.
     * Mostly used when a popin is displayed.
     */
    displayMobileShadow: function() {
      $('body').addClass('show-overlay');
    },

    /**
     * Ask to release the mobile shadow on the checkout pages.
     * This method will ask all Drupal.behaviors available if the shadow can be released or not.
     *
     * Use canReleaseMobileShadow() in your own Drupal.behaviors if you need to interact with the shadow.
     */
    requestMobileShadowRelease: function() {
      let canReleaseShadow = true;

      $.each(Drupal.behaviors, function () {
        if (canReleaseShadow && $.isFunction(this.canReleaseMobileShadow)) {
          canReleaseShadow = this.canReleaseMobileShadow();
        }
      });

      if (canReleaseShadow) {
        $('body').removeClass('show-overlay');
      }
    },
  }

})(jQuery, Drupal);
;
/**
 * Toggles the full cart with a shadow effect on mobile viewpoint.
 */
(function ($, Drupal) {

  Drupal.behaviors.hubberCartSummaryMobile = {
    attach: function (context) {

      if ($('.cart-summary-info-wrapper .option-order .button-checkout-cart').length && $('.cart-summary-info-wrapper .option-order .js-toggle-cart-details').length === 0) {
        $('.js-toggle-cart-details').insertAfter($('.cart-summary-info-wrapper .option-order .button-checkout-cart').closest('a'));
        $('.sidebar_second, .cart-action-wrapper').addClass('option-available');
      }

      // Cart and checkout pages.
      $('.js-toggle-cart-details', context).once('hubber_cart.summary_mobile.init').on('click', function(e) {
        e.preventDefault();
        $(this).toggleClass('open');
        $(this).parents('.sidebar_second, .order-summary').toggleClass('openRecap');
        Drupal.behaviors.hubberCartSummaryMobile.toggleShadowEffect();
      });

      // Click on the shadow, we close the opened cart details and remove the shadow effect.
      $(document).once('hubber_cart.summary_mobile.init').on('mousedown', function(e) {
        // Removes the shadow if we click outside the block.
        const $container = $('.block-cart-footer, .block-hubber-cart-contents, .order-summary');
        if (!$container.is(e.target) && $container.has(e.target).length === 0) {
          Drupal.behaviors.hubberCartSummaryMobile.getOpenRecapSelectors().removeClass('openRecap');
          Drupal.behaviors.hubberCartCheckout.requestMobileShadowRelease();
        }
      });
    },

    toggleShadowEffect: function () {
      if (Drupal.behaviors.hubberCartCheckout.hasShadowDisplayed()) {
        // Shadow is currently on, request to remove it.
        Drupal.behaviors.hubberCartCheckout.requestMobileShadowRelease();
        return;
      }
      Drupal.behaviors.hubberCartCheckout.displayMobileShadow();
    },

    getOpenRecapSelectors: function () {
      return $('.sidebar_second.openRecap, [data-drupal-selector="edit-right-container"].openRecap, .order-summary.openRecap');
    },

    canReleaseMobileShadow: function () {
      return !this.getOpenRecapSelectors().length;
    }
  }
})(jQuery, Drupal);
;
(function ($, Drupal) {
  'use strict';
  /*
   * Reloads the page if user has done a back or forward navigation.
   */
  Drupal.behaviors.hubberReloadPage = {
    attach: function (context) {
      if (context != document) {
        return;
      }
      window.removeEventListener('pageshow', this.onPageShowEvent);
      window.addEventListener('pageshow', this.onPageShowEvent);
    },
    onPageShowEvent: function (e) {
      window.performance.getEntriesByType('navigation').forEach((p, i) => {
        if (e.persisted || p.type === 'back_forward') {
          window.location.reload();
        }
      });
    }
  }
})(jQuery, Drupal);
;
/**
 * @file
 * Defines Javascript behaviors for the hubber_cross_sell module.
 */

(function ($, Drupal, drupalSettings) {
  'use strict';

  Drupal.behaviors.hubberCrossSell = {
    attach: function (context, settings) {
      setTimeout(function () {
        $('.js-cross-sell-check-to-add', context)
          .once('hubber-cross-sell-check-to-add').on('click', function (e) {
          var $link = $(this).attr('data-link');
          window.location = $link;
        });

        $('.js-cross-sell-integrated-change-qty', context)
          .once('hubber-cross-sell-change-qty').on('change', function (e) {
          var $link = $(this).val();
          window.location = $link;
        });

        $('.js-cross-sell-integrated-change-variation', context)
          .once('hubber-cross-sell-change-variation').on('change', function (e) {
          var $link = $(this).val();
          window.location = $link;
        });

        $('.hubber-cross-sell-product .js-add-to-cart', context)
          .once('hubber-cross-sell-add-to-cart').on('click', function (e) {
          var $form = $(this).parents('.hubber-cross-sell-product').find('.commerce-order-item-hubber-ticketing-add-to-cart-form');
          if ($form.length == 0) {
            $form = $(this).parents('.hubber-cross-sell-product').find('.commerce-order-item-hubber-merchandising-add-to-cart-form');
          }
          if ($(this).hasClass('js-auto-add')) {
            $form.find('.js-qty-prices').val(1);
            $form.submit();
          }
          else {
            $(this).parents('.js-add-to-cart-config').addClass('open');
          }
        });

        $('.block-commerce-cross-sell .js-list-categories', context)
          .once('hubber-cross-sell-list-categories').click(function (e) {
          if ($(this).hasClass('selected')) {
            $(this).parents('form').find('.js-category-wrapper').hide();
            $(this).parents('form').find('.hubber-commerce-ticketing-form-categories-list-li-css').removeClass('selected').addClass('visible');
            e.preventDefault();
            e.stopPropagation();
          }
          else {
            $(this).parents('form').find('.js-list-categories').removeClass('selected').removeClass('visible');
            $(this).addClass('selected');
          }
        });

        $('.close-cross', context)
          .once('hubber-cross-close-click').click(function () {
          $(this).parents('.js-add-to-cart-config').removeClass('open');
        });

        $('.js-add-to-cart-config .js-commerce-order-item-hubber-ticketing-add-to-cart-form', context)
          .once('hubber-cross-form-touch').on('touchstart MSPointerDown pointerdown', function (e) {
          e.stopPropagation();
        });

        $('.block-commerce-cross-sell .js-list-categories:first-child', context).trigger('click');

        function buildSliderConfiguration() {
          var nbSlides = $('.block-commerce-cross-sell .internal-products .vignette').length;
          return {
            arrows: (nbSlides > 5),
            dots: (nbSlides > 5),
            autoplay: false,
            touchMove: true,
            centerMode: false,
            variableWidth: false,
            slidesToShow: 5,
            slidesToScroll: 1,
            infinite: false,
            speed: 300,
            responsive: [
              {
                breakpoint: 1600,
                settings: {
                  slidesToShow: 4,
                  arrows: (nbSlides > 4),
                  dots: (nbSlides > 4),
                  centerMode: false,
                }
              },
              {
                breakpoint: 1200,
                settings: {
                  slidesToShow: 3,
                  arrows: (nbSlides > 3),
                  dots: (nbSlides > 3),
                  centerMode: false,
                }
              },
              {
                breakpoint: 850,
                settings: {
                  slidesToShow: 2,
                  arrows: (nbSlides > 2),
                  dots: (nbSlides > 2),
                  centerMode: true,
                }
              },
              {
                breakpoint: 650,
                settings: {
                  slidesToShow: 1,
                  arrows: (nbSlides > 1),
                  dots: (nbSlides > 1),
                  centerMode: true,
                }
              },
            ]
          }
        }

        if (typeof slider === 'undefined') {
          if ($('.block-commerce-cross-sell .internal-products', context).length > 0) {
            var slider = $('.block-commerce-cross-sell .internal-products', context).slick(buildSliderConfiguration());
          }
        }
      }, 800);
    }
  };
})(jQuery, Drupal, drupalSettings);
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

Drupal.debounce = function (func, wait, immediate) {
  var timeout;
  var result;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var context = this;

    var later = function later() {
      timeout = null;

      if (!immediate) {
        result = func.apply(context, args);
      }
    };

    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);

    if (callNow) {
      result = func.apply(context, args);
    }

    return result;
  };
};;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, debounce) {
  var offsets = {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };

  function getRawOffset(el, edge) {
    var $el = $(el);
    var documentElement = document.documentElement;
    var displacement = 0;
    var horizontal = edge === 'left' || edge === 'right';
    var placement = $el.offset()[horizontal ? 'left' : 'top'];
    placement -= window["scroll".concat(horizontal ? 'X' : 'Y')] || document.documentElement["scroll".concat(horizontal ? 'Left' : 'Top')] || 0;

    switch (edge) {
      case 'top':
        displacement = placement + $el.outerHeight();
        break;

      case 'left':
        displacement = placement + $el.outerWidth();
        break;

      case 'bottom':
        displacement = documentElement.clientHeight - placement;
        break;

      case 'right':
        displacement = documentElement.clientWidth - placement;
        break;

      default:
        displacement = 0;
    }

    return displacement;
  }

  function calculateOffset(edge) {
    var edgeOffset = 0;
    var displacingElements = document.querySelectorAll("[data-offset-".concat(edge, "]"));
    var n = displacingElements.length;

    for (var i = 0; i < n; i++) {
      var el = displacingElements[i];

      if (el.style.display === 'none') {
        continue;
      }

      var displacement = parseInt(el.getAttribute("data-offset-".concat(edge)), 10);

      if (isNaN(displacement)) {
        displacement = getRawOffset(el, edge);
      }

      edgeOffset = Math.max(edgeOffset, displacement);
    }

    return edgeOffset;
  }

  function calculateOffsets() {
    return {
      top: calculateOffset('top'),
      right: calculateOffset('right'),
      bottom: calculateOffset('bottom'),
      left: calculateOffset('left')
    };
  }

  function displace(broadcast) {
    offsets = calculateOffsets();
    Drupal.displace.offsets = offsets;

    if (typeof broadcast === 'undefined' || broadcast) {
      $(document).trigger('drupalViewportOffsetChange', offsets);
    }

    return offsets;
  }

  Drupal.behaviors.drupalDisplace = {
    attach: function attach() {
      if (this.displaceProcessed) {
        return;
      }

      this.displaceProcessed = true;
      $(window).on('resize.drupalDisplace', debounce(displace, 200));
    }
  };
  Drupal.displace = displace;
  $.extend(Drupal.displace, {
    offsets: offsets,
    calculateOffset: calculateOffset
  });
})(jQuery, Drupal, Drupal.debounce);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, _ref) {
  var isTabbable = _ref.isTabbable;
  $.extend($.expr[':'], {
    tabbable: function tabbable(element) {
      Drupal.deprecationError({
        message: 'The :tabbable selector is deprecated in Drupal 9.2.0 and will be removed in Drupal 10.0.0. Use the core/tabbable library instead. See https://www.drupal.org/node/3183730'
      });

      if (element.tagName === 'SUMMARY' || element.tagName === 'DETAILS') {
        var tabIndex = element.getAttribute('tabIndex');

        if (tabIndex === null || tabIndex < 0) {
          return false;
        }
      }

      return isTabbable(element);
    }
  });
})(jQuery, Drupal, window.tabbable);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($) {
  var cachedScrollbarWidth = null;
  var max = Math.max,
      abs = Math.abs;
  var regexHorizontal = /left|center|right/;
  var regexVertical = /top|center|bottom/;
  var regexOffset = /[+-]\d+(\.[\d]+)?%?/;
  var regexPosition = /^\w+/;
  var regexPercent = /%$/;
  var _position = $.fn.position;

  function getOffsets(offsets, width, height) {
    return [parseFloat(offsets[0]) * (regexPercent.test(offsets[0]) ? width / 100 : 1), parseFloat(offsets[1]) * (regexPercent.test(offsets[1]) ? height / 100 : 1)];
  }

  function parseCss(element, property) {
    return parseInt($.css(element, property), 10) || 0;
  }

  function getDimensions(elem) {
    var raw = elem[0];

    if (raw.nodeType === 9) {
      return {
        width: elem.width(),
        height: elem.height(),
        offset: {
          top: 0,
          left: 0
        }
      };
    }

    if ($.isWindow(raw)) {
      return {
        width: elem.width(),
        height: elem.height(),
        offset: {
          top: elem.scrollTop(),
          left: elem.scrollLeft()
        }
      };
    }

    if (raw.preventDefault) {
      return {
        width: 0,
        height: 0,
        offset: {
          top: raw.pageY,
          left: raw.pageX
        }
      };
    }

    return {
      width: elem.outerWidth(),
      height: elem.outerHeight(),
      offset: elem.offset()
    };
  }

  var collisions = {
    fit: {
      left: function left(position, data) {
        var within = data.within;
        var withinOffset = within.isWindow ? within.scrollLeft : within.offset.left;
        var outerWidth = within.width;
        var collisionPosLeft = position.left - data.collisionPosition.marginLeft;
        var overLeft = withinOffset - collisionPosLeft;
        var overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset;
        var newOverRight;

        if (data.collisionWidth > outerWidth) {
          if (overLeft > 0 && overRight <= 0) {
            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;
            position.left += overLeft - newOverRight;
          } else if (overRight > 0 && overLeft <= 0) {
            position.left = withinOffset;
          } else if (overLeft > overRight) {
            position.left = withinOffset + outerWidth - data.collisionWidth;
          } else {
            position.left = withinOffset;
          }
        } else if (overLeft > 0) {
          position.left += overLeft;
        } else if (overRight > 0) {
          position.left -= overRight;
        } else {
          position.left = max(position.left - collisionPosLeft, position.left);
        }
      },
      top: function top(position, data) {
        var within = data.within;
        var withinOffset = within.isWindow ? within.scrollTop : within.offset.top;
        var outerHeight = data.within.height;
        var collisionPosTop = position.top - data.collisionPosition.marginTop;
        var overTop = withinOffset - collisionPosTop;
        var overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset;
        var newOverBottom;

        if (data.collisionHeight > outerHeight) {
          if (overTop > 0 && overBottom <= 0) {
            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;
            position.top += overTop - newOverBottom;
          } else if (overBottom > 0 && overTop <= 0) {
            position.top = withinOffset;
          } else if (overTop > overBottom) {
            position.top = withinOffset + outerHeight - data.collisionHeight;
          } else {
            position.top = withinOffset;
          }
        } else if (overTop > 0) {
          position.top += overTop;
        } else if (overBottom > 0) {
          position.top -= overBottom;
        } else {
          position.top = max(position.top - collisionPosTop, position.top);
        }
      }
    },
    flip: {
      left: function left(position, data) {
        var within = data.within;
        var withinOffset = within.offset.left + within.scrollLeft;
        var outerWidth = within.width;
        var offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left;
        var collisionPosLeft = position.left - data.collisionPosition.marginLeft;
        var overLeft = collisionPosLeft - offsetLeft;
        var overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft;
        var myOffset = data.my[0] === 'left' ? -data.elemWidth : data.my[0] === 'right' ? data.elemWidth : 0;
        var atOffset = data.at[0] === 'left' ? data.targetWidth : data.at[0] === 'right' ? -data.targetWidth : 0;
        var offset = -2 * data.offset[0];
        var newOverRight;
        var newOverLeft;

        if (overLeft < 0) {
          newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;

          if (newOverRight < 0 || newOverRight < abs(overLeft)) {
            position.left += myOffset + atOffset + offset;
          }
        } else if (overRight > 0) {
          newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;

          if (newOverLeft > 0 || abs(newOverLeft) < overRight) {
            position.left += myOffset + atOffset + offset;
          }
        }
      },
      top: function top(position, data) {
        var within = data.within;
        var withinOffset = within.offset.top + within.scrollTop;
        var outerHeight = within.height;
        var offsetTop = within.isWindow ? within.scrollTop : within.offset.top;
        var collisionPosTop = position.top - data.collisionPosition.marginTop;
        var overTop = collisionPosTop - offsetTop;
        var overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop;
        var top = data.my[1] === 'top';
        var myOffset = top ? -data.elemHeight : data.my[1] === 'bottom' ? data.elemHeight : 0;
        var atOffset = data.at[1] === 'top' ? data.targetHeight : data.at[1] === 'bottom' ? -data.targetHeight : 0;
        var offset = -2 * data.offset[1];
        var newOverTop;
        var newOverBottom;

        if (overTop < 0) {
          newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;

          if (newOverBottom < 0 || newOverBottom < abs(overTop)) {
            position.top += myOffset + atOffset + offset;
          }
        } else if (overBottom > 0) {
          newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;

          if (newOverTop > 0 || abs(newOverTop) < overBottom) {
            position.top += myOffset + atOffset + offset;
          }
        }
      }
    },
    flipfit: {
      left: function left() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        collisions.flip.left.apply(this, args);
        collisions.fit.left.apply(this, args);
      },
      top: function top() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        collisions.flip.top.apply(this, args);
        collisions.fit.top.apply(this, args);
      }
    }
  };
  $.position = {
    scrollbarWidth: function scrollbarWidth() {
      if (cachedScrollbarWidth !== undefined) {
        return cachedScrollbarWidth;
      }

      var div = $('<div ' + "style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'>" + "<div style='height:100px;width:auto;'></div></div>");
      var innerDiv = div.children()[0];
      $('body').append(div);
      var w1 = innerDiv.offsetWidth;
      div.css('overflow', 'scroll');
      var w2 = innerDiv.offsetWidth;

      if (w1 === w2) {
        w2 = div[0].clientWidth;
      }

      div.remove();
      cachedScrollbarWidth = w1 - w2;
      return cachedScrollbarWidth;
    },
    getScrollInfo: function getScrollInfo(within) {
      var overflowX = within.isWindow || within.isDocument ? '' : within.element.css('overflow-x');
      var overflowY = within.isWindow || within.isDocument ? '' : within.element.css('overflow-y');
      var hasOverflowX = overflowX === 'scroll' || overflowX === 'auto' && within.width < within.element[0].scrollWidth;
      var hasOverflowY = overflowY === 'scroll' || overflowY === 'auto' && within.height < within.element[0].scrollHeight;
      return {
        width: hasOverflowY ? $.position.scrollbarWidth() : 0,
        height: hasOverflowX ? $.position.scrollbarWidth() : 0
      };
    },
    getWithinInfo: function getWithinInfo(element) {
      var withinElement = $(element || window);
      var isWindow = $.isWindow(withinElement[0]);
      var isDocument = !!withinElement[0] && withinElement[0].nodeType === 9;
      var hasOffset = !isWindow && !isDocument;
      return {
        element: withinElement,
        isWindow: isWindow,
        isDocument: isDocument,
        offset: hasOffset ? $(element).offset() : {
          left: 0,
          top: 0
        },
        scrollLeft: withinElement.scrollLeft(),
        scrollTop: withinElement.scrollTop(),
        width: withinElement.outerWidth(),
        height: withinElement.outerHeight()
      };
    }
  };

  $.fn.position = function (options) {
    if (!options || !options.of) {
      return _position.apply(this, arguments);
    }

    options = $.extend({}, options);
    var within = $.position.getWithinInfo(options.within);
    var scrollInfo = $.position.getScrollInfo(within);
    var collision = (options.collision || 'flip').split(' ');
    var offsets = {};
    var target = typeof options.of === 'string' ? $(document).find(options.of) : $(options.of);
    var dimensions = getDimensions(target);
    var targetWidth = dimensions.width;
    var targetHeight = dimensions.height;
    var targetOffset = dimensions.offset;

    if (target[0].preventDefault) {
      options.at = 'left top';
    }

    var basePosition = $.extend({}, targetOffset);
    $.each(['my', 'at'], function () {
      var pos = (options[this] || '').split(' ');

      if (pos.length === 1) {
        pos = regexHorizontal.test(pos[0]) ? pos.concat(['center']) : regexVertical.test(pos[0]) ? ['center'].concat(pos) : ['center', 'center'];
      }

      pos[0] = regexHorizontal.test(pos[0]) ? pos[0] : 'center';
      pos[1] = regexVertical.test(pos[1]) ? pos[1] : 'center';
      var horizontalOffset = regexOffset.exec(pos[0]);
      var verticalOffset = regexOffset.exec(pos[1]);
      offsets[this] = [horizontalOffset ? horizontalOffset[0] : 0, verticalOffset ? verticalOffset[0] : 0];
      options[this] = [regexPosition.exec(pos[0])[0], regexPosition.exec(pos[1])[0]];
    });

    if (collision.length === 1) {
      collision[1] = collision[0];
    }

    if (options.at[0] === 'right') {
      basePosition.left += targetWidth;
    } else if (options.at[0] === 'center') {
      basePosition.left += targetWidth / 2;
    }

    if (options.at[1] === 'bottom') {
      basePosition.top += targetHeight;
    } else if (options.at[1] === 'center') {
      basePosition.top += targetHeight / 2;
    }

    var atOffset = getOffsets(offsets.at, targetWidth, targetHeight);
    basePosition.left += atOffset[0];
    basePosition.top += atOffset[1];
    return this.each(function () {
      var using;
      var elem = $(this);
      var elemWidth = elem.outerWidth();
      var elemHeight = elem.outerHeight();
      var marginLeft = parseCss(this, 'marginLeft');
      var marginTop = parseCss(this, 'marginTop');
      var collisionWidth = elemWidth + marginLeft + parseCss(this, 'marginRight') + scrollInfo.width;
      var collisionHeight = elemHeight + marginTop + parseCss(this, 'marginBottom') + scrollInfo.height;
      var position = $.extend({}, basePosition);
      var myOffset = getOffsets(offsets.my, elem.outerWidth(), elem.outerHeight());

      if (options.my[0] === 'right') {
        position.left -= elemWidth;
      } else if (options.my[0] === 'center') {
        position.left -= elemWidth / 2;
      }

      if (options.my[1] === 'bottom') {
        position.top -= elemHeight;
      } else if (options.my[1] === 'center') {
        position.top -= elemHeight / 2;
      }

      position.left += myOffset[0];
      position.top += myOffset[1];
      var collisionPosition = {
        marginLeft: marginLeft,
        marginTop: marginTop
      };
      $.each(['left', 'top'], function (i, dir) {
        if (collisions[collision[i]]) {
          collisions[collision[i]][dir](position, {
            targetWidth: targetWidth,
            targetHeight: targetHeight,
            elemWidth: elemWidth,
            elemHeight: elemHeight,
            collisionPosition: collisionPosition,
            collisionWidth: collisionWidth,
            collisionHeight: collisionHeight,
            offset: [atOffset[0] + myOffset[0], atOffset[1] + myOffset[1]],
            my: options.my,
            at: options.at,
            within: within,
            elem: elem
          });
        }
      });

      if (options.using) {
        using = function using(props) {
          var left = targetOffset.left - position.left;
          var right = left + targetWidth - elemWidth;
          var top = targetOffset.top - position.top;
          var bottom = top + targetHeight - elemHeight;
          var feedback = {
            target: {
              element: target,
              left: targetOffset.left,
              top: targetOffset.top,
              width: targetWidth,
              height: targetHeight
            },
            element: {
              element: elem,
              left: position.left,
              top: position.top,
              width: elemWidth,
              height: elemHeight
            },
            horizontal: right < 0 ? 'left' : left > 0 ? 'right' : 'center',
            vertical: bottom < 0 ? 'top' : top > 0 ? 'bottom' : 'middle'
          };

          if (targetWidth < elemWidth && abs(left + right) < targetWidth) {
            feedback.horizontal = 'center';
          }

          if (targetHeight < elemHeight && abs(top + bottom) < targetHeight) {
            feedback.vertical = 'middle';
          }

          if (max(abs(left), abs(right)) > max(abs(top), abs(bottom))) {
            feedback.important = 'horizontal';
          } else {
            feedback.important = 'vertical';
          }

          options.using.call(this, props, feedback);
        };
      }

      elem.offset($.extend(position, {
        using: using
      }));
    });
  };

  if (!$.hasOwnProperty('ui')) {
    $.ui = {};
  }

  $.ui.position = collisions;
})(jQuery);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, drupalSettings) {
  drupalSettings.dialog = {
    autoOpen: true,
    dialogClass: '',
    buttonClass: 'button',
    buttonPrimaryClass: 'button--primary',
    close: function close(event) {
      Drupal.dialog(event.target).close();
      Drupal.detachBehaviors(event.target, null, 'unload');
    }
  };

  Drupal.dialog = function (element, options) {
    var undef;
    var $element = $(element);
    var dialog = {
      open: false,
      returnValue: undef
    };

    function openDialog(settings) {
      settings = $.extend({}, drupalSettings.dialog, options, settings);
      $(window).trigger('dialog:beforecreate', [dialog, $element, settings]);
      $element.dialog(settings);
      dialog.open = true;
      $(window).trigger('dialog:aftercreate', [dialog, $element, settings]);
    }

    function closeDialog(value) {
      $(window).trigger('dialog:beforeclose', [dialog, $element]);
      $element.dialog('close');
      dialog.returnValue = value;
      dialog.open = false;
      $(window).trigger('dialog:afterclose', [dialog, $element]);
    }

    dialog.show = function () {
      openDialog({
        modal: false
      });
    };

    dialog.showModal = function () {
      openDialog({
        modal: true
      });
    };

    dialog.close = closeDialog;
    return dialog;
  };
})(jQuery, Drupal, drupalSettings);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, drupalSettings, debounce, displace) {
  drupalSettings.dialog = $.extend({
    autoResize: true,
    maxHeight: '95%'
  }, drupalSettings.dialog);

  function resetPosition(options) {
    var offsets = displace.offsets;
    var left = offsets.left - offsets.right;
    var top = offsets.top - offsets.bottom;
    var leftString = "".concat((left > 0 ? '+' : '-') + Math.abs(Math.round(left / 2)), "px");
    var topString = "".concat((top > 0 ? '+' : '-') + Math.abs(Math.round(top / 2)), "px");
    options.position = {
      my: "center".concat(left !== 0 ? leftString : '', " center").concat(top !== 0 ? topString : ''),
      of: window
    };
    return options;
  }

  function resetSize(event) {
    var positionOptions = ['width', 'height', 'minWidth', 'minHeight', 'maxHeight', 'maxWidth', 'position'];
    var adjustedOptions = {};
    var windowHeight = $(window).height();
    var option;
    var optionValue;
    var adjustedValue;

    for (var n = 0; n < positionOptions.length; n++) {
      option = positionOptions[n];
      optionValue = event.data.settings[option];

      if (optionValue) {
        if (typeof optionValue === 'string' && /%$/.test(optionValue) && /height/i.test(option)) {
          windowHeight -= displace.offsets.top + displace.offsets.bottom;
          adjustedValue = parseInt(0.01 * parseInt(optionValue, 10) * windowHeight, 10);

          if (option === 'height' && event.data.$element.parent().outerHeight() < adjustedValue) {
            adjustedValue = 'auto';
          }

          adjustedOptions[option] = adjustedValue;
        }
      }
    }

    if (!event.data.settings.modal) {
      adjustedOptions = resetPosition(adjustedOptions);
    }

    event.data.$element.dialog('option', adjustedOptions).trigger('dialogContentResize');
  }

  $(window).on({
    'dialog:aftercreate': function dialogAftercreate(event, dialog, $element, settings) {
      var autoResize = debounce(resetSize, 20);
      var eventData = {
        settings: settings,
        $element: $element
      };

      if (settings.autoResize === true || settings.autoResize === 'true') {
        $element.dialog('option', {
          resizable: false,
          draggable: false
        }).dialog('widget').css('position', 'fixed');
        $(window).on('resize.dialogResize scroll.dialogResize', eventData, autoResize).trigger('resize.dialogResize');
        $(document).on('drupalViewportOffsetChange.dialogResize', eventData, autoResize);
      }
    },
    'dialog:beforeclose': function dialogBeforeclose(event, dialog, $element) {
      $(window).off('.dialogResize');
      $(document).off('.dialogResize');
    }
  });
})(jQuery, Drupal, drupalSettings, Drupal.debounce, Drupal.displace);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, _ref) {
  var tabbable = _ref.tabbable,
      isTabbable = _ref.isTabbable;
  $.widget('ui.dialog', $.ui.dialog, {
    options: {
      buttonClass: 'button',
      buttonPrimaryClass: 'button--primary'
    },
    _createButtons: function _createButtons() {
      var opts = this.options;
      var primaryIndex;
      var index;
      var il = opts.buttons.length;

      for (index = 0; index < il; index++) {
        if (opts.buttons[index].primary && opts.buttons[index].primary === true) {
          primaryIndex = index;
          delete opts.buttons[index].primary;
          break;
        }
      }

      this._super();

      var $buttons = this.uiButtonSet.children().addClass(opts.buttonClass);

      if (typeof primaryIndex !== 'undefined') {
        $buttons.eq(index).addClass(opts.buttonPrimaryClass);
      }
    },
    _focusTabbable: function _focusTabbable() {
      var hasFocus = this._focusedElement ? this._focusedElement.get(0) : null;

      if (!hasFocus) {
        hasFocus = this.element.find('[autofocus]').get(0);
      }

      if (!hasFocus) {
        var $elements = [this.element, this.uiDialogButtonPane];

        for (var i = 0; i < $elements.length; i++) {
          var element = $elements[i].get(0);

          if (element) {
            var elementTabbable = tabbable(element);
            hasFocus = elementTabbable.length ? elementTabbable[0] : null;
          }

          if (hasFocus) {
            break;
          }
        }
      }

      if (!hasFocus) {
        var closeBtn = this.uiDialogTitlebarClose.get(0);
        hasFocus = closeBtn && isTabbable(closeBtn) ? closeBtn : null;
      }

      if (!hasFocus) {
        hasFocus = this.uiDialog.get(0);
      }

      $(hasFocus).eq(0).trigger('focus');
    }
  });
})(jQuery, window.tabbable);;
/**
 * @file
 * Defines Javascript behaviors for seat view cam display.
 */
(function ($, Drupal, drupalSettings) {
  'use strict';
  Drupal.behaviors.hubberSeatViewCam = {

    /**
     * Attache all events when DOM is ready.
     *
     * @return null
     */
    attach: function (context) {
      var self = this;

      /**
       * Event : Click on view cam button.
       *
       * Display dialog box with view cam.
       *
       * View cam button is a DOM element with class js-view-cam-button.
       * View cam button must have 3 attributes :
       *   - cam-modeller : Modeller provides the view cam (ex: pacifa)
       *   - cam-url : Cam view URL
       *   - cam-id : Modeller cam id
       */
      $(document).once('view-cam-button').on('click', '.js-view-cam-button', function(e) {
        var button = $(this);
        if (!button.attr('cam-modeller') || !button.attr('cam-url') || !button.attr('cam-id')) {
         return false;
        }
        var seat = {
          'cam_modeller': button.attr('cam-modeller'),
          'cam_url': button.attr('cam-url'),
          'cam_id': button.attr('cam-id')
        };
        var content = self.getHtmlViewCam(seat, 'pano');
        var options = {
          classes: {
            "ui-dialog": "view-cam-full"
          }
        };
        Drupal.dialog(content, options).showModal();
      });
    },

    /**
     * Get the html element to display seat view
     *
     * @param seat
     * @returns {string|boolean}
     */
    getHtmlViewCam: function (seat, format = undefined) {
      if (!seat.cam_modeller || !seat.cam_url || !seat.cam_id) {
        return false;
      }
      var cssProps = 'class="view-cam" cam-modeller="' + seat.cam_modeller + '" cam-url="' + seat.cam_url + '" cam-id="' + seat.cam_id + '"';
      switch (seat.cam_modeller) {
        case 'pacifa':
          if (format === 'thumb') {
            var src = seat.cam_url + '/panos/P' + seat.cam_id.padStart(5, 0) + '.tiles/thumb.jpg';
            return '<div class="view-cam-wrapper"><img src="' + src + '" ' + cssProps + ' ></div>';
          }
          var src = seat.cam_url + '/Pano.html?p=P' + seat.cam_id.padStart(5, 0);
          return '<div class="view-cam-wrapper"><iframe src="' + src + '" ' + cssProps + ' /></div>';
        default:
          return false;
      }
    }

  };
})(jQuery, Drupal, drupalSettings);
;
/**
 * Library to display the seats location on a map
 */
(function ($, Drupal, drupalSettings) {
  'use strict';
  Drupal.behaviors.hubberMapLocation = {

    /**
     * Attach all events when DOM is ready.
     *
     * @return null
     */
    attach: function (context) {

      var self = this;

      // Event : Click on map location button
      $(document).once('map-location-button-click').on('click', '.js-map-location-button', function (e) {
        var button = $(this);
        if (!button.attr('map-location-url') || !button.attr('to-locate-seat-ids')) {
          return false;
        }
        var mapLocationUrl = button.attr('map-location-url');
        var toLocateSeatIds = button.attr('to-locate-seat-ids');

        $.ajax({
          url: mapLocationUrl,
          method: "POST",
          dataType: 'html',
          data: {
            'toLocateSeatIds': toLocateSeatIds,
          },
          success: function(response, textStatus, jqXHR) {
            var options = {
              classes: {
                "ui-dialog": "map-location-full"
              }
            };
            var $mapLocationContainer = $(response);
            Drupal.dialog($mapLocationContainer, options).showModal();
          }
        });
      });

      // Event : Click on enabled polygon block in location map
      $(document).once('map-location-polygon-block-enabled-click').on('click', 'polygon.polygon_block_enabled', function (e) {
        var $mapLocationContainer = $(this).closest('.map-location-container');
        var blockId = $(this).attr('block-id');
        self.displayMapBlock($mapLocationContainer, blockId);
      });

      // Event : Click on navigate back button in location map
      $(document).once('map-location-navigate-back-click').on('click', '.js-map-location-navigate-back-button', function (e) {
        var $mapLocationContainer = $(this).closest('.map-location-container');
        self.initMapLocation($mapLocationContainer);
      });

      // Event : Click on error map location close button
      $(document).once('map-location-error-close-click').on('click', '.map-location-error-close', function (e) {
        var $mapLocationContainer = $(this).closest('.map-location-container');
        Drupal.dialog($mapLocationContainer, {}).close();
      });

      // Event : Map location dialog box was created
      // We use this event to make sure that the dialog box containing the map is
      // already embedded in the DOM. Without it the svgPanZoom lib does not work properly.
      $(window).once('map-location-dialog-created').on('dialog:aftercreate', function (event, dialog, $element, settings) {
        self.initPanZoom($element);
      });
    },

    /**
     * Initialize the elements of the map to be displayed
     *
     * @param $mapLocationContainer
     */
    initMapLocation: function($mapLocationContainer) {
      $mapLocationContainer.find('.js-map-location-navigate-back-button').addClass('d-none');
      var isMonoBlock = $mapLocationContainer.find('svg.arena_map').hasClass('mono_block');
      if(isMonoBlock) {
        $mapLocationContainer.find('g.main_map').addClass('d-none');
        $mapLocationContainer.find('g.block_map').removeClass('d-none');
      } else {
        $mapLocationContainer.find('g.main_map').removeClass('d-none');
        $mapLocationContainer.find('g.block_map').addClass('d-none');
      }
      this.resizePanZoom($mapLocationContainer);
    },
    // calcul zoom limits x,y,x2,y2.
    beforePan: function (oldPan, newPan) {
      var customPan = {},
        sizes = this.getSizes(),
        left = -(sizes.viewBox.width * sizes.realZoom - sizes.width),
        right = 0,
        top = -(sizes.viewBox.height * sizes.realZoom - sizes.height),
        bottom = 0;
      if (sizes.viewBox.width * sizes.realZoom > sizes.width) {
        if (newPan.x < left) {
          customPan.x = left;
        }
        if (newPan.x > right) {
          customPan.x = right;
        }
      }
      else {
        customPan.x = (sizes.width - sizes.viewBox.width * sizes.realZoom) / 2;
      }
      if (sizes.viewBox.height * sizes.realZoom > sizes.height) {
        if (newPan.y < top) {
          customPan.y = top;
        }
        if (newPan.y > bottom) {
          customPan.y = bottom;
        }
      }
      else {
        customPan.y = (sizes.height - sizes.viewBox.height * sizes.realZoom) / 2;
      }
      return customPan;
    },

    /**
     * Initialize the pan zoom object.
     *
     * @param $mapLocationContainer
     */
    initPanZoom: function ($mapLocationContainer, options) {
      if ($mapLocationContainer.hasClass('map-location-container') && $mapLocationContainer.find('svg.svg_map').length > 0) {
        var svg = $mapLocationContainer.find('svg.svg_map').get(0);
        let settings = $.extend({}, {
          zoomEnabled: true,
          controlIconsEnabled: false,
          fit: false,
          contain: true,
          zoomScaleSensitivity: 0.1,
          minZoom: 1,
          maxZoom: 10,
          center: true,
          beforePan: this.beforePan
        }, options);
        svg.panZoom = svgPanZoom(svg, settings);
        this.initMapLocation($mapLocationContainer);
      }
    },

    /**
     * Hidde main map and display block map
     *
     * @param $mapLocationContainer
     * @param blockId
     */
    displayMapBlock: function($mapLocationContainer, blockId) {
      $mapLocationContainer.find('g.main_map').addClass('d-none');
      $mapLocationContainer.find('g.block_map').addClass('d-none');
      $mapLocationContainer.find('g.block_map[block-id="' + blockId + '"]').removeClass('d-none');
      $mapLocationContainer.find('.js-map-location-navigate-back-button').removeClass('d-none');
      this.resizePanZoom($mapLocationContainer);
    },

    /**
     * Resize the panZoom to fill its container
     *
     * @param $mapLocationContainer
     */
    resizePanZoom: function($mapLocationContainer) {
      // Retrieve panZoom object
      var panZoom = $mapLocationContainer.find('svg.svg_map').get(0).panZoom;
      // Force svg width and height
      $mapLocationContainer.find('svg.svg_map').width($mapLocationContainer.width());
      $mapLocationContainer.find('svg.svg_map').height($mapLocationContainer.height());
      // Resize panZoom
      panZoom.reset();
      panZoom.updateBBox();
      panZoom.resize();
      panZoom.contain();
      panZoom.center();
    }
  };
})(jQuery, Drupal, drupalSettings);
;
// svg-pan-zoom v3.6.1
// https://github.com/ariutta/svg-pan-zoom
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
  var SvgUtils = require("./svg-utilities");
  
  module.exports = {
    enable: function(instance) {
      // Select (and create if necessary) defs
      var defs = instance.svg.querySelector("defs");
      if (!defs) {
        defs = document.createElementNS(SvgUtils.svgNS, "defs");
        instance.svg.appendChild(defs);
      }
  
      // Check for style element, and create it if it doesn't exist
      var styleEl = defs.querySelector("style#svg-pan-zoom-controls-styles");
      if (!styleEl) {
        var style = document.createElementNS(SvgUtils.svgNS, "style");
        style.setAttribute("id", "svg-pan-zoom-controls-styles");
        style.setAttribute("type", "text/css");
        style.textContent =
          ".svg-pan-zoom-control { cursor: pointer; fill: black; fill-opacity: 0.333; } .svg-pan-zoom-control:hover { fill-opacity: 0.8; } .svg-pan-zoom-control-background { fill: white; fill-opacity: 0.5; } .svg-pan-zoom-control-background { fill-opacity: 0.8; }";
        defs.appendChild(style);
      }
  
      // Zoom Group
      var zoomGroup = document.createElementNS(SvgUtils.svgNS, "g");
      zoomGroup.setAttribute("id", "svg-pan-zoom-controls");
      zoomGroup.setAttribute(
        "transform",
        "translate(" +
          (instance.width - 70) +
          " " +
          (instance.height - 76) +
          ") scale(0.75)"
      );
      zoomGroup.setAttribute("class", "svg-pan-zoom-control");
  
      // Control elements
      zoomGroup.appendChild(this._createZoomIn(instance));
      zoomGroup.appendChild(this._createZoomReset(instance));
      zoomGroup.appendChild(this._createZoomOut(instance));
  
      // Finally append created element
      instance.svg.appendChild(zoomGroup);
  
      // Cache control instance
      instance.controlIcons = zoomGroup;
    },
  
    _createZoomIn: function(instance) {
      var zoomIn = document.createElementNS(SvgUtils.svgNS, "g");
      zoomIn.setAttribute("id", "svg-pan-zoom-zoom-in");
      zoomIn.setAttribute("transform", "translate(30.5 5) scale(0.015)");
      zoomIn.setAttribute("class", "svg-pan-zoom-control");
      zoomIn.addEventListener(
        "click",
        function() {
          instance.getPublicInstance().zoomIn();
        },
        false
      );
      zoomIn.addEventListener(
        "touchstart",
        function() {
          instance.getPublicInstance().zoomIn();
        },
        false
      );
  
      var zoomInBackground = document.createElementNS(SvgUtils.svgNS, "rect"); // TODO change these background space fillers to rounded rectangles so they look prettier
      zoomInBackground.setAttribute("x", "0");
      zoomInBackground.setAttribute("y", "0");
      zoomInBackground.setAttribute("width", "1500"); // larger than expected because the whole group is transformed to scale down
      zoomInBackground.setAttribute("height", "1400");
      zoomInBackground.setAttribute("class", "svg-pan-zoom-control-background");
      zoomIn.appendChild(zoomInBackground);
  
      var zoomInShape = document.createElementNS(SvgUtils.svgNS, "path");
      zoomInShape.setAttribute(
        "d",
        "M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960 q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z"
      );
      zoomInShape.setAttribute("class", "svg-pan-zoom-control-element");
      zoomIn.appendChild(zoomInShape);
  
      return zoomIn;
    },
  
    _createZoomReset: function(instance) {
      // reset
      var resetPanZoomControl = document.createElementNS(SvgUtils.svgNS, "g");
      resetPanZoomControl.setAttribute("id", "svg-pan-zoom-reset-pan-zoom");
      resetPanZoomControl.setAttribute("transform", "translate(5 35) scale(0.4)");
      resetPanZoomControl.setAttribute("class", "svg-pan-zoom-control");
      resetPanZoomControl.addEventListener(
        "click",
        function() {
          instance.getPublicInstance().reset();
        },
        false
      );
      resetPanZoomControl.addEventListener(
        "touchstart",
        function() {
          instance.getPublicInstance().reset();
        },
        false
      );
  
      var resetPanZoomControlBackground = document.createElementNS(
        SvgUtils.svgNS,
        "rect"
      ); // TODO change these background space fillers to rounded rectangles so they look prettier
      resetPanZoomControlBackground.setAttribute("x", "2");
      resetPanZoomControlBackground.setAttribute("y", "2");
      resetPanZoomControlBackground.setAttribute("width", "182"); // larger than expected because the whole group is transformed to scale down
      resetPanZoomControlBackground.setAttribute("height", "58");
      resetPanZoomControlBackground.setAttribute(
        "class",
        "svg-pan-zoom-control-background"
      );
      resetPanZoomControl.appendChild(resetPanZoomControlBackground);
  
      var resetPanZoomControlShape1 = document.createElementNS(
        SvgUtils.svgNS,
        "path"
      );
      resetPanZoomControlShape1.setAttribute(
        "d",
        "M33.051,20.632c-0.742-0.406-1.854-0.609-3.338-0.609h-7.969v9.281h7.769c1.543,0,2.701-0.188,3.473-0.562c1.365-0.656,2.048-1.953,2.048-3.891C35.032,22.757,34.372,21.351,33.051,20.632z"
      );
      resetPanZoomControlShape1.setAttribute(
        "class",
        "svg-pan-zoom-control-element"
      );
      resetPanZoomControl.appendChild(resetPanZoomControlShape1);
  
      var resetPanZoomControlShape2 = document.createElementNS(
        SvgUtils.svgNS,
        "path"
      );
      resetPanZoomControlShape2.setAttribute(
        "d",
        "M170.231,0.5H15.847C7.102,0.5,0.5,5.708,0.5,11.84v38.861C0.5,56.833,7.102,61.5,15.847,61.5h154.384c8.745,0,15.269-4.667,15.269-10.798V11.84C185.5,5.708,178.976,0.5,170.231,0.5z M42.837,48.569h-7.969c-0.219-0.766-0.375-1.383-0.469-1.852c-0.188-0.969-0.289-1.961-0.305-2.977l-0.047-3.211c-0.03-2.203-0.41-3.672-1.142-4.406c-0.732-0.734-2.103-1.102-4.113-1.102h-7.05v13.547h-7.055V14.022h16.524c2.361,0.047,4.178,0.344,5.45,0.891c1.272,0.547,2.351,1.352,3.234,2.414c0.731,0.875,1.31,1.844,1.737,2.906s0.64,2.273,0.64,3.633c0,1.641-0.414,3.254-1.242,4.84s-2.195,2.707-4.102,3.363c1.594,0.641,2.723,1.551,3.387,2.73s0.996,2.98,0.996,5.402v2.32c0,1.578,0.063,2.648,0.19,3.211c0.19,0.891,0.635,1.547,1.333,1.969V48.569z M75.579,48.569h-26.18V14.022h25.336v6.117H56.454v7.336h16.781v6H56.454v8.883h19.125V48.569z M104.497,46.331c-2.44,2.086-5.887,3.129-10.34,3.129c-4.548,0-8.125-1.027-10.731-3.082s-3.909-4.879-3.909-8.473h6.891c0.224,1.578,0.662,2.758,1.316,3.539c1.196,1.422,3.246,2.133,6.15,2.133c1.739,0,3.151-0.188,4.236-0.562c2.058-0.719,3.087-2.055,3.087-4.008c0-1.141-0.504-2.023-1.512-2.648c-1.008-0.609-2.607-1.148-4.796-1.617l-3.74-0.82c-3.676-0.812-6.201-1.695-7.576-2.648c-2.328-1.594-3.492-4.086-3.492-7.477c0-3.094,1.139-5.664,3.417-7.711s5.623-3.07,10.036-3.07c3.685,0,6.829,0.965,9.431,2.895c2.602,1.93,3.966,4.73,4.093,8.402h-6.938c-0.128-2.078-1.057-3.555-2.787-4.43c-1.154-0.578-2.587-0.867-4.301-0.867c-1.907,0-3.428,0.375-4.565,1.125c-1.138,0.75-1.706,1.797-1.706,3.141c0,1.234,0.561,2.156,1.682,2.766c0.721,0.406,2.25,0.883,4.589,1.43l6.063,1.43c2.657,0.625,4.648,1.461,5.975,2.508c2.059,1.625,3.089,3.977,3.089,7.055C108.157,41.624,106.937,44.245,104.497,46.331z M139.61,48.569h-26.18V14.022h25.336v6.117h-18.281v7.336h16.781v6h-16.781v8.883h19.125V48.569z M170.337,20.14h-10.336v28.43h-7.266V20.14h-10.383v-6.117h27.984V20.14z"
      );
      resetPanZoomControlShape2.setAttribute(
        "class",
        "svg-pan-zoom-control-element"
      );
      resetPanZoomControl.appendChild(resetPanZoomControlShape2);
  
      return resetPanZoomControl;
    },
  
    _createZoomOut: function(instance) {
      // zoom out
      var zoomOut = document.createElementNS(SvgUtils.svgNS, "g");
      zoomOut.setAttribute("id", "svg-pan-zoom-zoom-out");
      zoomOut.setAttribute("transform", "translate(30.5 70) scale(0.015)");
      zoomOut.setAttribute("class", "svg-pan-zoom-control");
      zoomOut.addEventListener(
        "click",
        function() {
          instance.getPublicInstance().zoomOut();
        },
        false
      );
      zoomOut.addEventListener(
        "touchstart",
        function() {
          instance.getPublicInstance().zoomOut();
        },
        false
      );
  
      var zoomOutBackground = document.createElementNS(SvgUtils.svgNS, "rect"); // TODO change these background space fillers to rounded rectangles so they look prettier
      zoomOutBackground.setAttribute("x", "0");
      zoomOutBackground.setAttribute("y", "0");
      zoomOutBackground.setAttribute("width", "1500"); // larger than expected because the whole group is transformed to scale down
      zoomOutBackground.setAttribute("height", "1400");
      zoomOutBackground.setAttribute("class", "svg-pan-zoom-control-background");
      zoomOut.appendChild(zoomOutBackground);
  
      var zoomOutShape = document.createElementNS(SvgUtils.svgNS, "path");
      zoomOutShape.setAttribute(
        "d",
        "M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5 t84.5 -203.5z"
      );
      zoomOutShape.setAttribute("class", "svg-pan-zoom-control-element");
      zoomOut.appendChild(zoomOutShape);
  
      return zoomOut;
    },
  
    disable: function(instance) {
      if (instance.controlIcons) {
        instance.controlIcons.parentNode.removeChild(instance.controlIcons);
        instance.controlIcons = null;
      }
    }
  };
  
  },{"./svg-utilities":5}],2:[function(require,module,exports){
  var SvgUtils = require("./svg-utilities"),
    Utils = require("./utilities");
  
  var ShadowViewport = function(viewport, options) {
    this.init(viewport, options);
  };
  
  /**
   * Initialization
   *
   * @param  {SVGElement} viewport
   * @param  {Object} options
   */
  ShadowViewport.prototype.init = function(viewport, options) {
    // DOM Elements
    this.viewport = viewport;
    this.options = options;
  
    // State cache
    this.originalState = { zoom: 1, x: 0, y: 0 };
    this.activeState = { zoom: 1, x: 0, y: 0 };
  
    this.updateCTMCached = Utils.proxy(this.updateCTM, this);
  
    // Create a custom requestAnimationFrame taking in account refreshRate
    this.requestAnimationFrame = Utils.createRequestAnimationFrame(
      this.options.refreshRate
    );
  
    // ViewBox
    this.viewBox = { x: 0, y: 0, width: 0, height: 0 };
    this.cacheViewBox();
  
    // Process CTM
    var newCTM = this.processCTM();
  
    // Update viewport CTM and cache zoom and pan
    this.setCTM(newCTM);
  
    // Update CTM in this frame
    this.updateCTM();
  };
  
  /**
   * Cache initial viewBox value
   * If no viewBox is defined, then use viewport size/position instead for viewBox values
   */
  ShadowViewport.prototype.cacheViewBox = function() {
    var svgViewBox = this.options.svg.getAttribute("viewBox");
  
    if (svgViewBox) {
      var viewBoxValues = svgViewBox
        .split(/[\s\,]/)
        .filter(function(v) {
          return v;
        })
        .map(parseFloat);
  
      // Cache viewbox x and y offset
      this.viewBox.x = viewBoxValues[0];
      this.viewBox.y = viewBoxValues[1];
      this.viewBox.width = viewBoxValues[2];
      this.viewBox.height = viewBoxValues[3];
  
      var zoom = Math.min(
        this.options.width / this.viewBox.width,
        this.options.height / this.viewBox.height
      );
  
      // Update active state
      this.activeState.zoom = zoom;
      this.activeState.x = (this.options.width - this.viewBox.width * zoom) / 2;
      this.activeState.y = (this.options.height - this.viewBox.height * zoom) / 2;
  
      // Force updating CTM
      this.updateCTMOnNextFrame();
  
      this.options.svg.removeAttribute("viewBox");
    } else {
      this.simpleViewBoxCache();
    }
  };
  
  /**
   * Recalculate viewport sizes and update viewBox cache
   */
  ShadowViewport.prototype.simpleViewBoxCache = function() {
    var bBox = this.viewport.getBBox();
  
    this.viewBox.x = bBox.x;
    this.viewBox.y = bBox.y;
    this.viewBox.width = bBox.width;
    this.viewBox.height = bBox.height;
  };
  
  /**
   * Returns a viewbox object. Safe to alter
   *
   * @return {Object} viewbox object
   */
  ShadowViewport.prototype.getViewBox = function() {
    return Utils.extend({}, this.viewBox);
  };
  
  /**
   * Get initial zoom and pan values. Save them into originalState
   * Parses viewBox attribute to alter initial sizes
   *
   * @return {CTM} CTM object based on options
   */
  ShadowViewport.prototype.processCTM = function() {
    var newCTM = this.getCTM();
  
    if (this.options.fit || this.options.contain) {
      var newScale;
      if (this.options.fit) {
        newScale = Math.min(
          this.options.width / this.viewBox.width,
          this.options.height / this.viewBox.height
        );
      } else {
        newScale = Math.max(
          this.options.width / this.viewBox.width,
          this.options.height / this.viewBox.height
        );
      }
  
      newCTM.a = newScale; //x-scale
      newCTM.d = newScale; //y-scale
      newCTM.e = -this.viewBox.x * newScale; //x-transform
      newCTM.f = -this.viewBox.y * newScale; //y-transform
    }
  
    if (this.options.center) {
      var offsetX =
          (this.options.width -
            (this.viewBox.width + this.viewBox.x * 2) * newCTM.a) *
          0.5,
        offsetY =
          (this.options.height -
            (this.viewBox.height + this.viewBox.y * 2) * newCTM.a) *
          0.5;
  
      newCTM.e = offsetX;
      newCTM.f = offsetY;
    }
  
    // Cache initial values. Based on activeState and fix+center opitons
    this.originalState.zoom = newCTM.a;
    this.originalState.x = newCTM.e;
    this.originalState.y = newCTM.f;
  
    return newCTM;
  };
  
  /**
   * Return originalState object. Safe to alter
   *
   * @return {Object}
   */
  ShadowViewport.prototype.getOriginalState = function() {
    return Utils.extend({}, this.originalState);
  };
  
  /**
   * Return actualState object. Safe to alter
   *
   * @return {Object}
   */
  ShadowViewport.prototype.getState = function() {
    return Utils.extend({}, this.activeState);
  };
  
  /**
   * Get zoom scale
   *
   * @return {Float} zoom scale
   */
  ShadowViewport.prototype.getZoom = function() {
    return this.activeState.zoom;
  };
  
  /**
   * Get zoom scale for pubilc usage
   *
   * @return {Float} zoom scale
   */
  ShadowViewport.prototype.getRelativeZoom = function() {
    return this.activeState.zoom / this.originalState.zoom;
  };
  
  /**
   * Compute zoom scale for pubilc usage
   *
   * @return {Float} zoom scale
   */
  ShadowViewport.prototype.computeRelativeZoom = function(scale) {
    return scale / this.originalState.zoom;
  };
  
  /**
   * Get pan
   *
   * @return {Object}
   */
  ShadowViewport.prototype.getPan = function() {
    return { x: this.activeState.x, y: this.activeState.y };
  };
  
  /**
   * Return cached viewport CTM value that can be safely modified
   *
   * @return {SVGMatrix}
   */
  ShadowViewport.prototype.getCTM = function() {
    var safeCTM = this.options.svg.createSVGMatrix();
  
    // Copy values manually as in FF they are not itterable
    safeCTM.a = this.activeState.zoom;
    safeCTM.b = 0;
    safeCTM.c = 0;
    safeCTM.d = this.activeState.zoom;
    safeCTM.e = this.activeState.x;
    safeCTM.f = this.activeState.y;
  
    return safeCTM;
  };
  
  /**
   * Set a new CTM
   *
   * @param {SVGMatrix} newCTM
   */
  ShadowViewport.prototype.setCTM = function(newCTM) {
    var willZoom = this.isZoomDifferent(newCTM),
      willPan = this.isPanDifferent(newCTM);
  
    if (willZoom || willPan) {
      // Before zoom
      if (willZoom) {
        // If returns false then cancel zooming
        if (
          this.options.beforeZoom(
            this.getRelativeZoom(),
            this.computeRelativeZoom(newCTM.a)
          ) === false
        ) {
          newCTM.a = newCTM.d = this.activeState.zoom;
          willZoom = false;
        } else {
          this.updateCache(newCTM);
          this.options.onZoom(this.getRelativeZoom());
        }
      }
  
      // Before pan
      if (willPan) {
        var preventPan = this.options.beforePan(this.getPan(), {
            x: newCTM.e,
            y: newCTM.f
          }),
          // If prevent pan is an object
          preventPanX = false,
          preventPanY = false;
  
        // If prevent pan is Boolean false
        if (preventPan === false) {
          // Set x and y same as before
          newCTM.e = this.getPan().x;
          newCTM.f = this.getPan().y;
  
          preventPanX = preventPanY = true;
        } else if (Utils.isObject(preventPan)) {
          // Check for X axes attribute
          if (preventPan.x === false) {
            // Prevent panning on x axes
            newCTM.e = this.getPan().x;
            preventPanX = true;
          } else if (Utils.isNumber(preventPan.x)) {
            // Set a custom pan value
            newCTM.e = preventPan.x;
          }
  
          // Check for Y axes attribute
          if (preventPan.y === false) {
            // Prevent panning on x axes
            newCTM.f = this.getPan().y;
            preventPanY = true;
          } else if (Utils.isNumber(preventPan.y)) {
            // Set a custom pan value
            newCTM.f = preventPan.y;
          }
        }
  
        // Update willPan flag
        // Check if newCTM is still different
        if ((preventPanX && preventPanY) || !this.isPanDifferent(newCTM)) {
          willPan = false;
        } else {
          this.updateCache(newCTM);
          this.options.onPan(this.getPan());
        }
      }
  
      // Check again if should zoom or pan
      if (willZoom || willPan) {
        this.updateCTMOnNextFrame();
      }
    }
  };
  
  ShadowViewport.prototype.isZoomDifferent = function(newCTM) {
    return this.activeState.zoom !== newCTM.a;
  };
  
  ShadowViewport.prototype.isPanDifferent = function(newCTM) {
    return this.activeState.x !== newCTM.e || this.activeState.y !== newCTM.f;
  };
  
  /**
   * Update cached CTM and active state
   *
   * @param {SVGMatrix} newCTM
   */
  ShadowViewport.prototype.updateCache = function(newCTM) {
    this.activeState.zoom = newCTM.a;
    this.activeState.x = newCTM.e;
    this.activeState.y = newCTM.f;
  };
  
  ShadowViewport.prototype.pendingUpdate = false;
  
  /**
   * Place a request to update CTM on next Frame
   */
  ShadowViewport.prototype.updateCTMOnNextFrame = function() {
    if (!this.pendingUpdate) {
      // Lock
      this.pendingUpdate = true;
  
      // Throttle next update
      this.requestAnimationFrame.call(window, this.updateCTMCached);
    }
  };
  
  /**
   * Update viewport CTM with cached CTM
   */
  ShadowViewport.prototype.updateCTM = function() {
    var ctm = this.getCTM();
  
    // Updates SVG element
    SvgUtils.setCTM(this.viewport, ctm, this.defs);
  
    // Free the lock
    this.pendingUpdate = false;
  
    // Notify about the update
    if (this.options.onUpdatedCTM) {
      this.options.onUpdatedCTM(ctm);
    }
  };
  
  module.exports = function(viewport, options) {
    return new ShadowViewport(viewport, options);
  };
  
  },{"./svg-utilities":5,"./utilities":7}],3:[function(require,module,exports){
  var svgPanZoom = require("./svg-pan-zoom.js");
  
  // UMD module definition
  (function(window, document) {
    // AMD
    if (typeof define === "function" && define.amd) {
      define("svg-pan-zoom", function() {
        return svgPanZoom;
      });
      // CMD
    } else if (typeof module !== "undefined" && module.exports) {
      module.exports = svgPanZoom;
  
      // Browser
      // Keep exporting globally as module.exports is available because of browserify
      window.svgPanZoom = svgPanZoom;
    }
  })(window, document);
  
  },{"./svg-pan-zoom.js":4}],4:[function(require,module,exports){
  var Wheel = require("./uniwheel"),
    ControlIcons = require("./control-icons"),
    Utils = require("./utilities"),
    SvgUtils = require("./svg-utilities"),
    ShadowViewport = require("./shadow-viewport");
  
  var SvgPanZoom = function(svg, options) {
    this.init(svg, options);
  };
  
  var optionsDefaults = {
    viewportSelector: ".svg-pan-zoom_viewport", // Viewport selector. Can be querySelector string or SVGElement
    panEnabled: true, // enable or disable panning (default enabled)
    controlIconsEnabled: false, // insert icons to give user an option in addition to mouse events to control pan/zoom (default disabled)
    zoomEnabled: true, // enable or disable zooming (default enabled)
    dblClickZoomEnabled: true, // enable or disable zooming by double clicking (default enabled)
    mouseWheelZoomEnabled: true, // enable or disable zooming by mouse wheel (default enabled)
    preventMouseEventsDefault: true, // enable or disable preventDefault for mouse events
    zoomScaleSensitivity: 0.1, // Zoom sensitivity
    minZoom: 0.5, // Minimum Zoom level
    maxZoom: 10, // Maximum Zoom level
    fit: true, // enable or disable viewport fit in SVG (default true)
    contain: false, // enable or disable viewport contain the svg (default false)
    center: true, // enable or disable viewport centering in SVG (default true)
    refreshRate: "auto", // Maximum number of frames per second (altering SVG's viewport)
    beforeZoom: null,
    onZoom: null,
    beforePan: null,
    onPan: null,
    customEventsHandler: null,
    eventsListenerElement: null,
    onUpdatedCTM: null
  };
  
  var passiveListenerOption = { passive: true };
  
  SvgPanZoom.prototype.init = function(svg, options) {
    var that = this;
  
    this.svg = svg;
    this.defs = svg.querySelector("defs");
  
    // Add default attributes to SVG
    SvgUtils.setupSvgAttributes(this.svg);
  
    // Set options
    this.options = Utils.extend(Utils.extend({}, optionsDefaults), options);
  
    // Set default state
    this.state = "none";
  
    // Get dimensions
    var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(
      svg
    );
    this.width = boundingClientRectNormalized.width;
    this.height = boundingClientRectNormalized.height;
  
    // Init shadow viewport
    this.viewport = ShadowViewport(
      SvgUtils.getOrCreateViewport(this.svg, this.options.viewportSelector),
      {
        svg: this.svg,
        width: this.width,
        height: this.height,
        fit: this.options.fit,
        contain: this.options.contain,
        center: this.options.center,
        refreshRate: this.options.refreshRate,
        // Put callbacks into functions as they can change through time
        beforeZoom: function(oldScale, newScale) {
          if (that.viewport && that.options.beforeZoom) {
            return that.options.beforeZoom(oldScale, newScale);
          }
        },
        onZoom: function(scale) {
          if (that.viewport && that.options.onZoom) {
            return that.options.onZoom(scale);
          }
        },
        beforePan: function(oldPoint, newPoint) {
          if (that.viewport && that.options.beforePan) {
            return that.options.beforePan(oldPoint, newPoint);
          }
        },
        onPan: function(point) {
          if (that.viewport && that.options.onPan) {
            return that.options.onPan(point);
          }
        },
        onUpdatedCTM: function(ctm) {
          if (that.viewport && that.options.onUpdatedCTM) {
            return that.options.onUpdatedCTM(ctm);
          }
        }
      }
    );
  
    // Wrap callbacks into public API context
    var publicInstance = this.getPublicInstance();
    publicInstance.setBeforeZoom(this.options.beforeZoom);
    publicInstance.setOnZoom(this.options.onZoom);
    publicInstance.setBeforePan(this.options.beforePan);
    publicInstance.setOnPan(this.options.onPan);
    publicInstance.setOnUpdatedCTM(this.options.onUpdatedCTM);
  
    if (this.options.controlIconsEnabled) {
      ControlIcons.enable(this);
    }
  
    // Init events handlers
    this.lastMouseWheelEventTime = Date.now();
    this.setupHandlers();
  };
  
  /**
   * Register event handlers
   */
  SvgPanZoom.prototype.setupHandlers = function() {
    var that = this,
      prevEvt = null; // use for touchstart event to detect double tap
  
    this.eventListeners = {
      // Mouse down group
      mousedown: function(evt) {
        var result = that.handleMouseDown(evt, prevEvt);
        prevEvt = evt;
        return result;
      },
      touchstart: function(evt) {
        var result = that.handleMouseDown(evt, prevEvt);
        prevEvt = evt;
        return result;
      },
  
      // Mouse up group
      mouseup: function(evt) {
        return that.handleMouseUp(evt);
      },
      touchend: function(evt) {
        return that.handleMouseUp(evt);
      },
  
      // Mouse move group
      mousemove: function(evt) {
        return that.handleMouseMove(evt);
      },
      touchmove: function(evt) {
        return that.handleMouseMove(evt);
      },
  
      // Mouse leave group
      mouseleave: function(evt) {
        return that.handleMouseUp(evt);
      },
      touchleave: function(evt) {
        return that.handleMouseUp(evt);
      },
      touchcancel: function(evt) {
        return that.handleMouseUp(evt);
      }
    };
  
    // Init custom events handler if available
    // eslint-disable-next-line eqeqeq
    if (this.options.customEventsHandler != null) {
      this.options.customEventsHandler.init({
        svgElement: this.svg,
        eventsListenerElement: this.options.eventsListenerElement,
        instance: this.getPublicInstance()
      });
  
      // Custom event handler may halt builtin listeners
      var haltEventListeners = this.options.customEventsHandler
        .haltEventListeners;
      if (haltEventListeners && haltEventListeners.length) {
        for (var i = haltEventListeners.length - 1; i >= 0; i--) {
          if (this.eventListeners.hasOwnProperty(haltEventListeners[i])) {
            delete this.eventListeners[haltEventListeners[i]];
          }
        }
      }
    }
  
    // Bind eventListeners
    for (var event in this.eventListeners) {
      // Attach event to eventsListenerElement or SVG if not available
      (this.options.eventsListenerElement || this.svg).addEventListener(
        event,
        this.eventListeners[event],
        !this.options.preventMouseEventsDefault ? passiveListenerOption : false
      );
    }
  
    // Zoom using mouse wheel
    if (this.options.mouseWheelZoomEnabled) {
      this.options.mouseWheelZoomEnabled = false; // set to false as enable will set it back to true
      this.enableMouseWheelZoom();
    }
  };
  
  /**
   * Enable ability to zoom using mouse wheel
   */
  SvgPanZoom.prototype.enableMouseWheelZoom = function() {
    if (!this.options.mouseWheelZoomEnabled) {
      var that = this;
  
      // Mouse wheel listener
      this.wheelListener = function(evt) {
        return that.handleMouseWheel(evt);
      };
  
      // Bind wheelListener
      var isPassiveListener = !this.options.preventMouseEventsDefault;
      Wheel.on(
        this.options.eventsListenerElement || this.svg,
        this.wheelListener,
        isPassiveListener
      );
  
      this.options.mouseWheelZoomEnabled = true;
    }
  };
  
  /**
   * Disable ability to zoom using mouse wheel
   */
  SvgPanZoom.prototype.disableMouseWheelZoom = function() {
    if (this.options.mouseWheelZoomEnabled) {
      var isPassiveListener = !this.options.preventMouseEventsDefault;
      Wheel.off(
        this.options.eventsListenerElement || this.svg,
        this.wheelListener,
        isPassiveListener
      );
      this.options.mouseWheelZoomEnabled = false;
    }
  };
  
  /**
   * Handle mouse wheel event
   *
   * @param  {Event} evt
   */
  SvgPanZoom.prototype.handleMouseWheel = function(evt) {
    if (!this.options.zoomEnabled || this.state !== "none") {
      return;
    }
  
    if (this.options.preventMouseEventsDefault) {
      if (evt.preventDefault) {
        evt.preventDefault();
      } else {
        evt.returnValue = false;
      }
    }
  
    // Default delta in case that deltaY is not available
    var delta = evt.deltaY || 1,
      timeDelta = Date.now() - this.lastMouseWheelEventTime,
      divider = 3 + Math.max(0, 30 - timeDelta);
  
    // Update cache
    this.lastMouseWheelEventTime = Date.now();
  
    // Make empirical adjustments for browsers that give deltaY in pixels (deltaMode=0)
    if ("deltaMode" in evt && evt.deltaMode === 0 && evt.wheelDelta) {
      delta = evt.deltaY === 0 ? 0 : Math.abs(evt.wheelDelta) / evt.deltaY;
    }
  
    delta =
      -0.3 < delta && delta < 0.3
        ? delta
        : ((delta > 0 ? 1 : -1) * Math.log(Math.abs(delta) + 10)) / divider;
  
    var inversedScreenCTM = this.svg.getScreenCTM().inverse(),
      relativeMousePoint = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(
        inversedScreenCTM
      ),
      zoom = Math.pow(1 + this.options.zoomScaleSensitivity, -1 * delta); // multiplying by neg. 1 so as to make zoom in/out behavior match Google maps behavior
  
    this.zoomAtPoint(zoom, relativeMousePoint);
  };
  
  /**
   * Zoom in at a SVG point
   *
   * @param  {SVGPoint} point
   * @param  {Float} zoomScale    Number representing how much to zoom
   * @param  {Boolean} zoomAbsolute Default false. If true, zoomScale is treated as an absolute value.
   *                                Otherwise, zoomScale is treated as a multiplied (e.g. 1.10 would zoom in 10%)
   */
  SvgPanZoom.prototype.zoomAtPoint = function(zoomScale, point, zoomAbsolute) {
    var originalState = this.viewport.getOriginalState();
  
    if (!zoomAbsolute) {
      // Fit zoomScale in set bounds
      if (
        this.getZoom() * zoomScale <
        this.options.minZoom * originalState.zoom
      ) {
        zoomScale = (this.options.minZoom * originalState.zoom) / this.getZoom();
      } else if (
        this.getZoom() * zoomScale >
        this.options.maxZoom * originalState.zoom
      ) {
        zoomScale = (this.options.maxZoom * originalState.zoom) / this.getZoom();
      }
    } else {
      // Fit zoomScale in set bounds
      zoomScale = Math.max(
        this.options.minZoom * originalState.zoom,
        Math.min(this.options.maxZoom * originalState.zoom, zoomScale)
      );
      // Find relative scale to achieve desired scale
      zoomScale = zoomScale / this.getZoom();
    }
  
    var oldCTM = this.viewport.getCTM(),
      relativePoint = point.matrixTransform(oldCTM.inverse()),
      modifier = this.svg
        .createSVGMatrix()
        .translate(relativePoint.x, relativePoint.y)
        .scale(zoomScale)
        .translate(-relativePoint.x, -relativePoint.y),
      newCTM = oldCTM.multiply(modifier);
  
    if (newCTM.a !== oldCTM.a) {
      this.viewport.setCTM(newCTM);
    }
  };
  
  /**
   * Zoom at center point
   *
   * @param  {Float} scale
   * @param  {Boolean} absolute Marks zoom scale as relative or absolute
   */
  SvgPanZoom.prototype.zoom = function(scale, absolute) {
    this.zoomAtPoint(
      scale,
      SvgUtils.getSvgCenterPoint(this.svg, this.width, this.height),
      absolute
    );
  };
  
  /**
   * Zoom used by public instance
   *
   * @param  {Float} scale
   * @param  {Boolean} absolute Marks zoom scale as relative or absolute
   */
  SvgPanZoom.prototype.publicZoom = function(scale, absolute) {
    if (absolute) {
      scale = this.computeFromRelativeZoom(scale);
    }
  
    this.zoom(scale, absolute);
  };
  
  /**
   * Zoom at point used by public instance
   *
   * @param  {Float} scale
   * @param  {SVGPoint|Object} point    An object that has x and y attributes
   * @param  {Boolean} absolute Marks zoom scale as relative or absolute
   */
  SvgPanZoom.prototype.publicZoomAtPoint = function(scale, point, absolute) {
    if (absolute) {
      // Transform zoom into a relative value
      scale = this.computeFromRelativeZoom(scale);
    }
  
    // If not a SVGPoint but has x and y then create a SVGPoint
    if (Utils.getType(point) !== "SVGPoint") {
      if ("x" in point && "y" in point) {
        point = SvgUtils.createSVGPoint(this.svg, point.x, point.y);
      } else {
        throw new Error("Given point is invalid");
      }
    }
  
    this.zoomAtPoint(scale, point, absolute);
  };
  
  /**
   * Get zoom scale
   *
   * @return {Float} zoom scale
   */
  SvgPanZoom.prototype.getZoom = function() {
    return this.viewport.getZoom();
  };
  
  /**
   * Get zoom scale for public usage
   *
   * @return {Float} zoom scale
   */
  SvgPanZoom.prototype.getRelativeZoom = function() {
    return this.viewport.getRelativeZoom();
  };
  
  /**
   * Compute actual zoom from public zoom
   *
   * @param  {Float} zoom
   * @return {Float} zoom scale
   */
  SvgPanZoom.prototype.computeFromRelativeZoom = function(zoom) {
    return zoom * this.viewport.getOriginalState().zoom;
  };
  
  /**
   * Set zoom to initial state
   */
  SvgPanZoom.prototype.resetZoom = function() {
    var originalState = this.viewport.getOriginalState();
  
    this.zoom(originalState.zoom, true);
  };
  
  /**
   * Set pan to initial state
   */
  SvgPanZoom.prototype.resetPan = function() {
    this.pan(this.viewport.getOriginalState());
  };
  
  /**
   * Set pan and zoom to initial state
   */
  SvgPanZoom.prototype.reset = function() {
    this.resetZoom();
    this.resetPan();
  };
  
  /**
   * Handle double click event
   * See handleMouseDown() for alternate detection method
   *
   * @param {Event} evt
   */
  SvgPanZoom.prototype.handleDblClick = function(evt) {
    if (this.options.preventMouseEventsDefault) {
      if (evt.preventDefault) {
        evt.preventDefault();
      } else {
        evt.returnValue = false;
      }
    }
  
    // Check if target was a control button
    if (this.options.controlIconsEnabled) {
      var targetClass = evt.target.getAttribute("class") || "";
      if (targetClass.indexOf("svg-pan-zoom-control") > -1) {
        return false;
      }
    }
  
    var zoomFactor;
  
    if (evt.shiftKey) {
      zoomFactor = 1 / ((1 + this.options.zoomScaleSensitivity) * 2); // zoom out when shift key pressed
    } else {
      zoomFactor = (1 + this.options.zoomScaleSensitivity) * 2;
    }
  
    var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(
      this.svg.getScreenCTM().inverse()
    );
    this.zoomAtPoint(zoomFactor, point);
  };
  
  /**
   * Handle click event
   *
   * @param {Event} evt
   */
  SvgPanZoom.prototype.handleMouseDown = function(evt, prevEvt) {
    if (this.options.preventMouseEventsDefault) {
      if (evt.preventDefault) {
        evt.preventDefault();
      } else {
        evt.returnValue = false;
      }
    }
  
    Utils.mouseAndTouchNormalize(evt, this.svg);
  
    // Double click detection; more consistent than ondblclick
    if (this.options.dblClickZoomEnabled && Utils.isDblClick(evt, prevEvt)) {
      this.handleDblClick(evt);
    } else {
      // Pan mode
      this.state = "pan";
      this.firstEventCTM = this.viewport.getCTM();
      this.stateOrigin = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(
        this.firstEventCTM.inverse()
      );
    }
  };
  
  /**
   * Handle mouse move event
   *
   * @param  {Event} evt
   */
  SvgPanZoom.prototype.handleMouseMove = function(evt) {
    if (this.options.preventMouseEventsDefault) {
      if (evt.preventDefault) {
        evt.preventDefault();
      } else {
        evt.returnValue = false;
      }
    }
  
    if (this.state === "pan" && this.options.panEnabled) {
      // Pan mode
      var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(
          this.firstEventCTM.inverse()
        ),
        viewportCTM = this.firstEventCTM.translate(
          point.x - this.stateOrigin.x,
          point.y - this.stateOrigin.y
        );
  
      this.viewport.setCTM(viewportCTM);
    }
  };
  
  /**
   * Handle mouse button release event
   *
   * @param {Event} evt
   */
  SvgPanZoom.prototype.handleMouseUp = function(evt) {
    if (this.options.preventMouseEventsDefault) {
      if (evt.preventDefault) {
        evt.preventDefault();
      } else {
        evt.returnValue = false;
      }
    }
  
    if (this.state === "pan") {
      // Quit pan mode
      this.state = "none";
    }
  };
  
  /**
   * Adjust viewport size (only) so it will fit in SVG
   * Does not center image
   */
  SvgPanZoom.prototype.fit = function() {
    var viewBox = this.viewport.getViewBox(),
      newScale = Math.min(
        this.width / viewBox.width,
        this.height / viewBox.height
      );
  
    this.zoom(newScale, true);
  };
  
  /**
   * Adjust viewport size (only) so it will contain the SVG
   * Does not center image
   */
  SvgPanZoom.prototype.contain = function() {
    var viewBox = this.viewport.getViewBox(),
      newScale = Math.max(
        this.width / viewBox.width,
        this.height / viewBox.height
      );
  
    this.zoom(newScale, true);
  };
  
  /**
   * Adjust viewport pan (only) so it will be centered in SVG
   * Does not zoom/fit/contain image
   */
  SvgPanZoom.prototype.center = function() {
    var viewBox = this.viewport.getViewBox(),
      offsetX =
        (this.width - (viewBox.width + viewBox.x * 2) * this.getZoom()) * 0.5,
      offsetY =
        (this.height - (viewBox.height + viewBox.y * 2) * this.getZoom()) * 0.5;
  
    this.getPublicInstance().pan({ x: offsetX, y: offsetY });
  };
  
  /**
   * Update content cached BorderBox
   * Use when viewport contents change
   */
  SvgPanZoom.prototype.updateBBox = function() {
    this.viewport.simpleViewBoxCache();
  };
  
  /**
   * Pan to a rendered position
   *
   * @param  {Object} point {x: 0, y: 0}
   */
  SvgPanZoom.prototype.pan = function(point) {
    var viewportCTM = this.viewport.getCTM();
    viewportCTM.e = point.x;
    viewportCTM.f = point.y;
    this.viewport.setCTM(viewportCTM);
  };
  
  /**
   * Relatively pan the graph by a specified rendered position vector
   *
   * @param  {Object} point {x: 0, y: 0}
   */
  SvgPanZoom.prototype.panBy = function(point) {
    var viewportCTM = this.viewport.getCTM();
    viewportCTM.e += point.x;
    viewportCTM.f += point.y;
    this.viewport.setCTM(viewportCTM);
  };
  
  /**
   * Get pan vector
   *
   * @return {Object} {x: 0, y: 0}
   */
  SvgPanZoom.prototype.getPan = function() {
    var state = this.viewport.getState();
  
    return { x: state.x, y: state.y };
  };
  
  /**
   * Recalculates cached svg dimensions and controls position
   */
  SvgPanZoom.prototype.resize = function() {
    // Get dimensions
    var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(
      this.svg
    );
    this.width = boundingClientRectNormalized.width;
    this.height = boundingClientRectNormalized.height;
  
    // Recalculate original state
    var viewport = this.viewport;
    viewport.options.width = this.width;
    viewport.options.height = this.height;
    viewport.processCTM();
  
    // Reposition control icons by re-enabling them
    if (this.options.controlIconsEnabled) {
      this.getPublicInstance().disableControlIcons();
      this.getPublicInstance().enableControlIcons();
    }
  };
  
  /**
   * Unbind mouse events, free callbacks and destroy public instance
   */
  SvgPanZoom.prototype.destroy = function() {
    var that = this;
  
    // Free callbacks
    this.beforeZoom = null;
    this.onZoom = null;
    this.beforePan = null;
    this.onPan = null;
    this.onUpdatedCTM = null;
  
    // Destroy custom event handlers
    // eslint-disable-next-line eqeqeq
    if (this.options.customEventsHandler != null) {
      this.options.customEventsHandler.destroy({
        svgElement: this.svg,
        eventsListenerElement: this.options.eventsListenerElement,
        instance: this.getPublicInstance()
      });
    }
  
    // Unbind eventListeners
    for (var event in this.eventListeners) {
      (this.options.eventsListenerElement || this.svg).removeEventListener(
        event,
        this.eventListeners[event],
        !this.options.preventMouseEventsDefault ? passiveListenerOption : false
      );
    }
  
    // Unbind wheelListener
    this.disableMouseWheelZoom();
  
    // Remove control icons
    this.getPublicInstance().disableControlIcons();
  
    // Reset zoom and pan
    this.reset();
  
    // Remove instance from instancesStore
    instancesStore = instancesStore.filter(function(instance) {
      return instance.svg !== that.svg;
    });
  
    // Delete options and its contents
    delete this.options;
  
    // Delete viewport to make public shadow viewport functions uncallable
    delete this.viewport;
  
    // Destroy public instance and rewrite getPublicInstance
    delete this.publicInstance;
    delete this.pi;
    this.getPublicInstance = function() {
      return null;
    };
  };
  
  /**
   * Returns a public instance object
   *
   * @return {Object} Public instance object
   */
  SvgPanZoom.prototype.getPublicInstance = function() {
    var that = this;
  
    // Create cache
    if (!this.publicInstance) {
      this.publicInstance = this.pi = {
        // Pan
        enablePan: function() {
          that.options.panEnabled = true;
          return that.pi;
        },
        disablePan: function() {
          that.options.panEnabled = false;
          return that.pi;
        },
        isPanEnabled: function() {
          return !!that.options.panEnabled;
        },
        pan: function(point) {
          that.pan(point);
          return that.pi;
        },
        panBy: function(point) {
          that.panBy(point);
          return that.pi;
        },
        getPan: function() {
          return that.getPan();
        },
        // Pan event
        setBeforePan: function(fn) {
          that.options.beforePan =
            fn === null ? null : Utils.proxy(fn, that.publicInstance);
          return that.pi;
        },
        setOnPan: function(fn) {
          that.options.onPan =
            fn === null ? null : Utils.proxy(fn, that.publicInstance);
          return that.pi;
        },
        // Zoom and Control Icons
        enableZoom: function() {
          that.options.zoomEnabled = true;
          return that.pi;
        },
        disableZoom: function() {
          that.options.zoomEnabled = false;
          return that.pi;
        },
        isZoomEnabled: function() {
          return !!that.options.zoomEnabled;
        },
        enableControlIcons: function() {
          if (!that.options.controlIconsEnabled) {
            that.options.controlIconsEnabled = true;
            ControlIcons.enable(that);
          }
          return that.pi;
        },
        disableControlIcons: function() {
          if (that.options.controlIconsEnabled) {
            that.options.controlIconsEnabled = false;
            ControlIcons.disable(that);
          }
          return that.pi;
        },
        isControlIconsEnabled: function() {
          return !!that.options.controlIconsEnabled;
        },
        // Double click zoom
        enableDblClickZoom: function() {
          that.options.dblClickZoomEnabled = true;
          return that.pi;
        },
        disableDblClickZoom: function() {
          that.options.dblClickZoomEnabled = false;
          return that.pi;
        },
        isDblClickZoomEnabled: function() {
          return !!that.options.dblClickZoomEnabled;
        },
        // Mouse wheel zoom
        enableMouseWheelZoom: function() {
          that.enableMouseWheelZoom();
          return that.pi;
        },
        disableMouseWheelZoom: function() {
          that.disableMouseWheelZoom();
          return that.pi;
        },
        isMouseWheelZoomEnabled: function() {
          return !!that.options.mouseWheelZoomEnabled;
        },
        // Zoom scale and bounds
        setZoomScaleSensitivity: function(scale) {
          that.options.zoomScaleSensitivity = scale;
          return that.pi;
        },
        setMinZoom: function(zoom) {
          that.options.minZoom = zoom;
          return that.pi;
        },
        setMaxZoom: function(zoom) {
          that.options.maxZoom = zoom;
          return that.pi;
        },
        // Zoom event
        setBeforeZoom: function(fn) {
          that.options.beforeZoom =
            fn === null ? null : Utils.proxy(fn, that.publicInstance);
          return that.pi;
        },
        setOnZoom: function(fn) {
          that.options.onZoom =
            fn === null ? null : Utils.proxy(fn, that.publicInstance);
          return that.pi;
        },
        // Zooming
        zoom: function(scale) {
          that.publicZoom(scale, true);
          return that.pi;
        },
        zoomBy: function(scale) {
          that.publicZoom(scale, false);
          return that.pi;
        },
        zoomAtPoint: function(scale, point) {
          that.publicZoomAtPoint(scale, point, true);
          return that.pi;
        },
        zoomAtPointBy: function(scale, point) {
          that.publicZoomAtPoint(scale, point, false);
          return that.pi;
        },
        zoomIn: function() {
          this.zoomBy(1 + that.options.zoomScaleSensitivity);
          return that.pi;
        },
        zoomOut: function() {
          this.zoomBy(1 / (1 + that.options.zoomScaleSensitivity));
          return that.pi;
        },
        getZoom: function() {
          return that.getRelativeZoom();
        },
        // CTM update
        setOnUpdatedCTM: function(fn) {
          that.options.onUpdatedCTM =
            fn === null ? null : Utils.proxy(fn, that.publicInstance);
          return that.pi;
        },
        // Reset
        resetZoom: function() {
          that.resetZoom();
          return that.pi;
        },
        resetPan: function() {
          that.resetPan();
          return that.pi;
        },
        reset: function() {
          that.reset();
          return that.pi;
        },
        // Fit, Contain and Center
        fit: function() {
          that.fit();
          return that.pi;
        },
        contain: function() {
          that.contain();
          return that.pi;
        },
        center: function() {
          that.center();
          return that.pi;
        },
        // Size and Resize
        updateBBox: function() {
          that.updateBBox();
          return that.pi;
        },
        resize: function() {
          that.resize();
          return that.pi;
        },
        getSizes: function() {
          return {
            width: that.width,
            height: that.height,
            realZoom: that.getZoom(),
            viewBox: that.viewport.getViewBox()
          };
        },
        // Destroy
        destroy: function() {
          that.destroy();
          return that.pi;
        }
      };
    }
  
    return this.publicInstance;
  };
  
  /**
   * Stores pairs of instances of SvgPanZoom and SVG
   * Each pair is represented by an object {svg: SVGSVGElement, instance: SvgPanZoom}
   *
   * @type {Array}
   */
  var instancesStore = [];
  
  var svgPanZoom = function(elementOrSelector, options) {
    var svg = Utils.getSvg(elementOrSelector);
  
    if (svg === null) {
      return null;
    } else {
      // Look for existent instance
      for (var i = instancesStore.length - 1; i >= 0; i--) {
        if (instancesStore[i].svg === svg) {
          return instancesStore[i].instance.getPublicInstance();
        }
      }
  
      // If instance not found - create one
      instancesStore.push({
        svg: svg,
        instance: new SvgPanZoom(svg, options)
      });
  
      // Return just pushed instance
      return instancesStore[
        instancesStore.length - 1
      ].instance.getPublicInstance();
    }
  };
  
  module.exports = svgPanZoom;
  
  },{"./control-icons":1,"./shadow-viewport":2,"./svg-utilities":5,"./uniwheel":6,"./utilities":7}],5:[function(require,module,exports){
  var Utils = require("./utilities"),
    _browser = "unknown";
  
  // http://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser
  if (/*@cc_on!@*/ false || !!document.documentMode) {
    // internet explorer
    _browser = "ie";
  }
  
  module.exports = {
    svgNS: "http://www.w3.org/2000/svg",
    xmlNS: "http://www.w3.org/XML/1998/namespace",
    xmlnsNS: "http://www.w3.org/2000/xmlns/",
    xlinkNS: "http://www.w3.org/1999/xlink",
    evNS: "http://www.w3.org/2001/xml-events",
  
    /**
     * Get svg dimensions: width and height
     *
     * @param  {SVGSVGElement} svg
     * @return {Object}     {width: 0, height: 0}
     */
    getBoundingClientRectNormalized: function(svg) {
      if (svg.clientWidth && svg.clientHeight) {
        return { width: svg.clientWidth, height: svg.clientHeight };
      } else if (!!svg.getBoundingClientRect()) {
        return svg.getBoundingClientRect();
      } else {
        throw new Error("Cannot get BoundingClientRect for SVG.");
      }
    },
  
    /**
     * Gets g element with class of "viewport" or creates it if it doesn't exist
     *
     * @param  {SVGSVGElement} svg
     * @return {SVGElement}     g (group) element
     */
    getOrCreateViewport: function(svg, selector) {
      var viewport = null;
  
      if (Utils.isElement(selector)) {
        viewport = selector;
      } else {
        viewport = svg.querySelector(selector);
      }
  
      // Check if there is just one main group in SVG
      if (!viewport) {
        var childNodes = Array.prototype.slice
          .call(svg.childNodes || svg.children)
          .filter(function(el) {
            return el.nodeName !== "defs" && el.nodeName !== "#text";
          });
  
        // Node name should be SVGGElement and should have no transform attribute
        // Groups with transform are not used as viewport because it involves parsing of all transform possibilities
        if (
          childNodes.length === 1 &&
          childNodes[0].nodeName === "g" &&
          childNodes[0].getAttribute("transform") === null
        ) {
          viewport = childNodes[0];
        }
      }
  
      // If no favorable group element exists then create one
      if (!viewport) {
        var viewportId =
          "viewport-" + new Date().toISOString().replace(/\D/g, "");
        viewport = document.createElementNS(this.svgNS, "g");
        viewport.setAttribute("id", viewportId);
  
        // Internet Explorer (all versions?) can't use childNodes, but other browsers prefer (require?) using childNodes
        var svgChildren = svg.childNodes || svg.children;
        if (!!svgChildren && svgChildren.length > 0) {
          for (var i = svgChildren.length; i > 0; i--) {
            // Move everything into viewport except defs
            if (svgChildren[svgChildren.length - i].nodeName !== "defs") {
              viewport.appendChild(svgChildren[svgChildren.length - i]);
            }
          }
        }
        svg.appendChild(viewport);
      }
  
      // Parse class names
      var classNames = [];
      if (viewport.getAttribute("class")) {
        classNames = viewport.getAttribute("class").split(" ");
      }
  
      // Set class (if not set already)
      if (!~classNames.indexOf("svg-pan-zoom_viewport")) {
        classNames.push("svg-pan-zoom_viewport");
        viewport.setAttribute("class", classNames.join(" "));
      }
  
      return viewport;
    },
  
    /**
     * Set SVG attributes
     *
     * @param  {SVGSVGElement} svg
     */
    setupSvgAttributes: function(svg) {
      // Setting default attributes
      svg.setAttribute("xmlns", this.svgNS);
      svg.setAttributeNS(this.xmlnsNS, "xmlns:xlink", this.xlinkNS);
      svg.setAttributeNS(this.xmlnsNS, "xmlns:ev", this.evNS);
  
      // Needed for Internet Explorer, otherwise the viewport overflows
      if (svg.parentNode !== null) {
        var style = svg.getAttribute("style") || "";
        if (style.toLowerCase().indexOf("overflow") === -1) {
          svg.setAttribute("style", "overflow: hidden; " + style);
        }
      }
    },
  
    /**
     * How long Internet Explorer takes to finish updating its display (ms).
     */
    internetExplorerRedisplayInterval: 300,
  
    /**
     * Forces the browser to redisplay all SVG elements that rely on an
     * element defined in a 'defs' section. It works globally, for every
     * available defs element on the page.
     * The throttling is intentionally global.
     *
     * This is only needed for IE. It is as a hack to make markers (and 'use' elements?)
     * visible after pan/zoom when there are multiple SVGs on the page.
     * See bug report: https://connect.microsoft.com/IE/feedback/details/781964/
     * also see svg-pan-zoom issue: https://github.com/ariutta/svg-pan-zoom/issues/62
     */
    refreshDefsGlobal: Utils.throttle(
      function() {
        var allDefs = document.querySelectorAll("defs");
        var allDefsCount = allDefs.length;
        for (var i = 0; i < allDefsCount; i++) {
          var thisDefs = allDefs[i];
          thisDefs.parentNode.insertBefore(thisDefs, thisDefs);
        }
      },
      this ? this.internetExplorerRedisplayInterval : null
    ),
  
    /**
     * Sets the current transform matrix of an element
     *
     * @param {SVGElement} element
     * @param {SVGMatrix} matrix  CTM
     * @param {SVGElement} defs
     */
    setCTM: function(element, matrix, defs) {
      var that = this,
        s =
          "matrix(" +
          matrix.a +
          "," +
          matrix.b +
          "," +
          matrix.c +
          "," +
          matrix.d +
          "," +
          matrix.e +
          "," +
          matrix.f +
          ")";
  
      element.setAttributeNS(null, "transform", s);
      if ("transform" in element.style) {
        element.style.transform = s;
      } else if ("-ms-transform" in element.style) {
        element.style["-ms-transform"] = s;
      } else if ("-webkit-transform" in element.style) {
        element.style["-webkit-transform"] = s;
      }
  
      // IE has a bug that makes markers disappear on zoom (when the matrix "a" and/or "d" elements change)
      // see http://stackoverflow.com/questions/17654578/svg-marker-does-not-work-in-ie9-10
      // and http://srndolha.wordpress.com/2013/11/25/svg-line-markers-may-disappear-in-internet-explorer-11/
      if (_browser === "ie" && !!defs) {
        // this refresh is intended for redisplaying the SVG during zooming
        defs.parentNode.insertBefore(defs, defs);
        // this refresh is intended for redisplaying the other SVGs on a page when panning a given SVG
        // it is also needed for the given SVG itself, on zoomEnd, if the SVG contains any markers that
        // are located under any other element(s).
        window.setTimeout(function() {
          that.refreshDefsGlobal();
        }, that.internetExplorerRedisplayInterval);
      }
    },
  
    /**
     * Instantiate an SVGPoint object with given event coordinates
     *
     * @param {Event} evt
     * @param  {SVGSVGElement} svg
     * @return {SVGPoint}     point
     */
    getEventPoint: function(evt, svg) {
      var point = svg.createSVGPoint();
  
      Utils.mouseAndTouchNormalize(evt, svg);
  
      point.x = evt.clientX;
      point.y = evt.clientY;
  
      return point;
    },
  
    /**
     * Get SVG center point
     *
     * @param  {SVGSVGElement} svg
     * @return {SVGPoint}
     */
    getSvgCenterPoint: function(svg, width, height) {
      return this.createSVGPoint(svg, width / 2, height / 2);
    },
  
    /**
     * Create a SVGPoint with given x and y
     *
     * @param  {SVGSVGElement} svg
     * @param  {Number} x
     * @param  {Number} y
     * @return {SVGPoint}
     */
    createSVGPoint: function(svg, x, y) {
      var point = svg.createSVGPoint();
      point.x = x;
      point.y = y;
  
      return point;
    }
  };
  
  },{"./utilities":7}],6:[function(require,module,exports){
  // uniwheel 0.1.2 (customized)
  // A unified cross browser mouse wheel event handler
  // https://github.com/teemualap/uniwheel
  
  module.exports = (function(){
  
    //Full details: https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel
  
    var prefix = "", _addEventListener, _removeEventListener, support, fns = [];
    var passiveOption = {passive: true};
  
    // detect event model
    if ( window.addEventListener ) {
      _addEventListener = "addEventListener";
      _removeEventListener = "removeEventListener";
    } else {
      _addEventListener = "attachEvent";
      _removeEventListener = "detachEvent";
      prefix = "on";
    }
  
    // detect available wheel event
    support = "onwheel" in document.createElement("div") ? "wheel" : // Modern browsers support "wheel"
              document.onmousewheel !== undefined ? "mousewheel" : // Webkit and IE support at least "mousewheel"
              "DOMMouseScroll"; // let's assume that remaining browsers are older Firefox
  
  
    function createCallback(element,callback) {
  
      var fn = function(originalEvent) {
  
        !originalEvent && ( originalEvent = window.event );
  
        // create a normalized event object
        var event = {
          // keep a ref to the original event object
          originalEvent: originalEvent,
          target: originalEvent.target || originalEvent.srcElement,
          type: "wheel",
          deltaMode: originalEvent.type == "MozMousePixelScroll" ? 0 : 1,
          deltaX: 0,
          delatZ: 0,
          preventDefault: function() {
            originalEvent.preventDefault ?
              originalEvent.preventDefault() :
              originalEvent.returnValue = false;
          }
        };
  
        // calculate deltaY (and deltaX) according to the event
        if ( support == "mousewheel" ) {
          event.deltaY = - 1/40 * originalEvent.wheelDelta;
          // Webkit also support wheelDeltaX
          originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );
        } else {
          event.deltaY = originalEvent.detail;
        }
  
        // it's time to fire the callback
        return callback( event );
  
      };
  
      fns.push({
        element: element,
        fn: fn,
      });
  
      return fn;
    }
  
    function getCallback(element) {
      for (var i = 0; i < fns.length; i++) {
        if (fns[i].element === element) {
          return fns[i].fn;
        }
      }
      return function(){};
    }
  
    function removeCallback(element) {
      for (var i = 0; i < fns.length; i++) {
        if (fns[i].element === element) {
          return fns.splice(i,1);
        }
      }
    }
  
    function _addWheelListener(elem, eventName, callback, isPassiveListener ) {
      var cb;
  
      if (support === "wheel") {
        cb = callback;
      } else {
        cb = createCallback(elem, callback);
      }
  
      elem[_addEventListener](prefix + eventName, cb, isPassiveListener ? passiveOption : false);
    }
  
    function _removeWheelListener(elem, eventName, callback, isPassiveListener ) {
  
      var cb;
  
      if (support === "wheel") {
        cb = callback;
      } else {
        cb = getCallback(elem);
      }
  
      elem[_removeEventListener](prefix + eventName, cb, isPassiveListener ? passiveOption : false);
  
      removeCallback(elem);
    }
  
    function addWheelListener( elem, callback, isPassiveListener ) {
      _addWheelListener(elem, support, callback, isPassiveListener );
  
      // handle MozMousePixelScroll in older Firefox
      if( support == "DOMMouseScroll" ) {
        _addWheelListener(elem, "MozMousePixelScroll", callback, isPassiveListener );
      }
    }
  
    function removeWheelListener(elem, callback, isPassiveListener){
      _removeWheelListener(elem, support, callback, isPassiveListener);
  
      // handle MozMousePixelScroll in older Firefox
      if( support == "DOMMouseScroll" ) {
        _removeWheelListener(elem, "MozMousePixelScroll", callback, isPassiveListener);
      }
    }
  
    return {
      on: addWheelListener,
      off: removeWheelListener
    };
  
  })();
  
  },{}],7:[function(require,module,exports){
  module.exports = {
    /**
     * Extends an object
     *
     * @param  {Object} target object to extend
     * @param  {Object} source object to take properties from
     * @return {Object}        extended object
     */
    extend: function(target, source) {
      target = target || {};
      for (var prop in source) {
        // Go recursively
        if (this.isObject(source[prop])) {
          target[prop] = this.extend(target[prop], source[prop]);
        } else {
          target[prop] = source[prop];
        }
      }
      return target;
    },
  
    /**
     * Checks if an object is a DOM element
     *
     * @param  {Object}  o HTML element or String
     * @return {Boolean}   returns true if object is a DOM element
     */
    isElement: function(o) {
      return (
        o instanceof HTMLElement ||
        o instanceof SVGElement ||
        o instanceof SVGSVGElement || //DOM2
        (o &&
          typeof o === "object" &&
          o !== null &&
          o.nodeType === 1 &&
          typeof o.nodeName === "string")
      );
    },
  
    /**
     * Checks if an object is an Object
     *
     * @param  {Object}  o Object
     * @return {Boolean}   returns true if object is an Object
     */
    isObject: function(o) {
      return Object.prototype.toString.call(o) === "[object Object]";
    },
  
    /**
     * Checks if variable is Number
     *
     * @param  {Integer|Float}  n
     * @return {Boolean}   returns true if variable is Number
     */
    isNumber: function(n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    },
  
    /**
     * Search for an SVG element
     *
     * @param  {Object|String} elementOrSelector DOM Element or selector String
     * @return {Object|Null}                   SVG or null
     */
    getSvg: function(elementOrSelector) {
      var element, svg;
  
      if (!this.isElement(elementOrSelector)) {
        // If selector provided
        if (
          typeof elementOrSelector === "string" ||
          elementOrSelector instanceof String
        ) {
          // Try to find the element
          element = document.querySelector(elementOrSelector);
  
          if (!element) {
            throw new Error(
              "Provided selector did not find any elements. Selector: " +
                elementOrSelector
            );
            return null;
          }
        } else {
          throw new Error("Provided selector is not an HTML object nor String");
          return null;
        }
      } else {
        element = elementOrSelector;
      }
  
      if (element.tagName.toLowerCase() === "svg") {
        svg = element;
      } else {
        if (element.tagName.toLowerCase() === "object") {
          svg = element.contentDocument.documentElement;
        } else {
          if (element.tagName.toLowerCase() === "embed") {
            svg = element.getSVGDocument().documentElement;
          } else {
            if (element.tagName.toLowerCase() === "img") {
              throw new Error(
                'Cannot script an SVG in an "img" element. Please use an "object" element or an in-line SVG.'
              );
            } else {
              throw new Error("Cannot get SVG.");
            }
            return null;
          }
        }
      }
  
      return svg;
    },
  
    /**
     * Attach a given context to a function
     * @param  {Function} fn      Function
     * @param  {Object}   context Context
     * @return {Function}           Function with certain context
     */
    proxy: function(fn, context) {
      return function() {
        return fn.apply(context, arguments);
      };
    },
  
    /**
     * Returns object type
     * Uses toString that returns [object SVGPoint]
     * And than parses object type from string
     *
     * @param  {Object} o Any object
     * @return {String}   Object type
     */
    getType: function(o) {
      return Object.prototype.toString
        .apply(o)
        .replace(/^\[object\s/, "")
        .replace(/\]$/, "");
    },
  
    /**
     * If it is a touch event than add clientX and clientY to event object
     *
     * @param  {Event} evt
     * @param  {SVGSVGElement} svg
     */
    mouseAndTouchNormalize: function(evt, svg) {
      // If no clientX then fallback
      if (evt.clientX === void 0 || evt.clientX === null) {
        // Fallback
        evt.clientX = 0;
        evt.clientY = 0;
  
        // If it is a touch event
        if (evt.touches !== void 0 && evt.touches.length) {
          if (evt.touches[0].clientX !== void 0) {
            evt.clientX = evt.touches[0].clientX;
            evt.clientY = evt.touches[0].clientY;
          } else if (evt.touches[0].pageX !== void 0) {
            var rect = svg.getBoundingClientRect();
  
            evt.clientX = evt.touches[0].pageX - rect.left;
            evt.clientY = evt.touches[0].pageY - rect.top;
          }
          // If it is a custom event
        } else if (evt.originalEvent !== void 0) {
          if (evt.originalEvent.clientX !== void 0) {
            evt.clientX = evt.originalEvent.clientX;
            evt.clientY = evt.originalEvent.clientY;
          }
        }
      }
    },
  
    /**
     * Check if an event is a double click/tap
     * TODO: For touch gestures use a library (hammer.js) that takes in account other events
     * (touchmove and touchend). It should take in account tap duration and traveled distance
     *
     * @param  {Event}  evt
     * @param  {Event}  prevEvt Previous Event
     * @return {Boolean}
     */
    isDblClick: function(evt, prevEvt) {
      // Double click detected by browser
      if (evt.detail === 2) {
        return true;
      }
      // Try to compare events
      else if (prevEvt !== void 0 && prevEvt !== null) {
        var timeStampDiff = evt.timeStamp - prevEvt.timeStamp, // should be lower than 250 ms
          touchesDistance = Math.sqrt(
            Math.pow(evt.clientX - prevEvt.clientX, 2) +
              Math.pow(evt.clientY - prevEvt.clientY, 2)
          );
  
        return timeStampDiff < 250 && touchesDistance < 10;
      }
  
      // Nothing found
      return false;
    },
  
    /**
     * Returns current timestamp as an integer
     *
     * @return {Number}
     */
    now:
      Date.now ||
      function() {
        return new Date().getTime();
      },
  
    // From underscore.
    // Returns a function, that, when invoked, will only be triggered at most once
    // during a given window of time. Normally, the throttled function will run
    // as much as it can, without ever going more than once per `wait` duration;
    // but if you'd like to disable the execution on the leading edge, pass
    // `{leading: false}`. To disable execution on the trailing edge, ditto.
    throttle: function(func, wait, options) {
      var that = this;
      var context, args, result;
      var timeout = null;
      var previous = 0;
      if (!options) {
        options = {};
      }
      var later = function() {
        previous = options.leading === false ? 0 : that.now();
        timeout = null;
        result = func.apply(context, args);
        if (!timeout) {
          context = args = null;
        }
      };
      return function() {
        var now = that.now();
        if (!previous && options.leading === false) {
          previous = now;
        }
        var remaining = wait - (now - previous);
        context = this; // eslint-disable-line consistent-this
        args = arguments;
        if (remaining <= 0 || remaining > wait) {
          clearTimeout(timeout);
          timeout = null;
          previous = now;
          result = func.apply(context, args);
          if (!timeout) {
            context = args = null;
          }
        } else if (!timeout && options.trailing !== false) {
          timeout = setTimeout(later, remaining);
        }
        return result;
      };
    },
  
    /**
     * Create a requestAnimationFrame simulation
     *
     * @param  {Number|String} refreshRate
     * @return {Function}
     */
    createRequestAnimationFrame: function(refreshRate) {
      var timeout = null;
  
      // Convert refreshRate to timeout
      if (refreshRate !== "auto" && refreshRate < 60 && refreshRate > 1) {
        timeout = Math.floor(1000 / refreshRate);
      }
  
      if (timeout === null) {
        return window.requestAnimationFrame || requestTimeout(33);
      } else {
        return requestTimeout(timeout);
      }
    }
  };
  
  /**
   * Create a callback that will execute after a given timeout
   *
   * @param  {Function} timeout
   * @return {Function}
   */
  function requestTimeout(timeout) {
    return function(callback) {
      window.setTimeout(callback, timeout);
    };
  }
  
  },{}]},{},[3]);
  ;
// Sending tag event from ajax process
(function ($, Drupal) {
  Drupal.AjaxCommands.prototype.triggerTagEvent = function (ajax, response, status) {
    $(document).trigger('tagEvent', [response.event, response.data]);
  };
})(jQuery, Drupal);
;
(function ($, Drupal) {

  // Triggering tag events
  Drupal.behaviors.hubberTagEvents = {
    attach: function (context) {

      // Trigger tags to send on page loading
      $(window).once('tagPageLoad').on('load', function (e) {
        $(document).trigger('tagEvent', ['tagPageLoad']);
      });

      // Trigger tags to send on scroll
      $(window).once('tagScroll').on('scroll', function (e) {
        clearTimeout($.data(this, 'scrollTimer'));
        $.data(this, 'scrollTimer', setTimeout(function () {
          var percentage = Math.round($(window).scrollTop() * 100 / ($(document).height() - $(window).height()));
          $(document).trigger('tagEvent', [
            'tagScroll',
            {scroll_percentage: percentage},
          ]);
        }, 250));
      });

      // Trigger tags to send on logo click
      $('a[rel=home]', context).once('tagClickLogo').on('click', function (e) {
        $(document).trigger('tagEvent', ['tagClickLogo']);
      });

      // Trigger tags to send on connection button click
      $('#connect_button a', context).once('tagClickConnect').on('click', function (e) {
        $(document).trigger('tagEvent', ['tagClickConnect']);
      });

      // Trigger tags to send more info button click
      $('.package-more-info-trigger, .more-info-trigger', context).once('tagClickMoreInfo').on('click', function (e) {
        $(document).trigger('tagEvent', ['tagClickMoreInfo']);
      });
    }
  };

})(jQuery, Drupal);
;
(function ($, Drupal, drupalSettings) {
  Drupal.behaviors.hubberTagGtm = {
    attach: function (context) {

      // Send GTM with dataLayer from events
      $(document).once('hubber-tag-gtm-event').on('tagEvent', function (e, tagEventType, data) {
        if (undefined == drupalSettings.hubber_tags) {
          return;
        }

        var tags = drupalSettings.hubber_tags[tagEventType];
        if (undefined == tags) {
          return;
        }

        var n = tags.length;
        for (var i = 0; i < n; i++) {
          // Look for data layer with variable name given
          try {
            var dtl = eval(tags[i].dataLayer);
          }
          catch (exception) {
            continue;
          }

          var params = JSON.parse(JSON.stringify(tags[i].data));
          for (var key in params) {
            var value = params[key];
            if ('string' == typeof (value) && '[js:' == value.substr(0, 4) && ']' == value.substr(-1)) {
              params[key] = data[value.substr(4, value.length - 5)];
            }
          }
          dtl.push(params);
        }
      });
    }
  };
})(jQuery, Drupal, drupalSettings);
;
/*! js-cookie v3.0.1 | MIT */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self,function(){var n=e.Cookies,o=e.Cookies=t();o.noConflict=function(){return e.Cookies=n,o}}())}(this,(function(){"use strict";function e(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)e[o]=n[o]}return e}return function t(n,o){function r(t,r,i){if("undefined"!=typeof document){"number"==typeof(i=e({},o,i)).expires&&(i.expires=new Date(Date.now()+864e5*i.expires)),i.expires&&(i.expires=i.expires.toUTCString()),t=encodeURIComponent(t).replace(/%(2[346B]|5E|60|7C)/g,decodeURIComponent).replace(/[()]/g,escape);var c="";for(var u in i)i[u]&&(c+="; "+u,!0!==i[u]&&(c+="="+i[u].split(";")[0]));return document.cookie=t+"="+n.write(r,t)+c}}return Object.create({set:r,get:function(e){if("undefined"!=typeof document&&(!arguments.length||e)){for(var t=document.cookie?document.cookie.split("; "):[],o={},r=0;r<t.length;r++){var i=t[r].split("="),c=i.slice(1).join("=");try{var u=decodeURIComponent(i[0]);if(o[u]=n.read(c,u),e===u)break}catch(e){}}return e?o[e]:o}},remove:function(t,n){r(t,"",e({},n,{expires:-1}))},withAttributes:function(n){return t(this.converter,e({},this.attributes,n))},withConverter:function(n){return t(e({},this.converter,n),this.attributes)}},{attributes:{value:Object.freeze(o)},converter:{value:Object.freeze(n)}})}({read:function(e){return'"'===e[0]&&(e=e.slice(1,-1)),e.replace(/(%[\dA-F]{2})+/gi,decodeURIComponent)},write:function(e){return encodeURIComponent(e).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,decodeURIComponent)}},{path:"/"})}));
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

(function ($, Drupal, cookies) {
  var deprecatedMessageSuffix = "is deprecated in Drupal 9.0.0 and will be removed in Drupal 10.0.0. Use the core/js-cookie library instead. See https://www.drupal.org/node/3104677";

  var isFunction = function isFunction(obj) {
    return Object.prototype.toString.call(obj) === '[object Function]';
  };

  var parseCookieValue = function parseCookieValue(value, parseJson) {
    if (value.indexOf('"') === 0) {
      value = value.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
    }

    try {
      value = decodeURIComponent(value.replace(/\+/g, ' '));
      return parseJson ? JSON.parse(value) : value;
    } catch (e) {}
  };

  var reader = function reader(cookieValue, cookieName, converter, readUnsanitized, parseJson) {
    var value = readUnsanitized ? cookieValue : parseCookieValue(cookieValue, parseJson);

    if (converter !== undefined && isFunction(converter)) {
      return converter(value, cookieName);
    }

    return value;
  };

  $.cookie = function (key) {
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
    Drupal.deprecationError({
      message: "jQuery.cookie() ".concat(deprecatedMessageSuffix)
    });

    if (value !== undefined && !isFunction(value)) {
      var attributes = _objectSpread(_objectSpread({}, $.cookie.defaults), options);

      if (typeof attributes.expires === 'string' && attributes.expires !== '') {
        attributes.expires = new Date(attributes.expires);
      }

      var cookieSetter = cookies.withConverter({
        write: function write(cookieValue) {
          return encodeURIComponent(cookieValue);
        }
      });
      value = $.cookie.json && !$.cookie.raw ? JSON.stringify(value) : String(value);
      return cookieSetter.set(key, value, attributes);
    }

    var userProvidedConverter = value;
    var cookiesShim = cookies.withConverter({
      read: function read(cookieValue, cookieName) {
        return reader(cookieValue, cookieName, userProvidedConverter, $.cookie.raw, $.cookie.json);
      }
    });

    if (key !== undefined) {
      return cookiesShim.get(key);
    }

    var results = cookiesShim.get();
    Object.keys(results).forEach(function (resultKey) {
      if (results[resultKey] === undefined) {
        delete results[resultKey];
      }
    });
    return results;
  };

  $.cookie.defaults = _objectSpread({
    path: ''
  }, cookies.defaults);
  $.cookie.json = false;
  $.cookie.raw = false;

  $.removeCookie = function (key, options) {
    Drupal.deprecationError({
      message: "jQuery.removeCookie() ".concat(deprecatedMessageSuffix)
    });
    cookies.remove(key, _objectSpread(_objectSpread({}, $.cookie.defaults), options));
    return !cookies.get(key);
  };
})(jQuery, Drupal, window.Cookies);;
/**
 * @file
 * Defines Javascript behaviors for the rwc module.
 */

(function ($, Drupal, drupalSettings) {
  'use strict';

  Drupal.behaviors.hubberBundle = {
    attach: function (context, settings) {
      if (typeof $.cookie('cookie_matching') == 'undefined') {
        $.cookie('cookie_matching', this.uuidv4(), {
          expires: 365,
          domain: settings.cookieDomain,
          path: '/'
        });
      }
    },
    uuidv4: function () {
      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
      });
    },
  };

})(jQuery, Drupal, drupalSettings);
;
(function ($, Drupal) {
  'use strict';

  Drupal.behaviors.rwcTag = {
    attach: function (context) {
      $('.team-info', context).once('tagClickTeamPackage').on('click', function (e) {
        $(document).trigger('tagEvent', [
          'tagClickTeamPackage',
          {team_name: $('.name', this).text()},
        ]);
      });

      $('.city-container .js-more-info-display', context).once('tagClickCityPackage').on('click', function (e) {
        $(document).trigger('tagEvent', [
          'tagClickCityPackage',
          {city_name: $('.js-info-city-name', this).text()},
        ]);
      });

      $('.card-package', context).once('tagClickShopOptions').on('click', function (e) {
        var option = $('.title', this).text();
        var titlePrefix = $('.title-prefix', this).text();
        var titleSuffix = $('.title-suffix', this).text();
        var populations = $('.populations', this).text();
        if ('' != titlePrefix) {
          option = titlePrefix + ' ' + option;
        }
        if ('' != titleSuffix) {
          option += ' - ' + titleSuffix;
        }
        if ('' != populations) {
          option +=  ' - ' + populations;
        }

        $(document).trigger('tagEvent', [
          'tagClickShopOptions',
          {option_type: option},
          ]);
      });
    }
  };

})(jQuery, Drupal);
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal) {
  Drupal.behaviors.dialog = {
    attach: function attach(context, settings) {
      var $context = $(context);

      if (!$('#drupal-modal').length) {
        $('<div id="drupal-modal" class="ui-front"></div>').hide().appendTo('body');
      }

      var $dialog = $context.closest('.ui-dialog-content');

      if ($dialog.length) {
        if ($dialog.dialog('option', 'drupalAutoButtons')) {
          $dialog.trigger('dialogButtonsChange');
        }

        $dialog.dialog('widget').trigger('focus');
      }

      var originalClose = settings.dialog.close;

      settings.dialog.close = function (event) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        originalClose.apply(settings.dialog, [event].concat(args));
        $(event.target).remove();
      };
    },
    prepareDialogButtons: function prepareDialogButtons($dialog) {
      var buttons = [];
      var $buttons = $dialog.find('.form-actions input[type=submit], .form-actions a.button');
      $buttons.each(function () {
        var $originalButton = $(this).css({
          display: 'none'
        });
        buttons.push({
          text: $originalButton.html() || $originalButton.attr('value'),
          class: $originalButton.attr('class'),
          click: function click(e) {
            if ($originalButton.is('a')) {
              $originalButton[0].click();
            } else {
              $originalButton.trigger('mousedown').trigger('mouseup').trigger('click');
              e.preventDefault();
            }
          }
        });
      });
      return buttons;
    }
  };

  Drupal.AjaxCommands.prototype.openDialog = function (ajax, response, status) {
    if (!response.selector) {
      return false;
    }

    var $dialog = $(response.selector);

    if (!$dialog.length) {
      $dialog = $("<div id=\"".concat(response.selector.replace(/^#/, ''), "\" class=\"ui-front\"></div>")).appendTo('body');
    }

    if (!ajax.wrapper) {
      ajax.wrapper = $dialog.attr('id');
    }

    response.command = 'insert';
    response.method = 'html';
    ajax.commands.insert(ajax, response, status);

    if (!response.dialogOptions.buttons) {
      response.dialogOptions.drupalAutoButtons = true;
      response.dialogOptions.buttons = Drupal.behaviors.dialog.prepareDialogButtons($dialog);
    }

    $dialog.on('dialogButtonsChange', function () {
      var buttons = Drupal.behaviors.dialog.prepareDialogButtons($dialog);
      $dialog.dialog('option', 'buttons', buttons);
    });
    response.dialogOptions = response.dialogOptions || {};
    var dialog = Drupal.dialog($dialog.get(0), response.dialogOptions);

    if (response.dialogOptions.modal) {
      dialog.showModal();
    } else {
      dialog.show();
    }

    $dialog.parent().find('.ui-dialog-buttonset').addClass('form-actions');
  };

  Drupal.AjaxCommands.prototype.closeDialog = function (ajax, response, status) {
    var $dialog = $(response.selector);

    if ($dialog.length) {
      Drupal.dialog($dialog.get(0)).close();

      if (!response.persist) {
        $dialog.remove();
      }
    }

    $dialog.off('dialogButtonsChange');
  };

  Drupal.AjaxCommands.prototype.setDialogOption = function (ajax, response, status) {
    var $dialog = $(response.selector);

    if ($dialog.length) {
      $dialog.dialog('option', response.optionName, response.optionValue);
    }
  };

  $(window).on('dialog:aftercreate', function (e, dialog, $element, settings) {
    $element.on('click.dialog', '.dialog-cancel', function (e) {
      dialog.close('cancel');
      e.preventDefault();
      e.stopPropagation();
    });
  });
  $(window).on('dialog:beforeclose', function (e, dialog, $element) {
    $element.off('.dialog');
  });
})(jQuery, Drupal);;
(function ($, Drupal, drupalSettings) {
  'use strict';

  Drupal.behaviors.popinCampaign = {
    attach: function(context) {
      if (!drupalSettings.popin_url) {
        return;
      }

      $(document).once('campaign')
        .each(function () {
          const ajaxSettings = {
            url: drupalSettings.popin_url
          };
          var ajaxObj = Drupal.ajax(ajaxSettings);
          ajaxObj.execute();
        });
    }
  };

})(jQuery, Drupal, drupalSettings);
;
(function ($) {
  Drupal.behaviors.input_number_operators = {
    attach: function (context) {
      /**
       * When user clicks on operator buttons (+ or -) of number field.
       */
      $('.input-number-operators .operator').once('number-operator-click').on('click', function () {
        if (!$(this).hasClass('active')) {
          return;
        }

        // Get the widget and its field.
        var widget = $(this).closest('.input-number-operators');
        var field = $('input', widget);

        // Change field values and buttons states.
        var min = parseFloat(field.attr('min'));
        var max = parseFloat(field.attr('max'));
        var step = parseFloat(field.attr('step'));
        var first_valid_value = field.attr('data-first-valid-value');
        var has_first_valid_value = (first_valid_value != undefined);
        if (has_first_valid_value) {
          first_valid_value = parseFloat(first_valid_value);
          has_first_valid_value = first_valid_value > min;
          if (first_valid_value > max) {
            first_valid_value = max;
          }
        }
        var num = parseFloat(field.val());
        if ($(this).hasClass('less')) {
          // Decrease the number.
          if (has_first_valid_value && num == first_valid_value) {
            field.val(min);
          }
          else {
            field.val(Math.max(num - step, min));
          }
        }
        if ($(this).hasClass('more')) {
          // Increase the number.
          if (has_first_valid_value && num == min) {
            field.val(first_valid_value);
          }
          else {
            field.val(Math.min(num + step, max));
          }
        }

        // Update the widget.
        $(this).closest('.input-number-operators').trigger('update');
      });

      // When the widget is updated.
      $('.input-number-operators').once('number-operator-update').on('update', function () {
        var field = $('input', this);
        var num = field.val();

        // If the number is minimum, disable less button.
        if (num <= parseInt(field.attr('min'))) {
          $('.operator.less', this).removeClass('active');
        } else {
          $('.operator.less', this).addClass('active');
        }

        // If the number is maximum, disable more button.
        if (num >= parseInt(field.attr('max'))) {
          $('.operator.more', this).removeClass('active');
        } else {
          $('.operator.more', this).addClass('active');
        }
      });

      // Change number event.
      $('.input-number-operators').once('number-operator-change').on('change', function (e, value) {
        $(this).find('input').val(value);
        $(this).trigger('update');
      });
    }
  };
})(jQuery);
;
/*
 Copyright (C) Federico Zivolo 2017
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */(function(e,t){'object'==typeof exports&&'undefined'!=typeof module?module.exports=t():'function'==typeof define&&define.amd?define(t):e.Popper=t()})(this,function(){'use strict';function e(e){return e&&'[object Function]'==={}.toString.call(e)}function t(e,t){if(1!==e.nodeType)return[];var o=window.getComputedStyle(e,null);return t?o[t]:o}function o(e){return'HTML'===e.nodeName?e:e.parentNode||e.host}function n(e){if(!e||-1!==['HTML','BODY','#document'].indexOf(e.nodeName))return window.document.body;var i=t(e),r=i.overflow,p=i.overflowX,s=i.overflowY;return /(auto|scroll)/.test(r+s+p)?e:n(o(e))}function r(e){var o=e&&e.offsetParent,i=o&&o.nodeName;return i&&'BODY'!==i&&'HTML'!==i?-1!==['TD','TABLE'].indexOf(o.nodeName)&&'static'===t(o,'position')?r(o):o:window.document.documentElement}function p(e){var t=e.nodeName;return'BODY'!==t&&('HTML'===t||r(e.firstElementChild)===e)}function s(e){return null===e.parentNode?e:s(e.parentNode)}function d(e,t){if(!e||!e.nodeType||!t||!t.nodeType)return window.document.documentElement;var o=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,i=o?e:t,n=o?t:e,a=document.createRange();a.setStart(i,0),a.setEnd(n,0);var l=a.commonAncestorContainer;if(e!==l&&t!==l||i.contains(n))return p(l)?l:r(l);var f=s(e);return f.host?d(f.host,t):d(e,s(t).host)}function a(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:'top',o='top'===t?'scrollTop':'scrollLeft',i=e.nodeName;if('BODY'===i||'HTML'===i){var n=window.document.documentElement,r=window.document.scrollingElement||n;return r[o]}return e[o]}function l(e,t){var o=2<arguments.length&&void 0!==arguments[2]&&arguments[2],i=a(t,'top'),n=a(t,'left'),r=o?-1:1;return e.top+=i*r,e.bottom+=i*r,e.left+=n*r,e.right+=n*r,e}function f(e,t){var o='x'===t?'Left':'Top',i='Left'==o?'Right':'Bottom';return+e['border'+o+'Width'].split('px')[0]+ +e['border'+i+'Width'].split('px')[0]}function m(e,t,o,i){return X(t['offset'+e],t['scroll'+e],o['client'+e],o['offset'+e],o['scroll'+e],ne()?o['offset'+e]+i['margin'+('Height'===e?'Top':'Left')]+i['margin'+('Height'===e?'Bottom':'Right')]:0)}function c(){var e=window.document.body,t=window.document.documentElement,o=ne()&&window.getComputedStyle(t);return{height:m('Height',e,t,o),width:m('Width',e,t,o)}}function h(e){return de({},e,{right:e.left+e.width,bottom:e.top+e.height})}function g(e){var o={};if(ne())try{o=e.getBoundingClientRect();var i=a(e,'top'),n=a(e,'left');o.top+=i,o.left+=n,o.bottom+=i,o.right+=n}catch(e){}else o=e.getBoundingClientRect();var r={left:o.left,top:o.top,width:o.right-o.left,height:o.bottom-o.top},p='HTML'===e.nodeName?c():{},s=p.width||e.clientWidth||r.right-r.left,d=p.height||e.clientHeight||r.bottom-r.top,l=e.offsetWidth-s,m=e.offsetHeight-d;if(l||m){var g=t(e);l-=f(g,'x'),m-=f(g,'y'),r.width-=l,r.height-=m}return h(r)}function u(e,o){var i=ne(),r='HTML'===o.nodeName,p=g(e),s=g(o),d=n(e),a=t(o),f=+a.borderTopWidth.split('px')[0],m=+a.borderLeftWidth.split('px')[0],c=h({top:p.top-s.top-f,left:p.left-s.left-m,width:p.width,height:p.height});if(c.marginTop=0,c.marginLeft=0,!i&&r){var u=+a.marginTop.split('px')[0],b=+a.marginLeft.split('px')[0];c.top-=f-u,c.bottom-=f-u,c.left-=m-b,c.right-=m-b,c.marginTop=u,c.marginLeft=b}return(i?o.contains(d):o===d&&'BODY'!==d.nodeName)&&(c=l(c,o)),c}function b(e){var t=window.document.documentElement,o=u(e,t),i=X(t.clientWidth,window.innerWidth||0),n=X(t.clientHeight,window.innerHeight||0),r=a(t),p=a(t,'left'),s={top:r-o.top+o.marginTop,left:p-o.left+o.marginLeft,width:i,height:n};return h(s)}function y(e){var i=e.nodeName;return'BODY'===i||'HTML'===i?!1:'fixed'===t(e,'position')||y(o(e))}function w(e,t,i,r){var p={top:0,left:0},s=d(e,t);if('viewport'===r)p=b(s);else{var a;'scrollParent'===r?(a=n(o(e)),'BODY'===a.nodeName&&(a=window.document.documentElement)):'window'===r?a=window.document.documentElement:a=r;var l=u(a,s);if('HTML'===a.nodeName&&!y(s)){var f=c(),m=f.height,h=f.width;p.top+=l.top-l.marginTop,p.bottom=m+l.top,p.left+=l.left-l.marginLeft,p.right=h+l.left}else p=l}return p.left+=i,p.top+=i,p.right-=i,p.bottom-=i,p}function E(e){var t=e.width,o=e.height;return t*o}function v(e,t,o,i,n){var r=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0;if(-1===e.indexOf('auto'))return e;var p=w(o,i,r,n),s={top:{width:p.width,height:t.top-p.top},right:{width:p.right-t.right,height:p.height},bottom:{width:p.width,height:p.bottom-t.bottom},left:{width:t.left-p.left,height:p.height}},d=Object.keys(s).map(function(e){return de({key:e},s[e],{area:E(s[e])})}).sort(function(e,t){return t.area-e.area}),a=d.filter(function(e){var t=e.width,i=e.height;return t>=o.clientWidth&&i>=o.clientHeight}),l=0<a.length?a[0].key:d[0].key,f=e.split('-')[1];return l+(f?'-'+f:'')}function x(e,t,o){var i=d(t,o);return u(o,i)}function O(e){var t=window.getComputedStyle(e),o=parseFloat(t.marginTop)+parseFloat(t.marginBottom),i=parseFloat(t.marginLeft)+parseFloat(t.marginRight),n={width:e.offsetWidth+i,height:e.offsetHeight+o};return n}function L(e){var t={left:'right',right:'left',bottom:'top',top:'bottom'};return e.replace(/left|right|bottom|top/g,function(e){return t[e]})}function S(e,t,o){o=o.split('-')[0];var i=O(e),n={width:i.width,height:i.height},r=-1!==['right','left'].indexOf(o),p=r?'top':'left',s=r?'left':'top',d=r?'height':'width',a=r?'width':'height';return n[p]=t[p]+t[d]/2-i[d]/2,n[s]=o===s?t[s]-i[a]:t[L(s)],n}function T(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function C(e,t,o){if(Array.prototype.findIndex)return e.findIndex(function(e){return e[t]===o});var i=T(e,function(e){return e[t]===o});return e.indexOf(i)}function N(t,o,i){var n=void 0===i?t:t.slice(0,C(t,'name',i));return n.forEach(function(t){t.function&&console.warn('`modifier.function` is deprecated, use `modifier.fn`!');var i=t.function||t.fn;t.enabled&&e(i)&&(o.offsets.popper=h(o.offsets.popper),o.offsets.reference=h(o.offsets.reference),o=i(o,t))}),o}function k(){if(!this.state.isDestroyed){var e={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};e.offsets.reference=x(this.state,this.popper,this.reference),e.placement=v(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.offsets.popper=S(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position='absolute',e=N(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e))}}function W(e,t){return e.some(function(e){var o=e.name,i=e.enabled;return i&&o===t})}function B(e){for(var t=[!1,'ms','Webkit','Moz','O'],o=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<t.length-1;n++){var i=t[n],r=i?''+i+o:e;if('undefined'!=typeof window.document.body.style[r])return r}return null}function P(){return this.state.isDestroyed=!0,W(this.modifiers,'applyStyle')&&(this.popper.removeAttribute('x-placement'),this.popper.style.left='',this.popper.style.position='',this.popper.style.top='',this.popper.style[B('transform')]=''),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function D(e,t,o,i){var r='BODY'===e.nodeName,p=r?window:e;p.addEventListener(t,o,{passive:!0}),r||D(n(p.parentNode),t,o,i),i.push(p)}function H(e,t,o,i){o.updateBound=i,window.addEventListener('resize',o.updateBound,{passive:!0});var r=n(e);return D(r,'scroll',o.updateBound,o.scrollParents),o.scrollElement=r,o.eventsEnabled=!0,o}function A(){this.state.eventsEnabled||(this.state=H(this.reference,this.options,this.state,this.scheduleUpdate))}function M(e,t){return window.removeEventListener('resize',t.updateBound),t.scrollParents.forEach(function(e){e.removeEventListener('scroll',t.updateBound)}),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t}function I(){this.state.eventsEnabled&&(window.cancelAnimationFrame(this.scheduleUpdate),this.state=M(this.reference,this.state))}function R(e){return''!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function U(e,t){Object.keys(t).forEach(function(o){var i='';-1!==['width','height','top','right','bottom','left'].indexOf(o)&&R(t[o])&&(i='px'),e.style[o]=t[o]+i})}function Y(e,t){Object.keys(t).forEach(function(o){var i=t[o];!1===i?e.removeAttribute(o):e.setAttribute(o,t[o])})}function F(e,t,o){var i=T(e,function(e){var o=e.name;return o===t}),n=!!i&&e.some(function(e){return e.name===o&&e.enabled&&e.order<i.order});if(!n){var r='`'+t+'`';console.warn('`'+o+'`'+' modifier is required by '+r+' modifier in order to work, be sure to include it before '+r+'!')}return n}function j(e){return'end'===e?'start':'start'===e?'end':e}function K(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],o=le.indexOf(e),i=le.slice(o+1).concat(le.slice(0,o));return t?i.reverse():i}function q(e,t,o,i){var n=e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),r=+n[1],p=n[2];if(!r)return e;if(0===p.indexOf('%')){var s;switch(p){case'%p':s=o;break;case'%':case'%r':default:s=i;}var d=h(s);return d[t]/100*r}if('vh'===p||'vw'===p){var a;return a='vh'===p?X(document.documentElement.clientHeight,window.innerHeight||0):X(document.documentElement.clientWidth,window.innerWidth||0),a/100*r}return r}function G(e,t,o,i){var n=[0,0],r=-1!==['right','left'].indexOf(i),p=e.split(/(\+|\-)/).map(function(e){return e.trim()}),s=p.indexOf(T(p,function(e){return-1!==e.search(/,|\s/)}));p[s]&&-1===p[s].indexOf(',')&&console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');var d=/\s*,\s*|\s+/,a=-1===s?[p]:[p.slice(0,s).concat([p[s].split(d)[0]]),[p[s].split(d)[1]].concat(p.slice(s+1))];return a=a.map(function(e,i){var n=(1===i?!r:r)?'height':'width',p=!1;return e.reduce(function(e,t){return''===e[e.length-1]&&-1!==['+','-'].indexOf(t)?(e[e.length-1]=t,p=!0,e):p?(e[e.length-1]+=t,p=!1,e):e.concat(t)},[]).map(function(e){return q(e,n,t,o)})}),a.forEach(function(e,t){e.forEach(function(o,i){R(o)&&(n[t]+=o*('-'===e[i-1]?-1:1))})}),n}function z(e,t){var o,i=t.offset,n=e.placement,r=e.offsets,p=r.popper,s=r.reference,d=n.split('-')[0];return o=R(+i)?[+i,0]:G(i,p,s,d),'left'===d?(p.top+=o[0],p.left-=o[1]):'right'===d?(p.top+=o[0],p.left+=o[1]):'top'===d?(p.left+=o[0],p.top-=o[1]):'bottom'===d&&(p.left+=o[0],p.top+=o[1]),e.popper=p,e}for(var V=Math.min,_=Math.floor,X=Math.max,Q=['native code','[object MutationObserverConstructor]'],J=function(e){return Q.some(function(t){return-1<(e||'').toString().indexOf(t)})},Z='undefined'!=typeof window,$=['Edge','Trident','Firefox'],ee=0,te=0;te<$.length;te+=1)if(Z&&0<=navigator.userAgent.indexOf($[te])){ee=1;break}var i,oe=Z&&J(window.MutationObserver),ie=oe?function(e){var t=!1,o=0,i=document.createElement('span'),n=new MutationObserver(function(){e(),t=!1});return n.observe(i,{attributes:!0}),function(){t||(t=!0,i.setAttribute('x-index',o),++o)}}:function(e){var t=!1;return function(){t||(t=!0,setTimeout(function(){t=!1,e()},ee))}},ne=function(){return void 0==i&&(i=-1!==navigator.appVersion.indexOf('MSIE 10')),i},re=function(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')},pe=function(){function e(e,t){for(var o,n=0;n<t.length;n++)o=t[n],o.enumerable=o.enumerable||!1,o.configurable=!0,'value'in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}return function(t,o,i){return o&&e(t.prototype,o),i&&e(t,i),t}}(),se=function(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e},de=Object.assign||function(e){for(var t,o=1;o<arguments.length;o++)for(var i in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},ae=['auto-start','auto','auto-end','top-start','top','top-end','right-start','right','right-end','bottom-end','bottom','bottom-start','left-end','left','left-start'],le=ae.slice(3),fe={FLIP:'flip',CLOCKWISE:'clockwise',COUNTERCLOCKWISE:'counterclockwise'},me=function(){function t(o,i){var n=this,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};re(this,t),this.scheduleUpdate=function(){return requestAnimationFrame(n.update)},this.update=ie(this.update.bind(this)),this.options=de({},t.Defaults,r),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=o.jquery?o[0]:o,this.popper=i.jquery?i[0]:i,this.options.modifiers={},Object.keys(de({},t.Defaults.modifiers,r.modifiers)).forEach(function(e){n.options.modifiers[e]=de({},t.Defaults.modifiers[e]||{},r.modifiers?r.modifiers[e]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(e){return de({name:e},n.options.modifiers[e])}).sort(function(e,t){return e.order-t.order}),this.modifiers.forEach(function(t){t.enabled&&e(t.onLoad)&&t.onLoad(n.reference,n.popper,n.options,t,n.state)}),this.update();var p=this.options.eventsEnabled;p&&this.enableEventListeners(),this.state.eventsEnabled=p}return pe(t,[{key:'update',value:function(){return k.call(this)}},{key:'destroy',value:function(){return P.call(this)}},{key:'enableEventListeners',value:function(){return A.call(this)}},{key:'disableEventListeners',value:function(){return I.call(this)}}]),t}();return me.Utils=('undefined'==typeof window?global:window).PopperUtils,me.placements=ae,me.Defaults={placement:'bottom',eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(e){var t=e.placement,o=t.split('-')[0],i=t.split('-')[1];if(i){var n=e.offsets,r=n.reference,p=n.popper,s=-1!==['bottom','top'].indexOf(o),d=s?'left':'top',a=s?'width':'height',l={start:se({},d,r[d]),end:se({},d,r[d]+r[a]-p[a])};e.offsets.popper=de({},p,l[i])}return e}},offset:{order:200,enabled:!0,fn:z,offset:0},preventOverflow:{order:300,enabled:!0,fn:function(e,t){var o=t.boundariesElement||r(e.instance.popper);e.instance.reference===o&&(o=r(o));var i=w(e.instance.popper,e.instance.reference,t.padding,o);t.boundaries=i;var n=t.priority,p=e.offsets.popper,s={primary:function(e){var o=p[e];return p[e]<i[e]&&!t.escapeWithReference&&(o=X(p[e],i[e])),se({},e,o)},secondary:function(e){var o='right'===e?'left':'top',n=p[o];return p[e]>i[e]&&!t.escapeWithReference&&(n=V(p[o],i[e]-('right'===e?p.width:p.height))),se({},o,n)}};return n.forEach(function(e){var t=-1===['left','top'].indexOf(e)?'secondary':'primary';p=de({},p,s[t](e))}),e.offsets.popper=p,e},priority:['left','right','top','bottom'],padding:5,boundariesElement:'scrollParent'},keepTogether:{order:400,enabled:!0,fn:function(e){var t=e.offsets,o=t.popper,i=t.reference,n=e.placement.split('-')[0],r=_,p=-1!==['top','bottom'].indexOf(n),s=p?'right':'bottom',d=p?'left':'top',a=p?'width':'height';return o[s]<r(i[d])&&(e.offsets.popper[d]=r(i[d])-o[a]),o[d]>r(i[s])&&(e.offsets.popper[d]=r(i[s])),e}},arrow:{order:500,enabled:!0,fn:function(e,o){if(!F(e.instance.modifiers,'arrow','keepTogether'))return e;var i=o.element;if('string'==typeof i){if(i=e.instance.popper.querySelector(i),!i)return e;}else if(!e.instance.popper.contains(i))return console.warn('WARNING: `arrow.element` must be child of its popper element!'),e;var n=e.placement.split('-')[0],r=e.offsets,p=r.popper,s=r.reference,d=-1!==['left','right'].indexOf(n),a=d?'height':'width',l=d?'Top':'Left',f=l.toLowerCase(),m=d?'left':'top',c=d?'bottom':'right',g=O(i)[a];s[c]-g<p[f]&&(e.offsets.popper[f]-=p[f]-(s[c]-g)),s[f]+g>p[c]&&(e.offsets.popper[f]+=s[f]+g-p[c]);var u=s[f]+s[a]/2-g/2,b=t(e.instance.popper,'margin'+l).replace('px',''),y=u-h(e.offsets.popper)[f]-b;return y=X(V(p[a]-g,y),0),e.arrowElement=i,e.offsets.arrow={},e.offsets.arrow[f]=Math.round(y),e.offsets.arrow[m]='',e},element:'[x-arrow]'},flip:{order:600,enabled:!0,fn:function(e,t){if(W(e.instance.modifiers,'inner'))return e;if(e.flipped&&e.placement===e.originalPlacement)return e;var o=w(e.instance.popper,e.instance.reference,t.padding,t.boundariesElement),i=e.placement.split('-')[0],n=L(i),r=e.placement.split('-')[1]||'',p=[];switch(t.behavior){case fe.FLIP:p=[i,n];break;case fe.CLOCKWISE:p=K(i);break;case fe.COUNTERCLOCKWISE:p=K(i,!0);break;default:p=t.behavior;}return p.forEach(function(s,d){if(i!==s||p.length===d+1)return e;i=e.placement.split('-')[0],n=L(i);var a=e.offsets.popper,l=e.offsets.reference,f=_,m='left'===i&&f(a.right)>f(l.left)||'right'===i&&f(a.left)<f(l.right)||'top'===i&&f(a.bottom)>f(l.top)||'bottom'===i&&f(a.top)<f(l.bottom),c=f(a.left)<f(o.left),h=f(a.right)>f(o.right),g=f(a.top)<f(o.top),u=f(a.bottom)>f(o.bottom),b='left'===i&&c||'right'===i&&h||'top'===i&&g||'bottom'===i&&u,y=-1!==['top','bottom'].indexOf(i),w=!!t.flipVariations&&(y&&'start'===r&&c||y&&'end'===r&&h||!y&&'start'===r&&g||!y&&'end'===r&&u);(m||b||w)&&(e.flipped=!0,(m||b)&&(i=p[d+1]),w&&(r=j(r)),e.placement=i+(r?'-'+r:''),e.offsets.popper=de({},e.offsets.popper,S(e.instance.popper,e.offsets.reference,e.placement)),e=N(e.instance.modifiers,e,'flip'))}),e},behavior:'flip',padding:5,boundariesElement:'viewport'},inner:{order:700,enabled:!1,fn:function(e){var t=e.placement,o=t.split('-')[0],i=e.offsets,n=i.popper,r=i.reference,p=-1!==['left','right'].indexOf(o),s=-1===['top','left'].indexOf(o);return n[p?'left':'top']=r[o]-(s?n[p?'width':'height']:0),e.placement=L(t),e.offsets.popper=h(n),e}},hide:{order:800,enabled:!0,fn:function(e){if(!F(e.instance.modifiers,'hide','preventOverflow'))return e;var t=e.offsets.reference,o=T(e.instance.modifiers,function(e){return'preventOverflow'===e.name}).boundaries;if(t.bottom<o.top||t.left>o.right||t.top>o.bottom||t.right<o.left){if(!0===e.hide)return e;e.hide=!0,e.attributes['x-out-of-boundaries']=''}else{if(!1===e.hide)return e;e.hide=!1,e.attributes['x-out-of-boundaries']=!1}return e}},computeStyle:{order:850,enabled:!0,fn:function(e,t){var o=t.x,i=t.y,n=e.offsets.popper,p=T(e.instance.modifiers,function(e){return'applyStyle'===e.name}).gpuAcceleration;void 0!==p&&console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');var s,d,a=void 0===p?t.gpuAcceleration:p,l=r(e.instance.popper),f=g(l),m={position:n.position},c={left:_(n.left),top:_(n.top),bottom:_(n.bottom),right:_(n.right)},h='bottom'===o?'top':'bottom',u='right'===i?'left':'right',b=B('transform');if(d='bottom'==h?-f.height+c.bottom:c.top,s='right'==u?-f.width+c.right:c.left,a&&b)m[b]='translate3d('+s+'px, '+d+'px, 0)',m[h]=0,m[u]=0,m.willChange='transform';else{var y='bottom'==h?-1:1,w='right'==u?-1:1;m[h]=d*y,m[u]=s*w,m.willChange=h+', '+u}var E={"x-placement":e.placement};return e.attributes=de({},E,e.attributes),e.styles=de({},m,e.styles),e.arrowStyles=de({},e.offsets.arrow,e.arrowStyles),e},gpuAcceleration:!0,x:'bottom',y:'right'},applyStyle:{order:900,enabled:!0,fn:function(e){return U(e.instance.popper,e.styles),Y(e.instance.popper,e.attributes),e.arrowElement&&Object.keys(e.arrowStyles).length&&U(e.arrowElement,e.arrowStyles),e},onLoad:function(e,t,o,i,n){var r=x(n,t,e),p=v(o.placement,r,t,e,o.modifiers.flip.boundariesElement,o.modifiers.flip.padding);return t.setAttribute('x-placement',p),U(t,{position:'absolute'}),o},gpuAcceleration:void 0}}},me});

;
/*!
  * Bootstrap v4.5.0 (https://getbootstrap.com/)
  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jquery"),require("popper.js")):"function"==typeof define&&define.amd?define(["exports","jquery","popper.js"],e):e((t=t||self).bootstrap={},t.jQuery,t.Popper)}(this,(function(t,e,n){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function o(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){s(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n;function l(t){var n=this,i=!1;return e(this).one(c.TRANSITION_END,(function(){i=!0})),setTimeout((function(){i||c.triggerTransitionEnd(n)}),t),this}var c={TRANSITION_END:"bsTransitionEnd",getUID:function(t){do{t+=~~(1e6*Math.random())}while(document.getElementById(t));return t},getSelectorFromElement:function(t){var e=t.getAttribute("data-target");if(!e||"#"===e){var n=t.getAttribute("href");e=n&&"#"!==n?n.trim():""}try{return document.querySelector(e)?e:null}catch(t){return null}},getTransitionDurationFromElement:function(t){if(!t)return 0;var n=e(t).css("transition-duration"),i=e(t).css("transition-delay"),o=parseFloat(n),s=parseFloat(i);return o||s?(n=n.split(",")[0],i=i.split(",")[0],1e3*(parseFloat(n)+parseFloat(i))):0},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(t){e(t).trigger("transitionend")},supportsTransitionEnd:function(){return Boolean("transitionend")},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,n){for(var i in n)if(Object.prototype.hasOwnProperty.call(n,i)){var o=n[i],s=e[i],r=s&&c.isElement(s)?"element":null===(a=s)||"undefined"==typeof a?""+a:{}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(o).test(r))throw new Error(t.toUpperCase()+': Option "'+i+'" provided type "'+r+'" but expected type "'+o+'".')}var a},findShadowRoot:function(t){if(!document.documentElement.attachShadow)return null;if("function"==typeof t.getRootNode){var e=t.getRootNode();return e instanceof ShadowRoot?e:null}return t instanceof ShadowRoot?t:t.parentNode?c.findShadowRoot(t.parentNode):null},jQueryDetection:function(){if("undefined"==typeof e)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var t=e.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1===t[0]&&9===t[1]&&t[2]<1||t[0]>=4)throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}};c.jQueryDetection(),e.fn.emulateTransitionEnd=l,e.event.special[c.TRANSITION_END]={bindType:"transitionend",delegateType:"transitionend",handle:function(t){if(e(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}};var h="alert",u=e.fn[h],d=function(){function t(t){this._element=t}var n=t.prototype;return n.close=function(t){var e=this._element;t&&(e=this._getRootElement(t)),this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},n.dispose=function(){e.removeData(this._element,"bs.alert"),this._element=null},n._getRootElement=function(t){var n=c.getSelectorFromElement(t),i=!1;return n&&(i=document.querySelector(n)),i||(i=e(t).closest(".alert")[0]),i},n._triggerCloseEvent=function(t){var n=e.Event("close.bs.alert");return e(t).trigger(n),n},n._removeElement=function(t){var n=this;if(e(t).removeClass("show"),e(t).hasClass("fade")){var i=c.getTransitionDurationFromElement(t);e(t).one(c.TRANSITION_END,(function(e){return n._destroyElement(t,e)})).emulateTransitionEnd(i)}else this._destroyElement(t)},n._destroyElement=function(t){e(t).detach().trigger("closed.bs.alert").remove()},t._jQueryInterface=function(n){return this.each((function(){var i=e(this),o=i.data("bs.alert");o||(o=new t(this),i.data("bs.alert",o)),"close"===n&&o[n](this)}))},t._handleDismiss=function(t){return function(e){e&&e.preventDefault(),t.close(this)}},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}}]),t}();e(document).on("click.bs.alert.data-api",'[data-dismiss="alert"]',d._handleDismiss(new d)),e.fn[h]=d._jQueryInterface,e.fn[h].Constructor=d,e.fn[h].noConflict=function(){return e.fn[h]=u,d._jQueryInterface};var f=e.fn.button,g=function(){function t(t){this._element=t}var n=t.prototype;return n.toggle=function(){var t=!0,n=!0,i=e(this._element).closest('[data-toggle="buttons"]')[0];if(i){var o=this._element.querySelector('input:not([type="hidden"])');if(o){if("radio"===o.type)if(o.checked&&this._element.classList.contains("active"))t=!1;else{var s=i.querySelector(".active");s&&e(s).removeClass("active")}t&&("checkbox"!==o.type&&"radio"!==o.type||(o.checked=!this._element.classList.contains("active")),e(o).trigger("change")),o.focus(),n=!1}}this._element.hasAttribute("disabled")||this._element.classList.contains("disabled")||(n&&this._element.setAttribute("aria-pressed",!this._element.classList.contains("active")),t&&e(this._element).toggleClass("active"))},n.dispose=function(){e.removeData(this._element,"bs.button"),this._element=null},t._jQueryInterface=function(n){return this.each((function(){var i=e(this).data("bs.button");i||(i=new t(this),e(this).data("bs.button",i)),"toggle"===n&&i[n]()}))},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}}]),t}();e(document).on("click.bs.button.data-api",'[data-toggle^="button"]',(function(t){var n=t.target,i=n;if(e(n).hasClass("btn")||(n=e(n).closest(".btn")[0]),!n||n.hasAttribute("disabled")||n.classList.contains("disabled"))t.preventDefault();else{var o=n.querySelector('input:not([type="hidden"])');if(o&&(o.hasAttribute("disabled")||o.classList.contains("disabled")))return void t.preventDefault();"LABEL"===i.tagName&&o&&"checkbox"===o.type&&t.preventDefault(),g._jQueryInterface.call(e(n),"toggle")}})).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',(function(t){var n=e(t.target).closest(".btn")[0];e(n).toggleClass("focus",/^focus(in)?$/.test(t.type))})),e(window).on("load.bs.button.data-api",(function(){for(var t=[].slice.call(document.querySelectorAll('[data-toggle="buttons"] .btn')),e=0,n=t.length;e<n;e++){var i=t[e],o=i.querySelector('input:not([type="hidden"])');o.checked||o.hasAttribute("checked")?i.classList.add("active"):i.classList.remove("active")}for(var s=0,r=(t=[].slice.call(document.querySelectorAll('[data-toggle="button"]'))).length;s<r;s++){var a=t[s];"true"===a.getAttribute("aria-pressed")?a.classList.add("active"):a.classList.remove("active")}})),e.fn.button=g._jQueryInterface,e.fn.button.Constructor=g,e.fn.button.noConflict=function(){return e.fn.button=f,g._jQueryInterface};var m="carousel",p=".bs.carousel",_=e.fn[m],v={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},b={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},y={TOUCH:"touch",PEN:"pen"},E=function(){function t(t,e){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(e),this._element=t,this._indicatorsElement=this._element.querySelector(".carousel-indicators"),this._touchSupported="ontouchstart"in document.documentElement||navigator.maxTouchPoints>0,this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent),this._addEventListeners()}var n=t.prototype;return n.next=function(){this._isSliding||this._slide("next")},n.nextWhenVisible=function(){!document.hidden&&e(this._element).is(":visible")&&"hidden"!==e(this._element).css("visibility")&&this.next()},n.prev=function(){this._isSliding||this._slide("prev")},n.pause=function(t){t||(this._isPaused=!0),this._element.querySelector(".carousel-item-next, .carousel-item-prev")&&(c.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},n.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},n.to=function(t){var n=this;this._activeElement=this._element.querySelector(".active.carousel-item");var i=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0))if(this._isSliding)e(this._element).one("slid.bs.carousel",(function(){return n.to(t)}));else{if(i===t)return this.pause(),void this.cycle();var o=t>i?"next":"prev";this._slide(o,this._items[t])}},n.dispose=function(){e(this._element).off(p),e.removeData(this._element,"bs.carousel"),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},n._getConfig=function(t){return t=a(a({},v),t),c.typeCheckConfig(m,t,b),t},n._handleSwipe=function(){var t=Math.abs(this.touchDeltaX);if(!(t<=40)){var e=t/this.touchDeltaX;this.touchDeltaX=0,e>0&&this.prev(),e<0&&this.next()}},n._addEventListeners=function(){var t=this;this._config.keyboard&&e(this._element).on("keydown.bs.carousel",(function(e){return t._keydown(e)})),"hover"===this._config.pause&&e(this._element).on("mouseenter.bs.carousel",(function(e){return t.pause(e)})).on("mouseleave.bs.carousel",(function(e){return t.cycle(e)})),this._config.touch&&this._addTouchEventListeners()},n._addTouchEventListeners=function(){var t=this;if(this._touchSupported){var n=function(e){t._pointerEvent&&y[e.originalEvent.pointerType.toUpperCase()]?t.touchStartX=e.originalEvent.clientX:t._pointerEvent||(t.touchStartX=e.originalEvent.touches[0].clientX)},i=function(e){t._pointerEvent&&y[e.originalEvent.pointerType.toUpperCase()]&&(t.touchDeltaX=e.originalEvent.clientX-t.touchStartX),t._handleSwipe(),"hover"===t._config.pause&&(t.pause(),t.touchTimeout&&clearTimeout(t.touchTimeout),t.touchTimeout=setTimeout((function(e){return t.cycle(e)}),500+t._config.interval))};e(this._element.querySelectorAll(".carousel-item img")).on("dragstart.bs.carousel",(function(t){return t.preventDefault()})),this._pointerEvent?(e(this._element).on("pointerdown.bs.carousel",(function(t){return n(t)})),e(this._element).on("pointerup.bs.carousel",(function(t){return i(t)})),this._element.classList.add("pointer-event")):(e(this._element).on("touchstart.bs.carousel",(function(t){return n(t)})),e(this._element).on("touchmove.bs.carousel",(function(e){return function(e){e.originalEvent.touches&&e.originalEvent.touches.length>1?t.touchDeltaX=0:t.touchDeltaX=e.originalEvent.touches[0].clientX-t.touchStartX}(e)})),e(this._element).on("touchend.bs.carousel",(function(t){return i(t)})))}},n._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},n._getItemIndex=function(t){return this._items=t&&t.parentNode?[].slice.call(t.parentNode.querySelectorAll(".carousel-item")):[],this._items.indexOf(t)},n._getItemByDirection=function(t,e){var n="next"===t,i="prev"===t,o=this._getItemIndex(e),s=this._items.length-1;if((i&&0===o||n&&o===s)&&!this._config.wrap)return e;var r=(o+("prev"===t?-1:1))%this._items.length;return-1===r?this._items[this._items.length-1]:this._items[r]},n._triggerSlideEvent=function(t,n){var i=this._getItemIndex(t),o=this._getItemIndex(this._element.querySelector(".active.carousel-item")),s=e.Event("slide.bs.carousel",{relatedTarget:t,direction:n,from:o,to:i});return e(this._element).trigger(s),s},n._setActiveIndicatorElement=function(t){if(this._indicatorsElement){var n=[].slice.call(this._indicatorsElement.querySelectorAll(".active"));e(n).removeClass("active");var i=this._indicatorsElement.children[this._getItemIndex(t)];i&&e(i).addClass("active")}},n._slide=function(t,n){var i,o,s,r=this,a=this._element.querySelector(".active.carousel-item"),l=this._getItemIndex(a),h=n||a&&this._getItemByDirection(t,a),u=this._getItemIndex(h),d=Boolean(this._interval);if("next"===t?(i="carousel-item-left",o="carousel-item-next",s="left"):(i="carousel-item-right",o="carousel-item-prev",s="right"),h&&e(h).hasClass("active"))this._isSliding=!1;else if(!this._triggerSlideEvent(h,s).isDefaultPrevented()&&a&&h){this._isSliding=!0,d&&this.pause(),this._setActiveIndicatorElement(h);var f=e.Event("slid.bs.carousel",{relatedTarget:h,direction:s,from:l,to:u});if(e(this._element).hasClass("slide")){e(h).addClass(o),c.reflow(h),e(a).addClass(i),e(h).addClass(i);var g=parseInt(h.getAttribute("data-interval"),10);g?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=g):this._config.interval=this._config.defaultInterval||this._config.interval;var m=c.getTransitionDurationFromElement(a);e(a).one(c.TRANSITION_END,(function(){e(h).removeClass(i+" "+o).addClass("active"),e(a).removeClass("active "+o+" "+i),r._isSliding=!1,setTimeout((function(){return e(r._element).trigger(f)}),0)})).emulateTransitionEnd(m)}else e(a).removeClass("active"),e(h).addClass("active"),this._isSliding=!1,e(this._element).trigger(f);d&&this.cycle()}},t._jQueryInterface=function(n){return this.each((function(){var i=e(this).data("bs.carousel"),o=a(a({},v),e(this).data());"object"==typeof n&&(o=a(a({},o),n));var s="string"==typeof n?n:o.slide;if(i||(i=new t(this,o),e(this).data("bs.carousel",i)),"number"==typeof n)i.to(n);else if("string"==typeof s){if("undefined"==typeof i[s])throw new TypeError('No method named "'+s+'"');i[s]()}else o.interval&&o.ride&&(i.pause(),i.cycle())}))},t._dataApiClickHandler=function(n){var i=c.getSelectorFromElement(this);if(i){var o=e(i)[0];if(o&&e(o).hasClass("carousel")){var s=a(a({},e(o).data()),e(this).data()),r=this.getAttribute("data-slide-to");r&&(s.interval=!1),t._jQueryInterface.call(e(o),s),r&&e(o).data("bs.carousel").to(r),n.preventDefault()}}},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}},{key:"Default",get:function(){return v}}]),t}();e(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",E._dataApiClickHandler),e(window).on("load.bs.carousel.data-api",(function(){for(var t=[].slice.call(document.querySelectorAll('[data-ride="carousel"]')),n=0,i=t.length;n<i;n++){var o=e(t[n]);E._jQueryInterface.call(o,o.data())}})),e.fn[m]=E._jQueryInterface,e.fn[m].Constructor=E,e.fn[m].noConflict=function(){return e.fn[m]=_,E._jQueryInterface};var w="collapse",T=e.fn[w],C={toggle:!0,parent:""},S={toggle:"boolean",parent:"(string|element)"},D=function(){function t(t,e){this._isTransitioning=!1,this._element=t,this._config=this._getConfig(e),this._triggerArray=[].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#'+t.id+'"],[data-toggle="collapse"][data-target="#'+t.id+'"]'));for(var n=[].slice.call(document.querySelectorAll('[data-toggle="collapse"]')),i=0,o=n.length;i<o;i++){var s=n[i],r=c.getSelectorFromElement(s),a=[].slice.call(document.querySelectorAll(r)).filter((function(e){return e===t}));null!==r&&a.length>0&&(this._selector=r,this._triggerArray.push(s))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var n=t.prototype;return n.toggle=function(){e(this._element).hasClass("show")?this.hide():this.show()},n.show=function(){var n,i,o=this;if(!this._isTransitioning&&!e(this._element).hasClass("show")&&(this._parent&&0===(n=[].slice.call(this._parent.querySelectorAll(".show, .collapsing")).filter((function(t){return"string"==typeof o._config.parent?t.getAttribute("data-parent")===o._config.parent:t.classList.contains("collapse")}))).length&&(n=null),!(n&&(i=e(n).not(this._selector).data("bs.collapse"))&&i._isTransitioning))){var s=e.Event("show.bs.collapse");if(e(this._element).trigger(s),!s.isDefaultPrevented()){n&&(t._jQueryInterface.call(e(n).not(this._selector),"hide"),i||e(n).data("bs.collapse",null));var r=this._getDimension();e(this._element).removeClass("collapse").addClass("collapsing"),this._element.style[r]=0,this._triggerArray.length&&e(this._triggerArray).removeClass("collapsed").attr("aria-expanded",!0),this.setTransitioning(!0);var a="scroll"+(r[0].toUpperCase()+r.slice(1)),l=c.getTransitionDurationFromElement(this._element);e(this._element).one(c.TRANSITION_END,(function(){e(o._element).removeClass("collapsing").addClass("collapse show"),o._element.style[r]="",o.setTransitioning(!1),e(o._element).trigger("shown.bs.collapse")})).emulateTransitionEnd(l),this._element.style[r]=this._element[a]+"px"}}},n.hide=function(){var t=this;if(!this._isTransitioning&&e(this._element).hasClass("show")){var n=e.Event("hide.bs.collapse");if(e(this._element).trigger(n),!n.isDefaultPrevented()){var i=this._getDimension();this._element.style[i]=this._element.getBoundingClientRect()[i]+"px",c.reflow(this._element),e(this._element).addClass("collapsing").removeClass("collapse show");var o=this._triggerArray.length;if(o>0)for(var s=0;s<o;s++){var r=this._triggerArray[s],a=c.getSelectorFromElement(r);if(null!==a)e([].slice.call(document.querySelectorAll(a))).hasClass("show")||e(r).addClass("collapsed").attr("aria-expanded",!1)}this.setTransitioning(!0);this._element.style[i]="";var l=c.getTransitionDurationFromElement(this._element);e(this._element).one(c.TRANSITION_END,(function(){t.setTransitioning(!1),e(t._element).removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")})).emulateTransitionEnd(l)}}},n.setTransitioning=function(t){this._isTransitioning=t},n.dispose=function(){e.removeData(this._element,"bs.collapse"),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},n._getConfig=function(t){return(t=a(a({},C),t)).toggle=Boolean(t.toggle),c.typeCheckConfig(w,t,S),t},n._getDimension=function(){return e(this._element).hasClass("width")?"width":"height"},n._getParent=function(){var n,i=this;c.isElement(this._config.parent)?(n=this._config.parent,"undefined"!=typeof this._config.parent.jquery&&(n=this._config.parent[0])):n=document.querySelector(this._config.parent);var o='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',s=[].slice.call(n.querySelectorAll(o));return e(s).each((function(e,n){i._addAriaAndCollapsedClass(t._getTargetFromElement(n),[n])})),n},n._addAriaAndCollapsedClass=function(t,n){var i=e(t).hasClass("show");n.length&&e(n).toggleClass("collapsed",!i).attr("aria-expanded",i)},t._getTargetFromElement=function(t){var e=c.getSelectorFromElement(t);return e?document.querySelector(e):null},t._jQueryInterface=function(n){return this.each((function(){var i=e(this),o=i.data("bs.collapse"),s=a(a(a({},C),i.data()),"object"==typeof n&&n?n:{});if(!o&&s.toggle&&"string"==typeof n&&/show|hide/.test(n)&&(s.toggle=!1),o||(o=new t(this,s),i.data("bs.collapse",o)),"string"==typeof n){if("undefined"==typeof o[n])throw new TypeError('No method named "'+n+'"');o[n]()}}))},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}},{key:"Default",get:function(){return C}}]),t}();e(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',(function(t){"A"===t.currentTarget.tagName&&t.preventDefault();var n=e(this),i=c.getSelectorFromElement(this),o=[].slice.call(document.querySelectorAll(i));e(o).each((function(){var t=e(this),i=t.data("bs.collapse")?"toggle":n.data();D._jQueryInterface.call(t,i)}))})),e.fn[w]=D._jQueryInterface,e.fn[w].Constructor=D,e.fn[w].noConflict=function(){return e.fn[w]=T,D._jQueryInterface};var k="dropdown",N=e.fn[k],A=new RegExp("38|40|27"),I={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic",popperConfig:null},O={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string",popperConfig:"(null|object)"},j=function(){function t(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var i=t.prototype;return i.toggle=function(){if(!this._element.disabled&&!e(this._element).hasClass("disabled")){var n=e(this._menu).hasClass("show");t._clearMenus(),n||this.show(!0)}},i.show=function(i){if(void 0===i&&(i=!1),!(this._element.disabled||e(this._element).hasClass("disabled")||e(this._menu).hasClass("show"))){var o={relatedTarget:this._element},s=e.Event("show.bs.dropdown",o),r=t._getParentFromElement(this._element);if(e(r).trigger(s),!s.isDefaultPrevented()){if(!this._inNavbar&&i){if("undefined"==typeof n)throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");var a=this._element;"parent"===this._config.reference?a=r:c.isElement(this._config.reference)&&(a=this._config.reference,"undefined"!=typeof this._config.reference.jquery&&(a=this._config.reference[0])),"scrollParent"!==this._config.boundary&&e(r).addClass("position-static"),this._popper=new n(a,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===e(r).closest(".navbar-nav").length&&e(document.body).children().on("mouseover",null,e.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),e(this._menu).toggleClass("show"),e(r).toggleClass("show").trigger(e.Event("shown.bs.dropdown",o))}}},i.hide=function(){if(!this._element.disabled&&!e(this._element).hasClass("disabled")&&e(this._menu).hasClass("show")){var n={relatedTarget:this._element},i=e.Event("hide.bs.dropdown",n),o=t._getParentFromElement(this._element);e(o).trigger(i),i.isDefaultPrevented()||(this._popper&&this._popper.destroy(),e(this._menu).toggleClass("show"),e(o).toggleClass("show").trigger(e.Event("hidden.bs.dropdown",n)))}},i.dispose=function(){e.removeData(this._element,"bs.dropdown"),e(this._element).off(".bs.dropdown"),this._element=null,this._menu=null,null!==this._popper&&(this._popper.destroy(),this._popper=null)},i.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},i._addEventListeners=function(){var t=this;e(this._element).on("click.bs.dropdown",(function(e){e.preventDefault(),e.stopPropagation(),t.toggle()}))},i._getConfig=function(t){return t=a(a(a({},this.constructor.Default),e(this._element).data()),t),c.typeCheckConfig(k,t,this.constructor.DefaultType),t},i._getMenuElement=function(){if(!this._menu){var e=t._getParentFromElement(this._element);e&&(this._menu=e.querySelector(".dropdown-menu"))}return this._menu},i._getPlacement=function(){var t=e(this._element.parentNode),n="bottom-start";return t.hasClass("dropup")?n=e(this._menu).hasClass("dropdown-menu-right")?"top-end":"top-start":t.hasClass("dropright")?n="right-start":t.hasClass("dropleft")?n="left-start":e(this._menu).hasClass("dropdown-menu-right")&&(n="bottom-end"),n},i._detectNavbar=function(){return e(this._element).closest(".navbar").length>0},i._getOffset=function(){var t=this,e={};return"function"==typeof this._config.offset?e.fn=function(e){return e.offsets=a(a({},e.offsets),t._config.offset(e.offsets,t._element)||{}),e}:e.offset=this._config.offset,e},i._getPopperConfig=function(){var t={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(t.modifiers.applyStyle={enabled:!1}),a(a({},t),this._config.popperConfig)},t._jQueryInterface=function(n){return this.each((function(){var i=e(this).data("bs.dropdown");if(i||(i=new t(this,"object"==typeof n?n:null),e(this).data("bs.dropdown",i)),"string"==typeof n){if("undefined"==typeof i[n])throw new TypeError('No method named "'+n+'"');i[n]()}}))},t._clearMenus=function(n){if(!n||3!==n.which&&("keyup"!==n.type||9===n.which))for(var i=[].slice.call(document.querySelectorAll('[data-toggle="dropdown"]')),o=0,s=i.length;o<s;o++){var r=t._getParentFromElement(i[o]),a=e(i[o]).data("bs.dropdown"),l={relatedTarget:i[o]};if(n&&"click"===n.type&&(l.clickEvent=n),a){var c=a._menu;if(e(r).hasClass("show")&&!(n&&("click"===n.type&&/input|textarea/i.test(n.target.tagName)||"keyup"===n.type&&9===n.which)&&e.contains(r,n.target))){var h=e.Event("hide.bs.dropdown",l);e(r).trigger(h),h.isDefaultPrevented()||("ontouchstart"in document.documentElement&&e(document.body).children().off("mouseover",null,e.noop),i[o].setAttribute("aria-expanded","false"),a._popper&&a._popper.destroy(),e(c).removeClass("show"),e(r).removeClass("show").trigger(e.Event("hidden.bs.dropdown",l)))}}}},t._getParentFromElement=function(t){var e,n=c.getSelectorFromElement(t);return n&&(e=document.querySelector(n)),e||t.parentNode},t._dataApiKeydownHandler=function(n){if(!(/input|textarea/i.test(n.target.tagName)?32===n.which||27!==n.which&&(40!==n.which&&38!==n.which||e(n.target).closest(".dropdown-menu").length):!A.test(n.which))&&!this.disabled&&!e(this).hasClass("disabled")){var i=t._getParentFromElement(this),o=e(i).hasClass("show");if(o||27!==n.which){if(n.preventDefault(),n.stopPropagation(),!o||o&&(27===n.which||32===n.which))return 27===n.which&&e(i.querySelector('[data-toggle="dropdown"]')).trigger("focus"),void e(this).trigger("click");var s=[].slice.call(i.querySelectorAll(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)")).filter((function(t){return e(t).is(":visible")}));if(0!==s.length){var r=s.indexOf(n.target);38===n.which&&r>0&&r--,40===n.which&&r<s.length-1&&r++,r<0&&(r=0),s[r].focus()}}}},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}},{key:"Default",get:function(){return I}},{key:"DefaultType",get:function(){return O}}]),t}();e(document).on("keydown.bs.dropdown.data-api",'[data-toggle="dropdown"]',j._dataApiKeydownHandler).on("keydown.bs.dropdown.data-api",".dropdown-menu",j._dataApiKeydownHandler).on("click.bs.dropdown.data-api keyup.bs.dropdown.data-api",j._clearMenus).on("click.bs.dropdown.data-api",'[data-toggle="dropdown"]',(function(t){t.preventDefault(),t.stopPropagation(),j._jQueryInterface.call(e(this),"toggle")})).on("click.bs.dropdown.data-api",".dropdown form",(function(t){t.stopPropagation()})),e.fn[k]=j._jQueryInterface,e.fn[k].Constructor=j,e.fn[k].noConflict=function(){return e.fn[k]=N,j._jQueryInterface};var P=e.fn.modal,x={backdrop:!0,keyboard:!0,focus:!0,show:!0},L={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},R=function(){function t(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=t.querySelector(".modal-dialog"),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._scrollbarWidth=0}var n=t.prototype;return n.toggle=function(t){return this._isShown?this.hide():this.show(t)},n.show=function(t){var n=this;if(!this._isShown&&!this._isTransitioning){e(this._element).hasClass("fade")&&(this._isTransitioning=!0);var i=e.Event("show.bs.modal",{relatedTarget:t});e(this._element).trigger(i),this._isShown||i.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),e(this._element).on("click.dismiss.bs.modal",'[data-dismiss="modal"]',(function(t){return n.hide(t)})),e(this._dialog).on("mousedown.dismiss.bs.modal",(function(){e(n._element).one("mouseup.dismiss.bs.modal",(function(t){e(t.target).is(n._element)&&(n._ignoreBackdropClick=!0)}))})),this._showBackdrop((function(){return n._showElement(t)})))}},n.hide=function(t){var n=this;if(t&&t.preventDefault(),this._isShown&&!this._isTransitioning){var i=e.Event("hide.bs.modal");if(e(this._element).trigger(i),this._isShown&&!i.isDefaultPrevented()){this._isShown=!1;var o=e(this._element).hasClass("fade");if(o&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),e(document).off("focusin.bs.modal"),e(this._element).removeClass("show"),e(this._element).off("click.dismiss.bs.modal"),e(this._dialog).off("mousedown.dismiss.bs.modal"),o){var s=c.getTransitionDurationFromElement(this._element);e(this._element).one(c.TRANSITION_END,(function(t){return n._hideModal(t)})).emulateTransitionEnd(s)}else this._hideModal()}}},n.dispose=function(){[window,this._element,this._dialog].forEach((function(t){return e(t).off(".bs.modal")})),e(document).off("focusin.bs.modal"),e.removeData(this._element,"bs.modal"),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},n.handleUpdate=function(){this._adjustDialog()},n._getConfig=function(t){return t=a(a({},x),t),c.typeCheckConfig("modal",t,L),t},n._triggerBackdropTransition=function(){var t=this;if("static"===this._config.backdrop){var n=e.Event("hidePrevented.bs.modal");if(e(this._element).trigger(n),n.defaultPrevented)return;this._element.classList.add("modal-static");var i=c.getTransitionDurationFromElement(this._element);e(this._element).one(c.TRANSITION_END,(function(){t._element.classList.remove("modal-static")})).emulateTransitionEnd(i),this._element.focus()}else this.hide()},n._showElement=function(t){var n=this,i=e(this._element).hasClass("fade"),o=this._dialog?this._dialog.querySelector(".modal-body"):null;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),e(this._dialog).hasClass("modal-dialog-scrollable")&&o?o.scrollTop=0:this._element.scrollTop=0,i&&c.reflow(this._element),e(this._element).addClass("show"),this._config.focus&&this._enforceFocus();var s=e.Event("shown.bs.modal",{relatedTarget:t}),r=function(){n._config.focus&&n._element.focus(),n._isTransitioning=!1,e(n._element).trigger(s)};if(i){var a=c.getTransitionDurationFromElement(this._dialog);e(this._dialog).one(c.TRANSITION_END,r).emulateTransitionEnd(a)}else r()},n._enforceFocus=function(){var t=this;e(document).off("focusin.bs.modal").on("focusin.bs.modal",(function(n){document!==n.target&&t._element!==n.target&&0===e(t._element).has(n.target).length&&t._element.focus()}))},n._setEscapeEvent=function(){var t=this;this._isShown?e(this._element).on("keydown.dismiss.bs.modal",(function(e){t._config.keyboard&&27===e.which?(e.preventDefault(),t.hide()):t._config.keyboard||27!==e.which||t._triggerBackdropTransition()})):this._isShown||e(this._element).off("keydown.dismiss.bs.modal")},n._setResizeEvent=function(){var t=this;this._isShown?e(window).on("resize.bs.modal",(function(e){return t.handleUpdate(e)})):e(window).off("resize.bs.modal")},n._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._isTransitioning=!1,this._showBackdrop((function(){e(document.body).removeClass("modal-open"),t._resetAdjustments(),t._resetScrollbar(),e(t._element).trigger("hidden.bs.modal")}))},n._removeBackdrop=function(){this._backdrop&&(e(this._backdrop).remove(),this._backdrop=null)},n._showBackdrop=function(t){var n=this,i=e(this._element).hasClass("fade")?"fade":"";if(this._isShown&&this._config.backdrop){if(this._backdrop=document.createElement("div"),this._backdrop.className="modal-backdrop",i&&this._backdrop.classList.add(i),e(this._backdrop).appendTo(document.body),e(this._element).on("click.dismiss.bs.modal",(function(t){n._ignoreBackdropClick?n._ignoreBackdropClick=!1:t.target===t.currentTarget&&n._triggerBackdropTransition()})),i&&c.reflow(this._backdrop),e(this._backdrop).addClass("show"),!t)return;if(!i)return void t();var o=c.getTransitionDurationFromElement(this._backdrop);e(this._backdrop).one(c.TRANSITION_END,t).emulateTransitionEnd(o)}else if(!this._isShown&&this._backdrop){e(this._backdrop).removeClass("show");var s=function(){n._removeBackdrop(),t&&t()};if(e(this._element).hasClass("fade")){var r=c.getTransitionDurationFromElement(this._backdrop);e(this._backdrop).one(c.TRANSITION_END,s).emulateTransitionEnd(r)}else s()}else t&&t()},n._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},n._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},n._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=Math.round(t.left+t.right)<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},n._setScrollbar=function(){var t=this;if(this._isBodyOverflowing){var n=[].slice.call(document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top")),i=[].slice.call(document.querySelectorAll(".sticky-top"));e(n).each((function(n,i){var o=i.style.paddingRight,s=e(i).css("padding-right");e(i).data("padding-right",o).css("padding-right",parseFloat(s)+t._scrollbarWidth+"px")})),e(i).each((function(n,i){var o=i.style.marginRight,s=e(i).css("margin-right");e(i).data("margin-right",o).css("margin-right",parseFloat(s)-t._scrollbarWidth+"px")}));var o=document.body.style.paddingRight,s=e(document.body).css("padding-right");e(document.body).data("padding-right",o).css("padding-right",parseFloat(s)+this._scrollbarWidth+"px")}e(document.body).addClass("modal-open")},n._resetScrollbar=function(){var t=[].slice.call(document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top"));e(t).each((function(t,n){var i=e(n).data("padding-right");e(n).removeData("padding-right"),n.style.paddingRight=i||""}));var n=[].slice.call(document.querySelectorAll(".sticky-top"));e(n).each((function(t,n){var i=e(n).data("margin-right");"undefined"!=typeof i&&e(n).css("margin-right",i).removeData("margin-right")}));var i=e(document.body).data("padding-right");e(document.body).removeData("padding-right"),document.body.style.paddingRight=i||""},n._getScrollbarWidth=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},t._jQueryInterface=function(n,i){return this.each((function(){var o=e(this).data("bs.modal"),s=a(a(a({},x),e(this).data()),"object"==typeof n&&n?n:{});if(o||(o=new t(this,s),e(this).data("bs.modal",o)),"string"==typeof n){if("undefined"==typeof o[n])throw new TypeError('No method named "'+n+'"');o[n](i)}else s.show&&o.show(i)}))},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}},{key:"Default",get:function(){return x}}]),t}();e(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',(function(t){var n,i=this,o=c.getSelectorFromElement(this);o&&(n=document.querySelector(o));var s=e(n).data("bs.modal")?"toggle":a(a({},e(n).data()),e(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var r=e(n).one("show.bs.modal",(function(t){t.isDefaultPrevented()||r.one("hidden.bs.modal",(function(){e(i).is(":visible")&&i.focus()}))}));R._jQueryInterface.call(e(n),s,this)})),e.fn.modal=R._jQueryInterface,e.fn.modal.Constructor=R,e.fn.modal.noConflict=function(){return e.fn.modal=P,R._jQueryInterface};var q=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],F={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},Q=/^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi,B=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;function H(t,e,n){if(0===t.length)return t;if(n&&"function"==typeof n)return n(t);for(var i=(new window.DOMParser).parseFromString(t,"text/html"),o=Object.keys(e),s=[].slice.call(i.body.querySelectorAll("*")),r=function(t,n){var i=s[t],r=i.nodeName.toLowerCase();if(-1===o.indexOf(i.nodeName.toLowerCase()))return i.parentNode.removeChild(i),"continue";var a=[].slice.call(i.attributes),l=[].concat(e["*"]||[],e[r]||[]);a.forEach((function(t){(function(t,e){var n=t.nodeName.toLowerCase();if(-1!==e.indexOf(n))return-1===q.indexOf(n)||Boolean(t.nodeValue.match(Q)||t.nodeValue.match(B));for(var i=e.filter((function(t){return t instanceof RegExp})),o=0,s=i.length;o<s;o++)if(n.match(i[o]))return!0;return!1})(t,l)||i.removeAttribute(t.nodeName)}))},a=0,l=s.length;a<l;a++)r(a);return i.body.innerHTML}var U="tooltip",M=e.fn[U],W=new RegExp("(^|\\s)bs-tooltip\\S+","g"),V=["sanitize","whiteList","sanitizeFn"],z={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string|function)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)",sanitize:"boolean",sanitizeFn:"(null|function)",whiteList:"object",popperConfig:"(null|object)"},K={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},X={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent",sanitize:!0,sanitizeFn:null,whiteList:F,popperConfig:null},Y={HIDE:"hide.bs.tooltip",HIDDEN:"hidden.bs.tooltip",SHOW:"show.bs.tooltip",SHOWN:"shown.bs.tooltip",INSERTED:"inserted.bs.tooltip",CLICK:"click.bs.tooltip",FOCUSIN:"focusin.bs.tooltip",FOCUSOUT:"focusout.bs.tooltip",MOUSEENTER:"mouseenter.bs.tooltip",MOUSELEAVE:"mouseleave.bs.tooltip"},$=function(){function t(t,e){if("undefined"==typeof n)throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}var i=t.prototype;return i.enable=function(){this._isEnabled=!0},i.disable=function(){this._isEnabled=!1},i.toggleEnabled=function(){this._isEnabled=!this._isEnabled},i.toggle=function(t){if(this._isEnabled)if(t){var n=this.constructor.DATA_KEY,i=e(t.currentTarget).data(n);i||(i=new this.constructor(t.currentTarget,this._getDelegateConfig()),e(t.currentTarget).data(n,i)),i._activeTrigger.click=!i._activeTrigger.click,i._isWithActiveTrigger()?i._enter(null,i):i._leave(null,i)}else{if(e(this.getTipElement()).hasClass("show"))return void this._leave(null,this);this._enter(null,this)}},i.dispose=function(){clearTimeout(this._timeout),e.removeData(this.element,this.constructor.DATA_KEY),e(this.element).off(this.constructor.EVENT_KEY),e(this.element).closest(".modal").off("hide.bs.modal",this._hideModalHandler),this.tip&&e(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},i.show=function(){var t=this;if("none"===e(this.element).css("display"))throw new Error("Please use show on visible elements");var i=e.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){e(this.element).trigger(i);var o=c.findShadowRoot(this.element),s=e.contains(null!==o?o:this.element.ownerDocument.documentElement,this.element);if(i.isDefaultPrevented()||!s)return;var r=this.getTipElement(),a=c.getUID(this.constructor.NAME);r.setAttribute("id",a),this.element.setAttribute("aria-describedby",a),this.setContent(),this.config.animation&&e(r).addClass("fade");var l="function"==typeof this.config.placement?this.config.placement.call(this,r,this.element):this.config.placement,h=this._getAttachment(l);this.addAttachmentClass(h);var u=this._getContainer();e(r).data(this.constructor.DATA_KEY,this),e.contains(this.element.ownerDocument.documentElement,this.tip)||e(r).appendTo(u),e(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new n(this.element,r,this._getPopperConfig(h)),e(r).addClass("show"),"ontouchstart"in document.documentElement&&e(document.body).children().on("mouseover",null,e.noop);var d=function(){t.config.animation&&t._fixTransition();var n=t._hoverState;t._hoverState=null,e(t.element).trigger(t.constructor.Event.SHOWN),"out"===n&&t._leave(null,t)};if(e(this.tip).hasClass("fade")){var f=c.getTransitionDurationFromElement(this.tip);e(this.tip).one(c.TRANSITION_END,d).emulateTransitionEnd(f)}else d()}},i.hide=function(t){var n=this,i=this.getTipElement(),o=e.Event(this.constructor.Event.HIDE),s=function(){"show"!==n._hoverState&&i.parentNode&&i.parentNode.removeChild(i),n._cleanTipClass(),n.element.removeAttribute("aria-describedby"),e(n.element).trigger(n.constructor.Event.HIDDEN),null!==n._popper&&n._popper.destroy(),t&&t()};if(e(this.element).trigger(o),!o.isDefaultPrevented()){if(e(i).removeClass("show"),"ontouchstart"in document.documentElement&&e(document.body).children().off("mouseover",null,e.noop),this._activeTrigger.click=!1,this._activeTrigger.focus=!1,this._activeTrigger.hover=!1,e(this.tip).hasClass("fade")){var r=c.getTransitionDurationFromElement(i);e(i).one(c.TRANSITION_END,s).emulateTransitionEnd(r)}else s();this._hoverState=""}},i.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},i.isWithContent=function(){return Boolean(this.getTitle())},i.addAttachmentClass=function(t){e(this.getTipElement()).addClass("bs-tooltip-"+t)},i.getTipElement=function(){return this.tip=this.tip||e(this.config.template)[0],this.tip},i.setContent=function(){var t=this.getTipElement();this.setElementContent(e(t.querySelectorAll(".tooltip-inner")),this.getTitle()),e(t).removeClass("fade show")},i.setElementContent=function(t,n){"object"!=typeof n||!n.nodeType&&!n.jquery?this.config.html?(this.config.sanitize&&(n=H(n,this.config.whiteList,this.config.sanitizeFn)),t.html(n)):t.text(n):this.config.html?e(n).parent().is(t)||t.empty().append(n):t.text(e(n).text())},i.getTitle=function(){var t=this.element.getAttribute("data-original-title");return t||(t="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),t},i._getPopperConfig=function(t){var e=this;return a(a({},{placement:t,modifiers:{offset:this._getOffset(),flip:{behavior:this.config.fallbackPlacement},arrow:{element:".arrow"},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){return e._handlePopperPlacementChange(t)}}),this.config.popperConfig)},i._getOffset=function(){var t=this,e={};return"function"==typeof this.config.offset?e.fn=function(e){return e.offsets=a(a({},e.offsets),t.config.offset(e.offsets,t.element)||{}),e}:e.offset=this.config.offset,e},i._getContainer=function(){return!1===this.config.container?document.body:c.isElement(this.config.container)?e(this.config.container):e(document).find(this.config.container)},i._getAttachment=function(t){return K[t.toUpperCase()]},i._setListeners=function(){var t=this;this.config.trigger.split(" ").forEach((function(n){if("click"===n)e(t.element).on(t.constructor.Event.CLICK,t.config.selector,(function(e){return t.toggle(e)}));else if("manual"!==n){var i="hover"===n?t.constructor.Event.MOUSEENTER:t.constructor.Event.FOCUSIN,o="hover"===n?t.constructor.Event.MOUSELEAVE:t.constructor.Event.FOCUSOUT;e(t.element).on(i,t.config.selector,(function(e){return t._enter(e)})).on(o,t.config.selector,(function(e){return t._leave(e)}))}})),this._hideModalHandler=function(){t.element&&t.hide()},e(this.element).closest(".modal").on("hide.bs.modal",this._hideModalHandler),this.config.selector?this.config=a(a({},this.config),{},{trigger:"manual",selector:""}):this._fixTitle()},i._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");(this.element.getAttribute("title")||"string"!==t)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},i._enter=function(t,n){var i=this.constructor.DATA_KEY;(n=n||e(t.currentTarget).data(i))||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),e(t.currentTarget).data(i,n)),t&&(n._activeTrigger["focusin"===t.type?"focus":"hover"]=!0),e(n.getTipElement()).hasClass("show")||"show"===n._hoverState?n._hoverState="show":(clearTimeout(n._timeout),n._hoverState="show",n.config.delay&&n.config.delay.show?n._timeout=setTimeout((function(){"show"===n._hoverState&&n.show()}),n.config.delay.show):n.show())},i._leave=function(t,n){var i=this.constructor.DATA_KEY;(n=n||e(t.currentTarget).data(i))||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),e(t.currentTarget).data(i,n)),t&&(n._activeTrigger["focusout"===t.type?"focus":"hover"]=!1),n._isWithActiveTrigger()||(clearTimeout(n._timeout),n._hoverState="out",n.config.delay&&n.config.delay.hide?n._timeout=setTimeout((function(){"out"===n._hoverState&&n.hide()}),n.config.delay.hide):n.hide())},i._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},i._getConfig=function(t){var n=e(this.element).data();return Object.keys(n).forEach((function(t){-1!==V.indexOf(t)&&delete n[t]})),"number"==typeof(t=a(a(a({},this.constructor.Default),n),"object"==typeof t&&t?t:{})).delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),c.typeCheckConfig(U,t,this.constructor.DefaultType),t.sanitize&&(t.template=H(t.template,t.whiteList,t.sanitizeFn)),t},i._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},i._cleanTipClass=function(){var t=e(this.getTipElement()),n=t.attr("class").match(W);null!==n&&n.length&&t.removeClass(n.join(""))},i._handlePopperPlacementChange=function(t){this.tip=t.instance.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},i._fixTransition=function(){var t=this.getTipElement(),n=this.config.animation;null===t.getAttribute("x-placement")&&(e(t).removeClass("fade"),this.config.animation=!1,this.hide(),this.show(),this.config.animation=n)},t._jQueryInterface=function(n){return this.each((function(){var i=e(this).data("bs.tooltip"),o="object"==typeof n&&n;if((i||!/dispose|hide/.test(n))&&(i||(i=new t(this,o),e(this).data("bs.tooltip",i)),"string"==typeof n)){if("undefined"==typeof i[n])throw new TypeError('No method named "'+n+'"');i[n]()}}))},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}},{key:"Default",get:function(){return X}},{key:"NAME",get:function(){return U}},{key:"DATA_KEY",get:function(){return"bs.tooltip"}},{key:"Event",get:function(){return Y}},{key:"EVENT_KEY",get:function(){return".bs.tooltip"}},{key:"DefaultType",get:function(){return z}}]),t}();e.fn[U]=$._jQueryInterface,e.fn[U].Constructor=$,e.fn[U].noConflict=function(){return e.fn[U]=M,$._jQueryInterface};var J="popover",G=e.fn[J],Z=new RegExp("(^|\\s)bs-popover\\S+","g"),tt=a(a({},$.Default),{},{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),et=a(a({},$.DefaultType),{},{content:"(string|element|function)"}),nt={HIDE:"hide.bs.popover",HIDDEN:"hidden.bs.popover",SHOW:"show.bs.popover",SHOWN:"shown.bs.popover",INSERTED:"inserted.bs.popover",CLICK:"click.bs.popover",FOCUSIN:"focusin.bs.popover",FOCUSOUT:"focusout.bs.popover",MOUSEENTER:"mouseenter.bs.popover",MOUSELEAVE:"mouseleave.bs.popover"},it=function(t){var n,i;function s(){return t.apply(this,arguments)||this}i=t,(n=s).prototype=Object.create(i.prototype),n.prototype.constructor=n,n.__proto__=i;var r=s.prototype;return r.isWithContent=function(){return this.getTitle()||this._getContent()},r.addAttachmentClass=function(t){e(this.getTipElement()).addClass("bs-popover-"+t)},r.getTipElement=function(){return this.tip=this.tip||e(this.config.template)[0],this.tip},r.setContent=function(){var t=e(this.getTipElement());this.setElementContent(t.find(".popover-header"),this.getTitle());var n=this._getContent();"function"==typeof n&&(n=n.call(this.element)),this.setElementContent(t.find(".popover-body"),n),t.removeClass("fade show")},r._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},r._cleanTipClass=function(){var t=e(this.getTipElement()),n=t.attr("class").match(Z);null!==n&&n.length>0&&t.removeClass(n.join(""))},s._jQueryInterface=function(t){return this.each((function(){var n=e(this).data("bs.popover"),i="object"==typeof t?t:null;if((n||!/dispose|hide/.test(t))&&(n||(n=new s(this,i),e(this).data("bs.popover",n)),"string"==typeof t)){if("undefined"==typeof n[t])throw new TypeError('No method named "'+t+'"');n[t]()}}))},o(s,null,[{key:"VERSION",get:function(){return"4.5.0"}},{key:"Default",get:function(){return tt}},{key:"NAME",get:function(){return J}},{key:"DATA_KEY",get:function(){return"bs.popover"}},{key:"Event",get:function(){return nt}},{key:"EVENT_KEY",get:function(){return".bs.popover"}},{key:"DefaultType",get:function(){return et}}]),s}($);e.fn[J]=it._jQueryInterface,e.fn[J].Constructor=it,e.fn[J].noConflict=function(){return e.fn[J]=G,it._jQueryInterface};var ot="scrollspy",st=e.fn[ot],rt={offset:10,method:"auto",target:""},at={offset:"number",method:"string",target:"(string|element)"},lt=function(){function t(t,n){var i=this;this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(n),this._selector=this._config.target+" .nav-link,"+this._config.target+" .list-group-item,"+this._config.target+" .dropdown-item",this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,e(this._scrollElement).on("scroll.bs.scrollspy",(function(t){return i._process(t)})),this.refresh(),this._process()}var n=t.prototype;return n.refresh=function(){var t=this,n=this._scrollElement===this._scrollElement.window?"offset":"position",i="auto"===this._config.method?n:this._config.method,o="position"===i?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),[].slice.call(document.querySelectorAll(this._selector)).map((function(t){var n,s=c.getSelectorFromElement(t);if(s&&(n=document.querySelector(s)),n){var r=n.getBoundingClientRect();if(r.width||r.height)return[e(n)[i]().top+o,s]}return null})).filter((function(t){return t})).sort((function(t,e){return t[0]-e[0]})).forEach((function(e){t._offsets.push(e[0]),t._targets.push(e[1])}))},n.dispose=function(){e.removeData(this._element,"bs.scrollspy"),e(this._scrollElement).off(".bs.scrollspy"),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},n._getConfig=function(t){if("string"!=typeof(t=a(a({},rt),"object"==typeof t&&t?t:{})).target&&c.isElement(t.target)){var n=e(t.target).attr("id");n||(n=c.getUID(ot),e(t.target).attr("id",n)),t.target="#"+n}return c.typeCheckConfig(ot,t,at),t},n._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},n._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},n._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},n._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),t>=n){var i=this._targets[this._targets.length-1];this._activeTarget!==i&&this._activate(i)}else{if(this._activeTarget&&t<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(var o=this._offsets.length;o--;){this._activeTarget!==this._targets[o]&&t>=this._offsets[o]&&("undefined"==typeof this._offsets[o+1]||t<this._offsets[o+1])&&this._activate(this._targets[o])}}},n._activate=function(t){this._activeTarget=t,this._clear();var n=this._selector.split(",").map((function(e){return e+'[data-target="'+t+'"],'+e+'[href="'+t+'"]'})),i=e([].slice.call(document.querySelectorAll(n.join(","))));i.hasClass("dropdown-item")?(i.closest(".dropdown").find(".dropdown-toggle").addClass("active"),i.addClass("active")):(i.addClass("active"),i.parents(".nav, .list-group").prev(".nav-link, .list-group-item").addClass("active"),i.parents(".nav, .list-group").prev(".nav-item").children(".nav-link").addClass("active")),e(this._scrollElement).trigger("activate.bs.scrollspy",{relatedTarget:t})},n._clear=function(){[].slice.call(document.querySelectorAll(this._selector)).filter((function(t){return t.classList.contains("active")})).forEach((function(t){return t.classList.remove("active")}))},t._jQueryInterface=function(n){return this.each((function(){var i=e(this).data("bs.scrollspy");if(i||(i=new t(this,"object"==typeof n&&n),e(this).data("bs.scrollspy",i)),"string"==typeof n){if("undefined"==typeof i[n])throw new TypeError('No method named "'+n+'"');i[n]()}}))},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}},{key:"Default",get:function(){return rt}}]),t}();e(window).on("load.bs.scrollspy.data-api",(function(){for(var t=[].slice.call(document.querySelectorAll('[data-spy="scroll"]')),n=t.length;n--;){var i=e(t[n]);lt._jQueryInterface.call(i,i.data())}})),e.fn[ot]=lt._jQueryInterface,e.fn[ot].Constructor=lt,e.fn[ot].noConflict=function(){return e.fn[ot]=st,lt._jQueryInterface};var ct=e.fn.tab,ht=function(){function t(t){this._element=t}var n=t.prototype;return n.show=function(){var t=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&e(this._element).hasClass("active")||e(this._element).hasClass("disabled"))){var n,i,o=e(this._element).closest(".nav, .list-group")[0],s=c.getSelectorFromElement(this._element);if(o){var r="UL"===o.nodeName||"OL"===o.nodeName?"> li > .active":".active";i=(i=e.makeArray(e(o).find(r)))[i.length-1]}var a=e.Event("hide.bs.tab",{relatedTarget:this._element}),l=e.Event("show.bs.tab",{relatedTarget:i});if(i&&e(i).trigger(a),e(this._element).trigger(l),!l.isDefaultPrevented()&&!a.isDefaultPrevented()){s&&(n=document.querySelector(s)),this._activate(this._element,o);var h=function(){var n=e.Event("hidden.bs.tab",{relatedTarget:t._element}),o=e.Event("shown.bs.tab",{relatedTarget:i});e(i).trigger(n),e(t._element).trigger(o)};n?this._activate(n,n.parentNode,h):h()}}},n.dispose=function(){e.removeData(this._element,"bs.tab"),this._element=null},n._activate=function(t,n,i){var o=this,s=(!n||"UL"!==n.nodeName&&"OL"!==n.nodeName?e(n).children(".active"):e(n).find("> li > .active"))[0],r=i&&s&&e(s).hasClass("fade"),a=function(){return o._transitionComplete(t,s,i)};if(s&&r){var l=c.getTransitionDurationFromElement(s);e(s).removeClass("show").one(c.TRANSITION_END,a).emulateTransitionEnd(l)}else a()},n._transitionComplete=function(t,n,i){if(n){e(n).removeClass("active");var o=e(n.parentNode).find("> .dropdown-menu .active")[0];o&&e(o).removeClass("active"),"tab"===n.getAttribute("role")&&n.setAttribute("aria-selected",!1)}if(e(t).addClass("active"),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!0),c.reflow(t),t.classList.contains("fade")&&t.classList.add("show"),t.parentNode&&e(t.parentNode).hasClass("dropdown-menu")){var s=e(t).closest(".dropdown")[0];if(s){var r=[].slice.call(s.querySelectorAll(".dropdown-toggle"));e(r).addClass("active")}t.setAttribute("aria-expanded",!0)}i&&i()},t._jQueryInterface=function(n){return this.each((function(){var i=e(this),o=i.data("bs.tab");if(o||(o=new t(this),i.data("bs.tab",o)),"string"==typeof n){if("undefined"==typeof o[n])throw new TypeError('No method named "'+n+'"');o[n]()}}))},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}}]),t}();e(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',(function(t){t.preventDefault(),ht._jQueryInterface.call(e(this),"show")})),e.fn.tab=ht._jQueryInterface,e.fn.tab.Constructor=ht,e.fn.tab.noConflict=function(){return e.fn.tab=ct,ht._jQueryInterface};var ut=e.fn.toast,dt={animation:"boolean",autohide:"boolean",delay:"number"},ft={animation:!0,autohide:!0,delay:500},gt=function(){function t(t,e){this._element=t,this._config=this._getConfig(e),this._timeout=null,this._setListeners()}var n=t.prototype;return n.show=function(){var t=this,n=e.Event("show.bs.toast");if(e(this._element).trigger(n),!n.isDefaultPrevented()){this._config.animation&&this._element.classList.add("fade");var i=function(){t._element.classList.remove("showing"),t._element.classList.add("show"),e(t._element).trigger("shown.bs.toast"),t._config.autohide&&(t._timeout=setTimeout((function(){t.hide()}),t._config.delay))};if(this._element.classList.remove("hide"),c.reflow(this._element),this._element.classList.add("showing"),this._config.animation){var o=c.getTransitionDurationFromElement(this._element);e(this._element).one(c.TRANSITION_END,i).emulateTransitionEnd(o)}else i()}},n.hide=function(){if(this._element.classList.contains("show")){var t=e.Event("hide.bs.toast");e(this._element).trigger(t),t.isDefaultPrevented()||this._close()}},n.dispose=function(){clearTimeout(this._timeout),this._timeout=null,this._element.classList.contains("show")&&this._element.classList.remove("show"),e(this._element).off("click.dismiss.bs.toast"),e.removeData(this._element,"bs.toast"),this._element=null,this._config=null},n._getConfig=function(t){return t=a(a(a({},ft),e(this._element).data()),"object"==typeof t&&t?t:{}),c.typeCheckConfig("toast",t,this.constructor.DefaultType),t},n._setListeners=function(){var t=this;e(this._element).on("click.dismiss.bs.toast",'[data-dismiss="toast"]',(function(){return t.hide()}))},n._close=function(){var t=this,n=function(){t._element.classList.add("hide"),e(t._element).trigger("hidden.bs.toast")};if(this._element.classList.remove("show"),this._config.animation){var i=c.getTransitionDurationFromElement(this._element);e(this._element).one(c.TRANSITION_END,n).emulateTransitionEnd(i)}else n()},t._jQueryInterface=function(n){return this.each((function(){var i=e(this),o=i.data("bs.toast");if(o||(o=new t(this,"object"==typeof n&&n),i.data("bs.toast",o)),"string"==typeof n){if("undefined"==typeof o[n])throw new TypeError('No method named "'+n+'"');o[n](this)}}))},o(t,null,[{key:"VERSION",get:function(){return"4.5.0"}},{key:"DefaultType",get:function(){return dt}},{key:"Default",get:function(){return ft}}]),t}();e.fn.toast=gt._jQueryInterface,e.fn.toast.Constructor=gt,e.fn.toast.noConflict=function(){return e.fn.toast=ut,gt._jQueryInterface},t.Alert=d,t.Button=g,t.Carousel=E,t.Collapse=D,t.Dropdown=j,t.Modal=R,t.Popover=it,t.Scrollspy=lt,t.Tab=ht,t.Toast=gt,t.Tooltip=$,t.Util=c,Object.defineProperty(t,"__esModule",{value:!0})}));

/**
 * @file
 * Global utilities.
 *
 */
 (function ($, Drupal) {

  'use strict';

  Drupal.behaviors.bootstrap_barrio_subtheme = {
    attach: function (context, settings) {
      $('[data-toggle="tooltip"]').tooltip();

      var $self = this;
      $('select', context).on('change', function () {
        $self.classOnSelector($(this));
      });

      var $inputElements = $('.js-form-type-radio > input[type="radio"], .js-form-type-checkbox > input[type="checkbox"]', context);

      $inputElements.each(function() {
        if ($(this).is(':checked')) {
          $(this).parent('.js-form-type-radio, .js-form-type-checkbox').addClass('is-checked');
        }
      });

      $inputElements.once('input-init').on('change', function (e) {
        if ($(this).is(':checked')) {
          $(this).parent('.js-form-type-radio, .js-form-type-checkbox').addClass('is-checked');
        }
        else {
          $(this).parent('.js-form-type-radio, .js-form-type-checkbox').removeClass('is-checked');
        }

        if ($(this).attr('type') === 'radio') {
          $('input[name="' + $(this).attr('name') + '"').each(function() {
            if ($(this).is(':checked')) {
              $(this).parent('.js-form-type-radio').addClass('is-checked');
            }
            else {
              $(this).parent('.js-form-type-radio').removeClass('is-checked');
            }
          });
        }

      });


      $(document).once('mini-cart-close').on('mousedown', function(e) {
        // Closes mini cart header
        var container = $('.cart--cart-block');
        if (!container.is(e.target) && container.has(e.target).length === 0) {
          $('.cart-block--contents').removeClass('cart-block--contents__expanded').slideUp();
        }
      });

      var position = $(window).scrollTop();
      var headerHeight = $('#header').outerHeight();
      $(window).scroll(function () {
        if ($(this).scrollTop() > headerHeight) {
          $('body').addClass('scrolled');
        }
        else {
          $('body').removeClass('scrolled');
        }
        var scroll = $(window).scrollTop();
        if (scroll > position) {
          $('body').addClass('scrolldown');
          $('body').removeClass('scrollup');
        }
        else {
          $('body').addClass('scrollup');
          $('body').removeClass('scrolldown');
        }
        position = scroll;

        var heightheaderAdmin = $('#page-wrapper').offset().top;
        if ($('body.user-logged-in').hasClass('scrolled')) {
          $('body header').css('top', heightheaderAdmin);
        }
        else {
          $('body header').css('top', '0');
        }
      });

      $('.mobile-summary-toggle', context).once('mobile-summary-toggle-click').on('click', function() {
        var $resaleSidebar = $(this).parents('.resale-confirm-sidebar');

        $resaleSidebar.toggleClass('show');
      });

      // Reduced menu - personal account
      $('.sidebar-menu-trigger', context).once('sidebar-menu-trigger-click').on('click', function() {
        $('body').toggleClass('menu-reduced');
      });

      $('.scroller .top', context).once('scroll-top-on-click').click(function () {
        //Scroll to top button
        $('html, body').animate({
          scrollTop: 0
        }, 200);
      });

      //Home : Prevent click on information block offre vignette
      $('.more-info-desc', context).once('more-info-desc-on-click').click(function () {
        return false;
      });

      // Toggle stadium plan - Ticketing
      $('.plan-toggler', context).once('plan-toggler-click').on('click', function() {
        $(this).toggleClass('open');
        $('#commerce-product-ticketing-bloc-content-auto').toggleClass('d-none');
        $('.ticket-content').toggleClass('mx-auto');
      });

      // Search in menu
      $('.header .btn-search', context).once('search-toggler-click').on('click', function() {
        $(this).parents('.search-form').toggleClass('active');
        $(this).parents('.search-form').find('.form-search').focus();
        $(this).parents('.search-form').find('.js-form-submit').addClass('disabled').prop('disabled', true);
      });

      $('.searchwrap').find('.js-form-submit').addClass('disabled');

      $('.form-search', context).once('search-input-change').on('change keyup', function(){
        if ($(this).val().length > 0) {
          $(this).parents('.searchwrap').find('.js-form-submit').removeClass('disabled').prop('disabled', false);
        } else {
          $(this).parents('.searchwrap').find('.js-form-submit').addClass('disabled').prop('disabled', true);
        }
      });

      $(context).find('select').each(function(){
        $self.classOnSelector($(this));
      });

      $('.searchbutton', context).once('search-click').click(function () {
        $(this).parent().toggleClass('active');
      });

      $('.hubber-menu__menu--menu-header-instit .hubber-menu__menu-title', context).once('hubber-menu-init').click(function (e) {
        $(this).parent().toggleClass('open');
      });
      $('.hubber-menu__menu-list-item--parent', context).once('hubber-menu-init').click(function (e) {
        $(this).toggleClass('open');
      });
      //Close Institutionnal & Main Menu if opened when closing burger menu
      $('.hubber-menu-close', context).once('hubber-menu-init').click(function (e) {
        $('.hubber-menu__menu-list-item--parent, .hubber-menu__menu--menu-header-instit').removeClass('open');
      });

      // Mobile Cart recap behavior
      $('fieldset.cart-wrapper legend', context).once('cart-mobile-init').click(function () {
        if ($(window).width() > 769) {
          return;
        }
        $(this).parent().toggleClass('openRecap');
        $('#page-wrapper').removeClass('overlay');
      });

      // Mobile close pop in information
      $('.js-information', context).once('js-info-mobile-init').click(function (e) {
        if ($(window).width() > 769) {
          return;
        }
        e.stopPropagation();
        $(this).find('.js-info-details').css('display', 'block');
        $(this).find('.js-info-details').once().prepend('<span class="closecross"></span>');
        $('.closecross').click(function (e) {
          e.stopPropagation();
          $(this).parent().css('display', 'none');
        });
      });

      // Close search or info details by clicking anywhere in the page
      $(document).click(function (e) {
        if (!$(e.target).closest('.search').length) {
          $('.search.active').removeClass('active');
        }
        if (!$(e.target).closest('.js-info-details').length) {
          $('.js-info-details').hide();
        }
      });

      //HEADER
      // Menu account
      $('#block-hubber-reference8-account-menu', context).once('account-menu-click').on('click', function () {
        $(this).toggleClass('open');
      });

      // hide burger menu toggler if no menu added
      if ($('#header').find('.menu--main').length === 0 && drupalSettings.menu_burger !== 1) {
        $('#header').find('.hubber-menu-toggler').hide();
      }

      // WYSIWYG TABS + ACCORDION
      $('.question_hubber').once('question_hubber_click').on('click', function() {
        $(this).next('.answer_hubber').slideToggle();
      });

      $('.onglet_hubber').once('onglet_hubber_wrap').wrapAll('<div class="onglets_hubber"></div>');
      $('.onglets_hubber').once('onglets_hubber_after').after('<div class="content_onglet"></div>');

      $('.onglet_hubber.head').once('onglet_hubber_head_click').on('click', function() {
        if ($('.onglet_hubber.head').hasClass('active')) {
          $('.onglet_hubber.head').removeClass('active');
          $('.onglet_hubber.head').next('.col_onglet').removeClass('active');
          $('.content_onglet').empty().text();
          $(this).addClass('active');
          $(this).next('.col_onglet').addClass('active');
          $('.content_onglet').append($('.col_onglet.active').html());
        } else {
          $(this).addClass('active');
          $(this).next('.col_onglet').addClass('active');
          $('.content_onglet').append($('.col_onglet.active').html());
        }
      });
    },
    classOnSelector: function (selector) {
      var selectorWrapper = selector.parent('fieldset');

      selectorWrapper.addClass('custom-select-icon');

      if (!selector.val() || selector.val() == '_none') {
        selectorWrapper.removeClass('custom-select-validated');
      }
      else {
        if (!selectorWrapper.hasClass('custom-select-validated')) {
          selectorWrapper.addClass('custom-select-validated');
        }
      }
    }
  };

  Drupal.behaviors.HubberMenuBurger = {
    attach: function (context, settings) {
      // The if before is here to prevent a "blinking" effect on burger menu
      if (drupalSettings.menu_burger === 1) {
        $('#header').find('.hubber-menu-toggler').css('display','flex');
      }

      const $context = $(context);
      $context.once('menu-hubber-button-processed').on('click', '.hubber-menu-toggler', function (e) {
        e.preventDefault();
        $('.hubber-off-canvas').addClass('menu-open');
        if (drupalSettings.menu_burger === 1) $('.hubber-off-canvas').addClass('force-open');
        $('#page').addClass('is-menu-open');
      });

      $context.once('menu-hubber-close-button-processed').on('click', '.hubber-menu-close', function (e) {
        e.preventDefault();
        e.stopPropagation();
        $('.hubber-off-canvas').removeClass('menu-open').removeClass('force-open');
        $('#page').removeClass('is-menu-open');
      });

      $(document).once('click-outside-menu').on('mousedown', function (e) {
        var $container = $('.hubber-off-canvas.menu-open');
        if (!$container.is(e.target) && $container.has(e.target).length === 0) {
          $('.hubber-off-canvas').removeClass('menu-open').removeClass('force-open');
          $('#page').removeClass('is-menu-open');
        }
      });

      $(window).once('menu-hubber-resize').on('resize', this.controlMainMenu);
      this.controlMainMenu();
    },
    controlMainMenu: function () {
      var $mainMenuLinks = $('.header .menu--main .navbar-nav > li');
      if (!$mainMenuLinks.length) {
        return;
      }
      var $menuToggle = $('.hubber-menu-toggler');
      var $offCanvasRegion = $('.hubber-off-canvas');
      var $mainMenu = $('.header .menu--main .navbar-nav');
      $mainMenu.removeClass('flex-lg-shrink-0');
      $menuToggle.css('display', 'flex').css('visibility', 'hidden');
      $offCanvasRegion.css('display', 'block');
      const initialOffsetTop = $mainMenuLinks[0].offsetTop;
      var forceDisplayBurgerMenu = false;
      $mainMenuLinks.each(function() {
        $(this).removeClass('d-none');
        if (forceDisplayBurgerMenu || $(this)[0].offsetTop !== initialOffsetTop) {
          $(this).addClass('d-none');
          forceDisplayBurgerMenu = true;
        }
      });
      $menuToggle.css('visibility', '');
      $mainMenu.addClass('flex-lg-shrink-0');
      if (!forceDisplayBurgerMenu) {
        $menuToggle.css('display', '');
        $offCanvasRegion.css('display', '');
      }
    }
  };

  Drupal.behaviors.language_switcher_menu = {
    attach: function (context, settings) {
      const $context = $(context);

      if ($(window).width() > 769) {
        //Desktop Menu
        $context.once('language-switcher-loaded').on('click', '.language-switcher-language-url .selector , .language-switcher-language-url a.is-active', function (e) {
          $('.language-switcher-language-url nav').toggleClass('opened');
          e.preventDefault();
        });
      }
      else {
        $context.once('language-switcher-loaded').on('click', '.language-switcher-language-url a.is-active', function (e) {
          e.preventDefault();
          $('.language-switcher-language-url nav').toggleClass('opened');
        });
      }
    }
  };

})(jQuery, Drupal);
;
(function ($, Drupal) {
  'use strict';

  Drupal.behaviors.btnLoader.displayLoaderOnButton = function ($button) {
    let originalHtml = $button.html();
    originalHtml = String(originalHtml)
        .replace(/&/g, '&amp;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#39;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;');
    $button.attr('data-original-content', originalHtml);
    $button.append($('<div class="ajax-progress ajax-progress-throbber"><div class="ajax-loader">' + drupalSettings.ajaxLoader.markup + '</div></div>'));
  }

  Drupal.behaviors.btnLoader.removeLoaderFromButton = function ($button) {
    let originalHtml = $button.attr('data-original-content');
    if (undefined == originalHtml) {
      return;
    }
    originalHtml = String(originalHtml)
        .replace(/&amp;/g, '&')
        .replace(/&quot;/g, '"')
        .replace(/&#39;/g, '\'')
        .replace(/&lt;/g, '<')
        .replace(/&gt;/g, '>');
    $button.html(originalHtml);
    $button.removeClass('btn-loading');
  }

})(jQuery, Drupal);

;
!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"undefined"!=typeof exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";var e=window.Slick||{};(e=function(){var e=0;return function(t,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:i(t),appendDots:i(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return i('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},i.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=i(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,s=i(t).data("slick")||{},n.options=i.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=i.proxy(n.autoPlay,n),n.autoPlayClear=i.proxy(n.autoPlayClear,n),n.autoPlayIterator=i.proxy(n.autoPlayIterator,n),n.changeSlide=i.proxy(n.changeSlide,n),n.clickHandler=i.proxy(n.clickHandler,n),n.selectHandler=i.proxy(n.selectHandler,n),n.setPosition=i.proxy(n.setPosition,n),n.swipeHandler=i.proxy(n.swipeHandler,n),n.dragHandler=i.proxy(n.dragHandler,n),n.keyHandler=i.proxy(n.keyHandler,n),n.instanceUid=e++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,t,o){var s=this;if("boolean"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?i(e).appendTo(s.$slideTrack):o?i(e).insertBefore(s.$slides.eq(t)):i(e).insertAfter(s.$slides.eq(t)):!0===o?i(e).prependTo(s.$slideTrack):i(e).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each(function(e,t){i(t).attr("data-slick-index",e)}),s.$slidesCache=s.$slides,s.reinit()},e.prototype.animateHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.animate({height:e},i.options.speed)}},e.prototype.animateSlide=function(e,t){var o={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(e=-e),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:e},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:e},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),i({animStart:s.currentLeft}).animate({animStart:e},{duration:s.options.speed,easing:s.options.easing,step:function(i){i=Math.ceil(i),!1===s.options.vertical?(o[s.animType]="translate("+i+"px, 0px)",s.$slideTrack.css(o)):(o[s.animType]="translate(0px,"+i+"px)",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),e=Math.ceil(e),!1===s.options.vertical?o[s.animType]="translate3d("+e+"px, 0px, 0px)":o[s.animType]="translate3d(0px,"+e+"px, 0px)",s.$slideTrack.css(o),t&&setTimeout(function(){s.disableTransition(),t.call()},s.options.speed))},e.prototype.getNavTarget=function(){var e=this,t=e.options.asNavFor;return t&&null!==t&&(t=i(t).not(e.$slider)),t},e.prototype.asNavFor=function(e){var t=this.getNavTarget();null!==t&&"object"==typeof t&&t.each(function(){var t=i(this).slick("getSlick");t.unslicked||t.slideHandler(e,!0)})},e.prototype.applyTransition=function(i){var e=this,t={};!1===e.options.fade?t[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:t[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.autoPlay=function(){var i=this;i.autoPlayClear(),i.slideCount>i.options.slidesToShow&&(i.autoPlayTimer=setInterval(i.autoPlayIterator,i.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){var i=this;i.autoPlayTimer&&clearInterval(i.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var i=this,e=i.currentSlide+i.options.slidesToScroll;i.paused||i.interrupted||i.focussed||(!1===i.options.infinite&&(1===i.direction&&i.currentSlide+1===i.slideCount-1?i.direction=0:0===i.direction&&(e=i.currentSlide-i.options.slidesToScroll,i.currentSlide-1==0&&(i.direction=1))),i.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=i(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=i(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},e.prototype.buildDots=function(){var e,t,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),t=i("<ul />").addClass(o.options.dotsClass),e=0;e<=o.getDotCount();e+=1)t.append(i("<li />").append(o.options.customPaging.call(this,o,e)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){i(t).attr("data-slick-index",e).data("originalStyling",i(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?i('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),i("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},e.prototype.buildRows=function(){var i,e,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>1){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),i=0;i<s;i++){var d=document.createElement("div");for(e=0;e<l.options.rows;e++){var a=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=i*r+(e*l.options.slidesPerRow+t);n.get(c)&&a.appendChild(n.get(c))}d.appendChild(a)}o.appendChild(d)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},e.prototype.checkResponsive=function(e,t){var o,s,n,r=this,l=!1,d=r.$slider.width(),a=window.innerWidth||i(window).width();if("window"===r.respondTo?n=a:"slider"===r.respondTo?n=d:"min"===r.respondTo&&(n=Math.min(a,d)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){s=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),l=s),e||!1===l||r.$slider.trigger("breakpoint",[r,l])}},e.prototype.changeSlide=function(e,t){var o,s,n,r=this,l=i(e.currentTarget);switch(l.is("a")&&e.preventDefault(),l.is("li")||(l=l.closest("li")),n=r.slideCount%r.options.slidesToScroll!=0,o=n?0:(r.slideCount-r.currentSlide)%r.options.slidesToScroll,e.data.message){case"previous":s=0===o?r.options.slidesToScroll:r.options.slidesToShow-o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide-s,!1,t);break;case"next":s=0===o?r.options.slidesToScroll:o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide+s,!1,t);break;case"index":var d=0===e.data.index?0:e.data.index||l.index()*r.options.slidesToScroll;r.slideHandler(r.checkNavigable(d),!1,t),l.children().trigger("focus");break;default:return}},e.prototype.checkNavigable=function(i){var e,t;if(e=this.getNavigableIndexes(),t=0,i>e[e.length-1])i=e[e.length-1];else for(var o in e){if(i<e[o]){i=t;break}t=e[o]}return i},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(i("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",i.proxy(e.interrupt,e,!0)).off("mouseleave.slick",i.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),i(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().off("click.slick",e.selectHandler),i(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),i(window).off("resize.slick.slick-"+e.instanceUid,e.resize),i("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),i(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var i,e=this;e.options.rows>1&&((i=e.$slides.children().children()).removeAttr("style"),e.$slider.empty().append(i))},e.prototype.clickHandler=function(i){!1===this.shouldClick&&(i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault())},e.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),i(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){i(this).attr("style",i(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},e.prototype.disableTransition=function(i){var e=this,t={};t[e.transitionType]="",!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.fadeSlide=function(i,e){var t=this;!1===t.cssTransitions?(t.$slides.eq(i).css({zIndex:t.options.zIndex}),t.$slides.eq(i).animate({opacity:1},t.options.speed,t.options.easing,e)):(t.applyTransition(i),t.$slides.eq(i).css({opacity:1,zIndex:t.options.zIndex}),e&&setTimeout(function(){t.disableTransition(i),e.call()},t.options.speed))},e.prototype.fadeSlideOut=function(i){var e=this;!1===e.cssTransitions?e.$slides.eq(i).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(i),e.$slides.eq(i).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(i){var e=this;null!==i&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(i).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(t){t.stopImmediatePropagation();var o=i(this);setTimeout(function(){e.options.pauseOnFocus&&(e.focussed=o.is(":focus"),e.autoPlay())},0)})},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){return this.currentSlide},e.prototype.getDotCount=function(){var i=this,e=0,t=0,o=0;if(!0===i.options.infinite)if(i.slideCount<=i.options.slidesToShow)++o;else for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else if(!0===i.options.centerMode)o=i.slideCount;else if(i.options.asNavFor)for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else o=1+Math.ceil((i.slideCount-i.options.slidesToShow)/i.options.slidesToScroll);return o-1},e.prototype.getLeft=function(i){var e,t,o,s,n=this,r=0;return n.slideOffset=0,t=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=t*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&i+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(i>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(i-n.slideCount))*n.slideWidth*-1,r=(n.options.slidesToShow-(i-n.slideCount))*t*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,r=n.slideCount%n.options.slidesToScroll*t*-1))):i+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(i+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(i+n.options.slidesToShow-n.slideCount)*t),n.slideCount<=n.options.slidesToShow&&(n.slideOffset=0,r=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),e=!1===n.options.vertical?i*n.slideWidth*-1+n.slideOffset:i*t*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow+1),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,e+=(n.$list.width()-o.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(i){return this.options[i]},e.prototype.getNavigableIndexes=function(){var i,e=this,t=0,o=0,s=[];for(!1===e.options.infinite?i=e.slideCount:(t=-1*e.options.slidesToScroll,o=-1*e.options.slidesToScroll,i=2*e.slideCount);t<i;)s.push(t),t=o+e.options.slidesToScroll,o+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return s},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,t,o=this;return t=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(s,n){if(n.offsetLeft-t+i(n).outerWidth()/2>-1*o.swipeLeft)return e=n,!1}),Math.abs(i(e).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(i,e){this.changeSlide({data:{message:"index",index:parseInt(i)}},e)},e.prototype.init=function(e){var t=this;i(t.$slider).hasClass("slick-initialized")||(i(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},e.prototype.initADA=function(){var e=this,t=Math.ceil(e.slideCount/e.options.slidesToShow),o=e.getNavigableIndexes().filter(function(i){return i>=0&&i<e.slideCount});e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function(t){var s=o.indexOf(t);i(this).attr({role:"tabpanel",id:"slick-slide"+e.instanceUid+t,tabindex:-1}),-1!==s&&i(this).attr({"aria-describedby":"slick-slide-control"+e.instanceUid+s})}),e.$dots.attr("role","tablist").find("li").each(function(s){var n=o[s];i(this).attr({role:"presentation"}),i(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+e.instanceUid+s,"aria-controls":"slick-slide"+e.instanceUid+n,"aria-label":s+1+" of "+t,"aria-selected":null,tabindex:"-1"})}).eq(e.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var s=e.currentSlide,n=s+e.options.slidesToShow;s<n;s++)e.$slides.eq(s).attr("tabindex",0);e.activateADA()},e.prototype.initArrowEvents=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},i.changeSlide),i.$nextArrow.off("click.slick").on("click.slick",{message:"next"},i.changeSlide),!0===i.options.accessibility&&(i.$prevArrow.on("keydown.slick",i.keyHandler),i.$nextArrow.on("keydown.slick",i.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(i("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&i("li",e.$dots).on("mouseenter.slick",i.proxy(e.interrupt,e,!0)).on("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",i.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),i(document).on(e.visibilityChange,i.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),i(window).on("orientationchange.slick.slick-"+e.instanceUid,i.proxy(e.orientationChange,e)),i(window).on("resize.slick.slick-"+e.instanceUid,i.proxy(e.resize,e)),i("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),i(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),i(e.setPosition)},e.prototype.initUI=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.show(),i.$nextArrow.show()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.show()},e.prototype.keyHandler=function(i){var e=this;i.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===i.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===i.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},e.prototype.lazyLoad=function(){function e(e){i("img[data-lazy]",e).each(function(){var e=i(this),t=i(this).attr("data-lazy"),o=i(this).attr("data-srcset"),s=i(this).attr("data-sizes")||n.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){e.animate({opacity:0},100,function(){o&&(e.attr("srcset",o),s&&e.attr("sizes",s)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),n.$slider.trigger("lazyLoaded",[n,e,t])})},r.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,e,t])},r.src=t})}var t,o,s,n=this;if(!0===n.options.centerMode?!0===n.options.infinite?s=(o=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(o=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),s=n.options.slidesToShow/2+1+2+n.currentSlide):(o=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,s=Math.ceil(o+n.options.slidesToShow),!0===n.options.fade&&(o>0&&o--,s<=n.slideCount&&s++)),t=n.$slider.find(".slick-slide").slice(o,s),"anticipated"===n.options.lazyLoad)for(var r=o-1,l=s,d=n.$slider.find(".slick-slide"),a=0;a<n.options.slidesToScroll;a++)r<0&&(r=n.slideCount-1),t=(t=t.add(d.eq(r))).add(d.eq(l)),r--,l++;e(t),n.slideCount<=n.options.slidesToShow?e(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?e(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&e(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},e.prototype.loadSlider=function(){var i=this;i.setPosition(),i.$slideTrack.css({opacity:1}),i.$slider.removeClass("slick-loading"),i.initUI(),"progressive"===i.options.lazyLoad&&i.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},e.prototype.orientationChange=function(){var i=this;i.checkResponsive(),i.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){var i=this;i.autoPlayClear(),i.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var i=this;i.autoPlay(),i.options.autoplay=!0,i.paused=!1,i.focussed=!1,i.interrupted=!1},e.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&i(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},e.prototype.prev=e.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},e.prototype.preventDefault=function(i){i.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var t,o,s,n,r,l=this,d=i("img[data-lazy]",l.$slider);d.length?(t=d.first(),o=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||l.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===l.options.adaptiveHeight&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout(function(){l.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger("allImagesLoaded",[l])},e.prototype.refresh=function(e){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),i.extend(s,s.initials,{currentSlide:t}),s.init(),e||s.changeSlide({data:{message:"index",index:t}},!1)},e.prototype.registerBreakpoints=function(){var e,t,o,s=this,n=s.options.responsive||null;if("array"===i.type(n)&&n.length){s.respondTo=s.options.respondTo||"window";for(e in n)if(o=s.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[e].settings}s.breakpoints.sort(function(i,e){return s.options.mobileFirst?i-e:e-i})}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},e.prototype.resize=function(){var e=this;i(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=i(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},e.prototype.removeSlide=e.prototype.slickRemove=function(i,e,t){var o=this;if(i="boolean"==typeof i?!0===(e=i)?0:o.slideCount-1:!0===e?--i:i,o.slideCount<1||i<0||i>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(i).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},e.prototype.setCSS=function(i){var e,t,o=this,s={};!0===o.options.rtl&&(i=-i),e="left"==o.positionProp?Math.ceil(i)+"px":"0px",t="top"==o.positionProp?Math.ceil(i)+"px":"0px",s[o.positionProp]=i,!1===o.transformsEnabled?o.$slideTrack.css(s):(s={},!1===o.cssTransitions?(s[o.animType]="translate("+e+", "+t+")",o.$slideTrack.css(s)):(s[o.animType]="translate3d("+e+", "+t+", 0px)",o.$slideTrack.css(s)))},e.prototype.setDimensions=function(){var i=this;!1===i.options.vertical?!0===i.options.centerMode&&i.$list.css({padding:"0px "+i.options.centerPadding}):(i.$list.height(i.$slides.first().outerHeight(!0)*i.options.slidesToShow),!0===i.options.centerMode&&i.$list.css({padding:i.options.centerPadding+" 0px"})),i.listWidth=i.$list.width(),i.listHeight=i.$list.height(),!1===i.options.vertical&&!1===i.options.variableWidth?(i.slideWidth=Math.ceil(i.listWidth/i.options.slidesToShow),i.$slideTrack.width(Math.ceil(i.slideWidth*i.$slideTrack.children(".slick-slide").length))):!0===i.options.variableWidth?i.$slideTrack.width(5e3*i.slideCount):(i.slideWidth=Math.ceil(i.listWidth),i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0)*i.$slideTrack.children(".slick-slide").length)));var e=i.$slides.first().outerWidth(!0)-i.$slides.first().width();!1===i.options.variableWidth&&i.$slideTrack.children(".slick-slide").width(i.slideWidth-e)},e.prototype.setFade=function(){var e,t=this;t.$slides.each(function(o,s){e=t.slideWidth*o*-1,!0===t.options.rtl?i(s).css({position:"relative",right:e,top:0,zIndex:t.options.zIndex-2,opacity:0}):i(s).css({position:"relative",left:e,top:0,zIndex:t.options.zIndex-2,opacity:0})}),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.css("height",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,t,o,s,n,r=this,l=!1;if("object"===i.type(arguments[0])?(o=arguments[0],l=arguments[1],n="multiple"):"string"===i.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],"responsive"===arguments[0]&&"array"===i.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)r.options[o]=s;else if("multiple"===n)i.each(o,function(i,e){r.options[i]=e});else if("responsive"===n)for(t in s)if("array"!==i.type(r.options.responsive))r.options.responsive=[s[t]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===s[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var i=this;i.setDimensions(),i.setHeight(),!1===i.options.fade?i.setCSS(i.getLeft(i.currentSlide)):i.setFade(),i.$slider.trigger("setPosition",[i])},e.prototype.setProps=function(){var i=this,e=document.body.style;i.positionProp=!0===i.options.vertical?"top":"left","top"===i.positionProp?i.$slider.addClass("slick-vertical"):i.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===i.options.useCSS&&(i.cssTransitions=!0),i.options.fade&&("number"==typeof i.options.zIndex?i.options.zIndex<3&&(i.options.zIndex=3):i.options.zIndex=i.defaults.zIndex),void 0!==e.OTransform&&(i.animType="OTransform",i.transformType="-o-transform",i.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.MozTransform&&(i.animType="MozTransform",i.transformType="-moz-transform",i.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(i.animType=!1)),void 0!==e.webkitTransform&&(i.animType="webkitTransform",i.transformType="-webkit-transform",i.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.msTransform&&(i.animType="msTransform",i.transformType="-ms-transform",i.transitionType="msTransition",void 0===e.msTransform&&(i.animType=!1)),void 0!==e.transform&&!1!==i.animType&&(i.animType="transform",i.transformType="transform",i.transitionType="transition"),i.transformsEnabled=i.options.useTransform&&null!==i.animType&&!1!==i.animType},e.prototype.setSlideClasses=function(i){var e,t,o,s,n=this;if(t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(i).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;e=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(i>=e&&i<=n.slideCount-1-e?n.$slides.slice(i-e+r,i+e+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+i,t.slice(o-e+1+r,o+e+2).addClass("slick-active").attr("aria-hidden","false")),0===i?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):i===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(i).addClass("slick-center")}else i>=0&&i<=n.slideCount-n.options.slidesToShow?n.$slides.slice(i,i+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+i:i,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-i<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},e.prototype.setupInfinite=function(){var e,t,o,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,e=s.slideCount;e>s.slideCount-o;e-=1)t=e-1,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(e=0;e<o+s.slideCount;e+=1)t=e,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each(function(){i(this).attr("id","")})}},e.prototype.interrupt=function(i){var e=this;i||e.autoPlay(),e.interrupted=i},e.prototype.selectHandler=function(e){var t=this,o=i(e.target).is(".slick-slide")?i(e.target):i(e.target).parents(".slick-slide"),s=parseInt(o.attr("data-slick-index"));s||(s=0),t.slideCount<=t.options.slidesToShow?t.slideHandler(s,!1,!0):t.slideHandler(s)},e.prototype.slideHandler=function(i,e,t){var o,s,n,r,l,d=null,a=this;if(e=e||!1,!(!0===a.animating&&!0===a.options.waitForAnimate||!0===a.options.fade&&a.currentSlide===i))if(!1===e&&a.asNavFor(i),o=i,d=a.getLeft(o),r=a.getLeft(a.currentSlide),a.currentLeft=null===a.swipeLeft?r:a.swipeLeft,!1===a.options.infinite&&!1===a.options.centerMode&&(i<0||i>a.getDotCount()*a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else if(!1===a.options.infinite&&!0===a.options.centerMode&&(i<0||i>a.slideCount-a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else{if(a.options.autoplay&&clearInterval(a.autoPlayTimer),s=o<0?a.slideCount%a.options.slidesToScroll!=0?a.slideCount-a.slideCount%a.options.slidesToScroll:a.slideCount+o:o>=a.slideCount?a.slideCount%a.options.slidesToScroll!=0?0:o-a.slideCount:o,a.animating=!0,a.$slider.trigger("beforeChange",[a,a.currentSlide,s]),n=a.currentSlide,a.currentSlide=s,a.setSlideClasses(a.currentSlide),a.options.asNavFor&&(l=(l=a.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(a.currentSlide),a.updateDots(),a.updateArrows(),!0===a.options.fade)return!0!==t?(a.fadeSlideOut(n),a.fadeSlide(s,function(){a.postSlide(s)})):a.postSlide(s),void a.animateHeight();!0!==t?a.animateSlide(d,function(){a.postSlide(s)}):a.postSlide(s)}},e.prototype.startLoad=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.hide(),i.$nextArrow.hide()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.hide(),i.$slider.addClass("slick-loading")},e.prototype.swipeDirection=function(){var i,e,t,o,s=this;return i=s.touchObject.startX-s.touchObject.curX,e=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(e,i),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0?!1===s.options.rtl?"left":"right":o<=360&&o>=315?!1===s.options.rtl?"left":"right":o>=135&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},e.prototype.swipeEnd=function(i){var e,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(e),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},e.prototype.swipeHandler=function(i){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==i.type.indexOf("mouse")))switch(e.touchObject.fingerCount=i.originalEvent&&void 0!==i.originalEvent.touches?i.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),i.data.action){case"start":e.swipeStart(i);break;case"move":e.swipeMove(i);break;case"end":e.swipeEnd(i)}},e.prototype.swipeMove=function(i){var e,t,o,s,n,r,l=this;return n=void 0!==i.originalEvent?i.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(e=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:i.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:i.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==i.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,i.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,!1===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=e+o*s:l.swipeLeft=e+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=e+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},e.prototype.swipeStart=function(i){var e,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return t.touchObject={},!1;void 0!==i.originalEvent&&void 0!==i.originalEvent.touches&&(e=i.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==e?e.pageX:i.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==e?e.pageY:i.clientY,t.dragging=!0},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var i=this;null!==i.$slidesCache&&(i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.appendTo(i.$slideTrack),i.reinit())},e.prototype.unload=function(){var e=this;i(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},e.prototype.unslick=function(i){var e=this;e.$slider.trigger("unslick",[e,i]),e.destroy()},e.prototype.updateArrows=function(){var i=this;Math.floor(i.options.slidesToShow/2),!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&!i.options.infinite&&(i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===i.currentSlide?(i.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-i.options.slidesToShow&&!1===i.options.centerMode?(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-1&&!0===i.options.centerMode&&(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},e.prototype.updateDots=function(){var i=this;null!==i.$dots&&(i.$dots.find("li").removeClass("slick-active").end(),i.$dots.find("li").eq(Math.floor(i.currentSlide/i.options.slidesToScroll)).addClass("slick-active"))},e.prototype.visibility=function(){var i=this;i.options.autoplay&&(document[i.hidden]?i.interrupted=!0:i.interrupted=!1)},i.fn.slick=function(){var i,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(i=0;i<r;i++)if("object"==typeof s||void 0===s?o[i].slick=new e(o[i],s):t=o[i].slick[s].apply(o[i].slick,n),void 0!==t)return t;return o}});
;
/**
 * @file
 * Defines Javascript behaviors for the hubber_partners module.
 */

(function ($, Drupal, drupalSettings) {
  'use strict';

  Drupal.behaviors.hubberPartners = {
    attach: function (context) {

      function slickopts(timer) {
        return {
          dots: false,
          autoplay: true,
          autoplaySpeed: parseInt(timer) * 1000,
          slidesToShow: 1,
          slidesToScroll: 1,
        };
      }
      var setting = drupalSettings;
      if (setting.partner_setting !== undefined) {
        if ($('#block-hubber-partners', context).length > 0) {
          var slider_timer = setting.partner_setting['timer'][0]; // 6 seconds by default
          $('#block-hubber-partners').on('init', function(event, slick){
            $(window).trigger('resize');
          });

          $('#block-hubber-partners').slick(slickopts(slider_timer)).on('afterChange', function (e, slick, currentSlide, nextSlide) {
            $('#block-hubber-partners').slick("setOption", "autoplaySpeed", parseInt(setting.partner_setting['timer'][slick.currentSlide]) * 1000);
          });
        }
      }
    }
  };

})(jQuery, Drupal, drupalSettings);
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function (Drupal, drupalSettings) {
  function mapTextContentToAjaxResponse(content) {
    if (content === '') {
      return false;
    }

    try {
      return JSON.parse(content);
    } catch (e) {
      return false;
    }
  }

  function bigPipeProcessPlaceholderReplacement(placeholderReplacement) {
    var placeholderId = placeholderReplacement.getAttribute('data-big-pipe-replacement-for-placeholder-with-id');
    var content = placeholderReplacement.textContent.trim();

    if (typeof drupalSettings.bigPipePlaceholderIds[placeholderId] !== 'undefined') {
      var response = mapTextContentToAjaxResponse(content);

      if (response === false) {
        once.remove('big-pipe', placeholderReplacement);
      } else {
        var ajaxObject = Drupal.ajax({
          url: '',
          base: false,
          element: false,
          progress: false
        });
        ajaxObject.success(response, 'success');
      }
    }
  }

  var interval = drupalSettings.bigPipeInterval || 50;
  var timeoutID;

  function bigPipeProcessDocument(context) {
    if (!context.querySelector('script[data-big-pipe-event="start"]')) {
      return false;
    }

    once('big-pipe', 'script[data-big-pipe-replacement-for-placeholder-with-id]', context).forEach(bigPipeProcessPlaceholderReplacement);

    if (context.querySelector('script[data-big-pipe-event="stop"]')) {
      if (timeoutID) {
        clearTimeout(timeoutID);
      }

      return true;
    }

    return false;
  }

  function bigPipeProcess() {
    timeoutID = setTimeout(function () {
      if (!bigPipeProcessDocument(document)) {
        bigPipeProcess();
      }
    }, interval);
  }

  bigPipeProcess();
  window.addEventListener('load', function () {
    if (timeoutID) {
      clearTimeout(timeoutID);
    }

    bigPipeProcessDocument(document);
  });
})(Drupal, drupalSettings);;
